(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1038965,      19758]
NotebookOptionsPosition[   1017771,      19410]
NotebookOutlinePosition[   1018629,      19436]
CellTagsIndexPosition[   1018547,      19431]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica", "Title",
 CellChangeTimes->{{3.8964405341484466`*^9, 
  3.8964406203374057`*^9}},ExpressionUUID->"cfdc85b7-5231-4133-9449-\
e857906b3f68"],

Cell["\<\
It is the name of the software.
It works like Excel when we\[CloseCurlyQuote]re going to use a formulae, we \
have to be careful with what we use, the name, the list of parameters, etc.
There is a programming language involved, its name is Wolfram Language.
Mathematica offers plenty of tools, the most of them (we, here, now, are not \
interested in).
This presentation intention is to go as directly as possible to model and \
simulate\
\>", "Text",
 CellChangeTimes->{{3.896440681004419*^9, 3.896440700477734*^9}, {
  3.896441238414543*^9, 3.896441401382313*^9}, {3.8964414519153275`*^9, 
  3.896441567228279*^9}},ExpressionUUID->"ecb3152d-062b-49ab-9685-\
69ebfe46c7b6"],

Cell[CellGroupData[{

Cell["Notebook", "Subtitle",
 CellChangeTimes->{{3.8964406282658176`*^9, 
  3.896440633294715*^9}},ExpressionUUID->"be174d81-0617-4342-96fb-\
c1f74a46ceab"],

Cell["\<\
Or the way we must use in order to communicate with the kernel (of Wolfram).
We can create a document like this one.
We can interact with the kernel using Wolfram Language.
What we insert:\
\>", "Text",
 CellChangeTimes->{{3.8964418959880714`*^9, 3.8964419585154133`*^9}, {
   3.8964421311508703`*^9, 3.8964422217979593`*^9}, 
   3.8964422616266737`*^9},ExpressionUUID->"ae5fcd79-8d99-4f31-9600-\
9c0c31004902"],

Cell["Title", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442331369113*^9}},ExpressionUUID->"fee7b09e-637f-433f-8687-\
58f5911821e9"],

Cell["Subtitle", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442334136841*^9}},ExpressionUUID->"e86d4c37-c552-4f2a-ae5e-\
44d4e3a2a294"],

Cell["Chapter", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.8964423359112706`*^9}},ExpressionUUID->"188a862a-abe6-4c8c-b38b-\
1fd849d5a82a"],

Cell["Section", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442357292842*^9}},ExpressionUUID->"5377f3bb-d850-496e-8685-\
7c38b7d3342d"],

Cell["Subsection", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442360621399*^9}},ExpressionUUID->"1cbb642e-037b-419c-9cba-\
38fc23602563"],

Cell["Subsubsection", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.8964423638698688`*^9}},ExpressionUUID->"df96fb61-58d1-439d-8de7-\
6c09f7e6437a"],

Cell["Text", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 3.896442363561035*^9}, {
  3.8964423943289733`*^9, 
  3.8964423963198633`*^9}},ExpressionUUID->"1bbec468-b95d-4cc6-8eca-\
2201d9b5b467"],

Cell["Code", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 3.896442363561035*^9}, {
  3.8964423943289733`*^9, 
  3.8964423982901525`*^9}},ExpressionUUID->"4a915036-09c8-4964-822c-\
ff1c9698e1aa"],

Cell["Input\[AliasDelimiter]", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 3.896442363561035*^9}, {
   3.8964423943289733`*^9, 3.896442399803338*^9}, 
   3.896442532091134*^9},ExpressionUUID->"cb49a242-2cb4-4f59-a560-\
fe207dfb2cfe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c5f1592c-4752-4c86-98c8-089d204a97b6"],

Cell[CellGroupData[{

Cell["Math operations", "Section",
 CellChangeTimes->{{3.8965414202931576`*^9, 
  3.89654144312446*^9}},ExpressionUUID->"5712ec21-4962-4d1d-ad51-\
6481441f24d2"],

Cell[BoxData[
 RowBox[{"13", "+", "2"}]], "Input",
 CellChangeTimes->{{3.896541461448537*^9, 3.896541461448537*^9}, {
  3.896541587899131*^9, 3.896541705799719*^9}, {3.8965437844813256`*^9, 
  3.896543787506319*^9}},
 CellLabel->"",ExpressionUUID->"649c27e3-dc96-4403-b300-ae3ba10c3065"],

Cell[BoxData[
 RowBox[{"13", "-", "2"}]], "Input",
 CellChangeTimes->{{3.8965437902763195`*^9, 3.8965437943563185`*^9}},
 CellLabel->"",ExpressionUUID->"3b1a4463-7f69-445a-ad06-464ae10b373b"],

Cell[BoxData[
 RowBox[{"13", "*", "2"}]], "Input",
 CellChangeTimes->{{3.896543796790428*^9, 3.896543800294078*^9}},
 CellLabel->"",ExpressionUUID->"fcf10900-9004-472b-ae3d-7646a4db43c8"],

Cell[BoxData[
 RowBox[{"13", "/", "2"}]], "Input",
 CellChangeTimes->{{3.896543804196289*^9, 3.8965438073325315`*^9}, {
  3.896544359240938*^9, 3.8965443746323466`*^9}, {3.896544460738705*^9, 
  3.896544466339952*^9}},ExpressionUUID->"1e56e503-5ef1-4082-bc00-\
7db10389732b"],

Cell["Numerical Value", "Text",
 CellChangeTimes->{{3.8965448817108107`*^9, 
  3.8965448943739667`*^9}},ExpressionUUID->"d1ce020d-1238-406a-853a-\
e2fe68a56a66"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"23", "/", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965470635546803`*^9, 3.8965470636146803`*^9}, {
  3.896547136153414*^9, 3.896547136218362*^9}, {3.8965473382057357`*^9, 
  3.896547342406472*^9}, {3.8965585439067698`*^9, 
  3.896558545345671*^9}},ExpressionUUID->"c8fa79d2-eee8-48c4-9316-\
37a40d49bc6f"],

Cell["Square Brackets", "Text",
 CellChangeTimes->{{3.896558550513514*^9, 
  3.8965585650954666`*^9}},ExpressionUUID->"7d16275e-7d25-43e0-88ed-\
40b6801c3a8c"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965471556592817`*^9, 3.8965471557342815`*^9}, {
  3.896547204227293*^9, 
  3.8965472161317115`*^9}},ExpressionUUID->"e150f3a7-7a7e-4a98-8f96-\
7cf6afa462f4"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.896547176915294*^9, 
  3.8965471991392164`*^9}},ExpressionUUID->"6e6f11da-f294-416e-a690-\
aeab5f80903f"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965471883871727`*^9, 
  3.8965471884671755`*^9}},ExpressionUUID->"8e175956-77ea-4920-bc09-\
1cfd98137fd0"],

Cell["Free-Form input", "Text",
 CellChangeTimes->{{3.8965478265371304`*^9, 
  3.8965478981016235`*^9}},ExpressionUUID->"5de6e67d-7da3-4921-951a-\
ac20fb2e7f31"],

Cell["23/3", "WolframAlphaShort",
 CellChangeTimes->{
  3.8965486709486837`*^9},ExpressionUUID->"4738b626-7675-42ee-93b2-\
0a44184914c9"],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"23", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965438106938753`*^9, 3.896543814853876*^9}, {
  3.8965470670901766`*^9, 3.896547067155176*^9}},
 CellLabel->"",ExpressionUUID->"7a5b4706-07cb-4d0d-9ced-700d54d19955"],

Cell[BoxData[
 RowBox[{"Quotient", "[", 
  RowBox[{"23", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896543825914697*^9, 3.8965438339262147`*^9}, {
  3.8965470705456066`*^9, 3.8965470706106052`*^9}, {3.896547793644548*^9, 
  3.8965477966995473`*^9}, {3.8965581844763207`*^9, 
  3.8965582056916294`*^9}},ExpressionUUID->"b11e6210-cc4e-4599-92c8-\
2c7f86e7b0f6"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"23", "/", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965438431002665`*^9, 3.8965438451785483`*^9}, {
  3.896546937954912*^9, 3.8965469642129135`*^9}, {3.8965470739406056`*^9, 
  3.8965470740056057`*^9}},ExpressionUUID->"3f462caf-478c-4dc9-baa9-\
e74e1bacb3bf"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965438471135483`*^9, 3.8965438480585675`*^9}, {
  3.8965466566415567`*^9, 3.896546656799448*^9}, {3.8965468266023064`*^9, 
  3.896546856410241*^9}, {3.896546957862547*^9, 3.8965470042088113`*^9}, {
  3.896547077525608*^9, 
  3.8965470775906076`*^9}},ExpressionUUID->"3e033b0f-f880-4df8-a01e-\
78a4d9240a1b"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965468657224627`*^9, 3.896546872948872*^9}, {
  3.896547081107438*^9, 
  3.8965470811724586`*^9}},ExpressionUUID->"38f2cc01-8148-4f78-ac32-\
83563802e2f8"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965468764438705`*^9, 3.8965468765394416`*^9}, {
  3.8965470090368233`*^9, 3.8965470112456656`*^9}, {3.896547084083649*^9, 
  3.896547084143669*^9}},ExpressionUUID->"81101c3b-2496-412a-b304-\
873fc7bc587f"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.896547017244668*^9, 3.8965470173046694`*^9}, {
  3.8965470873971834`*^9, 
  3.8965470874522023`*^9}},ExpressionUUID->"e2aaf9aa-8fd0-480e-8dd9-\
f3457147a4cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"13", "/", "3"}]], "Input",
 CellChangeTimes->{{3.896546910913355*^9, 3.8965469118553095`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a1c76086-77bb-4191-b67e-0d5b50834e7a"],

Cell[BoxData[
 FractionBox["13", "3"]], "Output",
 CellChangeTimes->{3.896546912730311*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e1fae550-b6a5-4e83-98f6-c729f23bb92e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["13", "3"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"79fad8f6-4447-4be9-a978-f6751b411cf0"],

Cell[BoxData["4.333333333333333`"], "Output",
 CellChangeTimes->{3.8965469186517544`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"e78af02a-6421-497a-a721-dc3c9045462f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8965468451608458`*^9, 
  3.89654684810399*^9}},ExpressionUUID->"6a3e9b5e-065d-40e0-bb53-\
741da4b6a018"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6f6c21b3-b6f1-42e5-be72-f7a8cb1c1f68"],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.8965414234499717`*^9, 3.8965414332709312`*^9}, {
  3.8965418253340497`*^9, 3.8965418309640503`*^9}, {3.896541874909183*^9, 
  3.8965418757891307`*^9}, {3.8966421047723627`*^9, 
  3.896642106094672*^9}},ExpressionUUID->"d874628d-cde6-4de0-ad14-\
c44c57a7d696"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965414694735374`*^9, 3.8965414694735374`*^9}, {
  3.896541986379822*^9, 3.89654208760273*^9}, {3.896542478423045*^9, 
  3.896542484802853*^9}, {3.8966421295087833`*^9, 3.8966421325936403`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d032a92e-4325-46fe-b7d7-5e8e8ade9f79"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8966421354037204`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"f1d4d74b-2bed-4aad-a8ea-e090e7dff38c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subtract", "[", 
  RowBox[{"5", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896642290504897*^9, 3.8966422969883394`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"57cd8a72-6f66-44dd-bf55-38ef91e80885"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8966422979081984`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"62b590f7-2dc7-43b1-a850-e33a61925321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966421375415435`*^9, 3.896642140531846*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"4f1a4004-c5ee-4c5f-8826-48a02a74f0b4"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8966421410375032`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"b3b3627d-af96-42f5-8b37-70dacee290de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "[", 
  RowBox[{"2", ",", 
   RowBox[{"Plus", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966421569333906`*^9, 3.8966421697410483`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"3578fb7a-f0ad-4a0c-bf57-414a8812c8e5"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.8966421714942083`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"32d1c636-f7a8-48aa-989e-bb4a1d7c8aed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Divide", "[", 
  RowBox[{"7", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896642305579013*^9, 3.896642313448309*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"5429b464-8f37-477b-830e-dbc3f5fd458b"],

Cell[BoxData[
 FractionBox["7", "2"]], "Output",
 CellChangeTimes->{3.896642314378517*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"0043142e-fb06-4885-ad71-db5de59d5dda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966423368336163`*^9, 3.8966423399321365`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"0abce164-53a9-462e-a791-27d2b2c58b64"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.8966423415395184`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"123ed382-3773-4e4a-8af5-62bb4bc2b87e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"2", ",", "7", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966421778310738`*^9, 3.896642185694908*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"d49aa7fc-c5eb-4095-8aea-1c4b0b6cd69c"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.896642186434001*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ad53f5e0-79f3-485d-8a82-5eb7055f2814"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "7", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.896642188593807*^9, 3.896642194834056*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"e1ca9380-1853-4082-912f-c2bcfffac956"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.896642196052169*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"24bbe336-666e-4b4f-94bb-b3c4d6e44add"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{"2", ",", "7", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966423514894285`*^9, 3.8966423693750095`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"112506ac-b3e1-4c6e-8d5e-846b9cbb3667"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.89664236033095*^9, 3.8966423701663256`*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"6adc8313-f431-428d-8d04-72c9f792dd48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8966423766509705`*^9, 3.89664238669104*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e5ab2d6c-ef12-4426-9d24-e1db01db5be7"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.8966423816206665`*^9, 3.8966423873861427`*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"bdb9437f-fa2c-4ae7-b04c-4e691fb1b9fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variables", "Section",
 CellChangeTimes->{{3.8965414234499717`*^9, 3.8965414332709312`*^9}, {
  3.8965418253340497`*^9, 3.8965418309640503`*^9}, {3.896541874909183*^9, 
  3.8965418757891307`*^9}},ExpressionUUID->"b939623c-e98f-4c13-870e-\
8c6588ac6bcd"],

Cell[BoxData[
 RowBox[{"rate", " ", "=", " ", ".18"}]], "Input",
 CellChangeTimes->{{3.8965414694735374`*^9, 3.8965414694735374`*^9}, {
  3.896541986379822*^9, 3.89654208760273*^9}, {3.896542478423045*^9, 
  3.896542484802853*^9}},
 CellLabel->"",ExpressionUUID->"51fe7aeb-ff12-4bf5-a565-6dffa958a395"],

Cell[BoxData[
 RowBox[{"3000", " ", "*", "rate"}]], "Input",ExpressionUUID->"e63fa8b5-c56d-4681-8c08-cdc52a7eb8f9"],

Cell["Case sensitive", "Text",
 CellChangeTimes->{{3.896549329831913*^9, 
  3.8965493339133224`*^9}},ExpressionUUID->"fbd16529-bc4c-4653-9371-\
4a084c1654d6"],

Cell[BoxData[
 RowBox[{"Pi", "*", 
  RowBox[{"14", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.8965493389869094`*^9, 
  3.8965493812759705`*^9}},ExpressionUUID->"93477270-4ec6-4324-b979-\
36ea9b399e4a"],

Cell[BoxData[
 RowBox[{"pi", "*", 
  RowBox[{"14", "^", "2"}]}]], "Input",ExpressionUUID->"4151270c-f2c1-4c28-ac42-5225d17fd615"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists", "Section",
 CellChangeTimes->{
  3.896524854616452*^9, {3.8965413072059793`*^9, 
   3.89654130987915*^9}},ExpressionUUID->"852f2ba1-7936-4c52-841f-\
48866a5c462c"],

Cell["alist = {2,3,4,5,19}", "Text",
 CellChangeTimes->{{3.8965410592744737`*^9, 3.8965411381750994`*^9}, {
   3.89654125640088*^9, 3.896541293715915*^9}, {3.896541568613119*^9, 
   3.896541572343112*^9}, 3.89654250148225*^9, 
   3.8965425826265717`*^9},ExpressionUUID->"4c633a31-81d0-4e91-9ff1-\
528ffab705ab"],

Cell["Curly Braces", "Text",
 CellChangeTimes->{{3.896558578596218*^9, 
  3.89655859801698*^9}},ExpressionUUID->"f0efbbdf-9c53-463c-9e7f-\
d080a9146db0"],

Cell[BoxData[
 RowBox[{"Length", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.8967244829268823`*^9, 
  3.8967244905229273`*^9}},ExpressionUUID->"d7451e07-06a5-4584-9c32-\
a7275e4cc8d3"],

Cell[BoxData[
 RowBox[{"Count", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.896724502893421*^9, 
  3.8967245085561175`*^9}},ExpressionUUID->"dc833cce-fc2c-4e38-a018-\
0b44507dd584"],

Cell[BoxData[
 RowBox[{"Min", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.8965425053591704`*^9, 
  3.8965425339817104`*^9}},ExpressionUUID->"268ffe94-196f-47a1-9bc3-\
07d9d38b8c58"],

Cell[BoxData[
 RowBox[{"Max", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.8965425090898743`*^9, 
  3.8965425408785715`*^9}},ExpressionUUID->"a713608c-2532-4ec0-9f49-\
d000204d809c"],

Cell[BoxData[
 RowBox[{"Total", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.8967245545208755`*^9, 
  3.89672456129593*^9}},ExpressionUUID->"f35dd1c2-d864-4e44-aeb1-\
c907f8e6d145"],

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.896724566660927*^9, 
  3.8967245718274717`*^9}},ExpressionUUID->"550c5660-84a9-4a42-b902-\
ceba510f0bec"],

Cell[BoxData[
 RowBox[{"Range", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.8965425111350594`*^9, 3.8965425111350594`*^9}, {
  3.8965425445085697`*^9, 
  3.896542548396103*^9}},ExpressionUUID->"8417752b-0636-401f-90a3-\
9afb6eb5ed7c"],

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"2", ",", "11"}], "]"}]], "Input",
 CellChangeTimes->{{3.896542512961567*^9, 3.896542512961567*^9}, {
  3.8965425525759726`*^9, 
  3.8965425585275035`*^9}},ExpressionUUID->"5313aeb3-bc0c-4784-a114-\
25eab51f8a56"],

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"3", ",", "12", ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965425145784245`*^9, 3.8965425145784245`*^9}, {
  3.896542561567503*^9, 
  3.8965425644146814`*^9}},ExpressionUUID->"1f8aeab4-a112-4c5b-b71f-\
0abe8bee75a1"],

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", "\n", 
  RowBox[{"Goes", " ", "to", " ", "operator"}]}]], "Input",
 CellChangeTimes->{{3.8965425161466904`*^9, 3.8965425161466904`*^9}, 
   3.8965425782565403`*^9, 3.896543999052103*^9, 
   3.89654922330751*^9},ExpressionUUID->"0e5815ec-d434-4fa6-a37f-\
f82afef9219f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8965425179529643`*^9, 3.8965425179529643`*^9}, {
  3.8965439855613008`*^9, 3.8965439909087462`*^9}, {3.8967245269272656`*^9, 
  3.8967245440333805`*^9}},ExpressionUUID->"0b0eb9bd-a4c2-4383-a292-\
f82fa740c1bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Lists", "Section",
 CellChangeTimes->{
  3.896524854616452*^9, {3.8965413072059793`*^9, 3.89654130987915*^9}, {
   3.8967252373341866`*^9, 
   3.8967252422423925`*^9}},ExpressionUUID->"51ef2c9a-ee75-48c2-9198-\
c0fa12c2ce6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "2", ",", " ", "7", ",", " ", "8", ",", " ", "3", ",", " ", "11", ",", " ",
     "4", ",", " ", "5", ",", " ", "19"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8965410592744737`*^9, 3.8965411381750994`*^9}, {
   3.89654125640088*^9, 3.896541293715915*^9}, {3.896541568613119*^9, 
   3.896541572343112*^9}, 3.89654250148225*^9, 3.8965425826265717`*^9, {
   3.89672524510738*^9, 3.89672529149339*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"a6a76a21-8109-4bd8-90c2-25016d14642e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "11", ",", "4", ",", "5", ",", 
   "19"}], "}"}]], "Output",
 CellChangeTimes->{3.896725298513811*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"5729689e-ef5e-431b-96f4-8ace3086df7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"blist", ",", " ", "Greater"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967253030090284`*^9, 3.8967253125639596`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"b2ff3928-0bc6-4487-b853-bf4904a0c18e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "19", ",", "11", ",", "8", ",", "7", ",", "5", ",", "4", ",", "3", ",", 
   "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8967253149078836`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"44959d5a-ba40-4758-96f4-a6e43a0c585f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.8967253178894033`*^9, 3.8967253188010025`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"768e8319-045c-4b10-a6bb-81ea7a4709c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "8", ",", "3", ",", "11", ",", "4", ",", "5", ",", 
   "19"}], "}"}]], "Output",
 CellChangeTimes->{3.8967253198404813`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"2cac4825-fc2e-46e9-aa1c-d7cd38e666fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"blist", ",", "Less"}], "]"}]], "Input",
 CellChangeTimes->{{3.896725327425477*^9, 3.896725332562817*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"53738023-e871-4b82-9315-a93998070029"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "7", ",", "8", ",", "11", ",", 
   "19"}], "}"}]], "Output",
 CellChangeTimes->{3.896725333639098*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d41d9b14-149b-4360-90cf-7f7e9be2c9f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.8967253371243477`*^9, 3.8967253419377646`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"b94d8ae2-e23c-43d7-ac75-bf8647da351e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "19", ",", "5", ",", "4", ",", "11", ",", "3", ",", "8", ",", "7", ",", 
   "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8967253434476647`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"87e363d9-733d-4800-916d-9b2882578dcf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic expressions", "Section",
 CellChangeTimes->{{3.8965414234499717`*^9, 3.8965414332709312`*^9}, {
  3.8965418253340497`*^9, 3.8965418309640503`*^9}, {3.896541874909183*^9, 
  3.8965418757891307`*^9}, {3.8965475473103456`*^9, 
  3.896547563884548*^9}},ExpressionUUID->"97788d0a-bc7f-40eb-91a0-\
e3c73b0306df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"b", " ", "x"}], "+", "c"}], "==", "0"}], ",", " ", "x"}], 
   "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "->", "1"}], ",", 
    RowBox[{"b", "->", "1"}], ",", 
    RowBox[{"c", "->", 
     RowBox[{"-", "5"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8965414694735374`*^9, 3.8965414694735374`*^9}, {
  3.896541986379822*^9, 3.89654208760273*^9}, {3.896542478423045*^9, 
  3.896542484802853*^9}, {3.896547569344496*^9, 3.89654764903714*^9}, {
  3.8965502860942965`*^9, 3.8965503061600657`*^9}, {3.8967317958004904`*^9, 
  3.896731837308627*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"e52a1c6f-3a6f-4e11-bf91-3125da5b5660"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["21"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["21"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8965475937171874`*^9, 3.8965476507025805`*^9}, {
   3.896550289029296*^9, 3.8965503077950654`*^9}, 3.8967317235622425`*^9, {
   3.896731811450923*^9, 3.8967318385863056`*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"7243c7f4-27dd-419f-9dc0-b16a2cdc8483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "->", "1"}], ",", 
   RowBox[{"b", "->", "1"}], ",", 
   RowBox[{"c", "->", "1"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.896731736530938*^9, 3.896731768819393*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"c963e3f3-17b1-4849-87b3-0332ea3abd35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "1"}], ",", 
   RowBox[{"c", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8967317701560307`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"e55f8ee7-57c4-4d1e-b64e-5e1874886634"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "1"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}], ",", "Last"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[77]:=",ExpressionUUID->"87171e3b-b4f5-4e9d-a8c5-2bbd5e74664b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "1"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.896731783643474*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"09a91e6c-8074-4062-be95-abfab1af63eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Solve  a x^2 + b x + c = 0", 
   Typeset`newq$$ = "Solve  a x^2 + b x + c = 0", Typeset`chosen$$ = 
   "Solve[a*x^2 + b*x + c == 0, x]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Solve  a x^2 + b x + c = 0", 
                  Defer[
                   
                   Solve[$CellContext`a $CellContext`x^2 + $CellContext`b \
$CellContext`x + $CellContext`c == 0, $CellContext`x]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Solve  a x^2 + b x + c = 0", 
                    Defer[
                    
                    Solve[$CellContext`a $CellContext`x^2 + $CellContext`b \
$CellContext`x + $CellContext`c == 0, $CellContext`x]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[43]:=",ExpressionUUID->"a55de065-3b7d-4962-98ed-b1930240172c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8965506544083276`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"38352687-910d-4460-a66b-a7f3a31f7633"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "create a table of values for i^2, where i goes from 1 to 5", 
   Typeset`newq$$ = 
   "create a table of values for i^2, where i goes from 1 to 5", 
   Typeset`chosen$$ = "Table[i^2, {i, 1, 5}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "create a table of values for i^2, where i goes from 1 to 5", 
                  Defer[
                   Table[$CellContext`i^2, {$CellContext`i, 1, 5}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"i", "^", "2"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"i", "^", "2"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "create a table of values for i^2, where i goes from 1 to \
5", 
                    Defer[
                    Table[$CellContext`i^2, {$CellContext`i, 1, 5}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[44]:=",ExpressionUUID->"e2f2643e-50c3-483d-8ea9-993cd68103cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.8965508113874016`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6efd41dc-0f50-425d-a46f-5d8b82baf741"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<Peru\>\"", ",", "\"\<LifeExpectancy\>\""}], "]"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"23cf7c72-1fb7-4638-8100-07c3f19a56f0"],

Cell[BoxData[
 TemplateBox[{"74.96`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.896553082367228*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"017219ee-1a96-4481-9665-dd8236723797"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "population of peru", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", "Quantity[3.35*^7, \"People\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Peru\"][EntityProperty[\"Country\", \
\"Population\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Peru\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Peru"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"population\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n  "}], 
       XMLElement["moutput", {}, {"Quantity[3.35*^7, \"People\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["33.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "33.5", "SRString" -> "33.5"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, LineIndent -> 0}], 1000000& , 
                    AutoDelete -> True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["44", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"44", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                 LineIndent -> 0], "\"  \"", 
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Recent population history", "scanner" -> "Data", "id" -> 
     "RecentHistory:Population:CountryData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 144, 145, 50, 143, 119, 140, 98, 115, 136,
                     81, 94, 111, 132, 68, 79, 92, 109, 130, 57, 64, 97, 114, 
                    135, 75, 88, 105, 126, 49, 67, 78, 91, 108, 129, 56, 63, 
                    96, 113, 134, 74, 142, 117, 138, 87, 104, 125, 48, 66, 77,
                     90, 107, 128, 55, 80, 93, 110, 131, 62, 118, 139, 95, 
                    141, 112, 133, 73, 116, 137, 86, 103, 124, 47, 65, 76, 89,
                     106, 127, 54, 61, 72, 85, 102, 123, 46, 53, 60, 71, 84, 
                    101, 122, 45, 52, 59, 70, 83, 100, 121, 44, 43, 42, 41, 
                    40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
                    26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
                    12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 58, 69, 82, 99, 
                    120}}]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    
                    LineBox[{1, 120, 99, 82, 69, 58, 51, 2, 3, 4, 5, 6, 7, 8, 
                    9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                     24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 
                    38, 39, 40, 41, 42, 43, 44, 121, 100, 83, 70, 59, 52, 45, 
                    122, 101, 84, 71, 60, 53, 46, 123, 102, 85, 72, 61, 54, 
                    127, 106, 89, 76, 65, 47, 124, 103, 86, 137, 116, 73, 133,
                     112, 141, 95, 139, 118, 62, 131, 110, 93, 80, 55, 128, 
                    107, 90, 77, 66, 48, 125, 104, 87, 138, 117, 142, 74, 134,
                     113, 96, 63, 56, 129, 108, 91, 78, 67, 49, 126, 105, 88, 
                    75, 135, 114, 97, 64, 57, 130, 109, 92, 79, 68, 132, 111, 
                    94, 81, 136, 115, 98, 140, 119, 143, 50}]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$2489021#1"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Join[{{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {5, 10, 15, 20, 25, 30, 35, 40}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox[
                    TagBox["20", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox[
                    TagBox["25", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox[
                    TagBox["30", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox[
                    TagBox["35", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{2.2089888*^9, 
                    FormBox[
                    StyleBox["\"1970\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    StyleBox["\"1980\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    StyleBox["\"1990\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    StyleBox["\"2010\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    StyleBox["\"2020\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    StyleBox["\"2030\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2720608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3352192*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3982912*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.4614496*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.58768*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.650752*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7139104*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7769824*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9032128*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9663712*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0294432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0926016*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.218832*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.281904*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.913056*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.9762144*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.0392864*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}, {{2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2720608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3352192*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3982912*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.4614496*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.58768*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.650752*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7139104*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7769824*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9032128*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9663712*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0294432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0926016*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.218832*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.281904*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.913056*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.9762144*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.0392864*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                GridLines -> {{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, Epilog -> {{
                   CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}}, PlotRangeClipping -> False, 
                PlotRangePadding -> None, DisplayFunction -> Identity, 
                Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {2.2089888*^9, 7.366932667738841}, 
                FrameTicks -> {{Automatic, {{10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {25., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {30., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {35., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {17., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {19., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {21., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {22., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {23., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {24., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {26., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {27., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {28., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {29., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {31., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {32., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {33., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {34., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {36., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {37., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {38., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {39., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {40., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{2.25*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.75*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.25*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.75*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.05*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.15*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.35*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.45*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.55*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.65*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.85*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.95*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.05*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.15*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.35*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.45*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.55*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.65*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.85*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.95*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 
                NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {2.2089888*^9, 7.366932667738841}, AxesStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{2208988800, 3818448000}, {7.366932667738841, 
                  36.53680338753287}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1970\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in millions of people\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show projections", "input" -> 
         "RecentHistory:Population:CountryData__Show projections"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "RecentHistory:Population:CountryData__Log scale"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Long-term population history", "scanner" -> "Data", 
     "id" -> "LongTermHistory:Population:CountryData", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1: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
                    "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1He8zmUYB+DjZI9CZctI2bvslZQtURllk5HMQvYoZBeZlZY0zFSkkJW9
yc4MDZRURHTd+eP63N/7eX7n977nGW+ett0bdUtMSEhIQvbEWzVb4q1cSs6q
jjJ4jYx04Qe+MveSep5/5ETPNZI30E8/VL1MSpKba63u5X1z3dVTnJYrqYup
Jy/kN2rpV9Ah4dYXa8o2Jml3UUieTUl5GVd5XP8dfeX3OEVF/SLqyu2ZyE4K
GnubEvJSrtBQv54+cgq1FXt4V3+SCvJC6sgLuEhN/Te0kyewgwL6tyguF6Mo
RahNW8aznfyeeZPC8ou8wwnKG1tALXk+F3hU/zVt5HFs4379LArJLzCb45Qz
Np+acmvGspX7jM2kYLyPVoxhC/mMz6CA/AgteZXN3Gt8OvnjM+M91KAFo9lE
XvPTyCdnUDtzlC/1t9v7fvKv/B3bqX9MXkdvfXK1JbtjT/THKCvP42F5Hufj
e+mX84w8io3k0U/lXjmL946Ms0h6OnGEL8z1VX/hrzhPnmsgr6WXdoj6B8lo
wa7YP+Pd1JNx1uUy6qdUl19Wr5CO1N7VQT0Y87EP6rn4X+V/1RpxT3g61sWz
A+XfuKlPqm8ib2WkfgO55TfIK2c2/4p8lTtIo++oHuZz8+n0feSf+VN/U63P
GnrG+2Ot2BnnTH+UB+VPeEjO5O9HxJ6QllT69uqBeMZ8b/VsrJv8sLqM5nJ6
zw2QL3JD/5S6hVfktOa6ysfjLupzqVPIIy/hMvX0q+khz+IID+g/pprcLNaY
9dxjbDK54zeDmRymtLGPqCrf7TOHx97GGpFS307dH+8030s9E+skV1eX0lQe
wTpy6l8nV+w5MzhEKWNzqSKnVtvyfXyuvqf6Iz/J12M946zTJPadJ+XNDJfX
kkN+jXvk55nOQUoa+5DKsY4MYw3ZjU0iZ9wf9VkO8Vn8VsTnxpmVb6h1+Zau
+tvirLGDafoDlJDnUEmeyzmqxb3gSXkoq8mmn0gO+Tmmsp/ixj6govwhZ6ka
Z5An5Dusd3/5AtfjO+ifkDcxJN6lHovvKGdVJ5BdXswl6uhX0UW+098Oli+R
SDJ9c3V73ItYO/VE7INcTH2fCvIczlBFv4TG8mBWxe+CfjzZ5M5MYR9Fjb1H
ebkRg1gZ987YOLLK5XicgayIO2N8LFnkTkxmL0WMvUtZ+S7feVjcybhTpNC3
UffFOprvoZ6O8yNXjj2loXyNxvJGBsjfxNmWx5BZ7sjr7KGwsXcoIz9Gf76O
zzb2Kpnib6OPNSUjGeLuxn7FmYrfAhrwEsvjOX83mnTyIn6ntn5lnL94h/9j
kPw7SWgWZ9r47ri/1CctaeK+kIqUpCA5yUga5yPh/5/ghNL8B/cAA5Q=
                    "]]}]}, {}, {}}, {{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1:eJwl1mWUVVUYBuAZcsiBoUNSursFpLtDuiQlVBBJ6S4DG6VUwgAElO7u7u5G
RVBA8dnLH8/63nefe+/cOWfvWZO1U9/GfSIjIiLSxYqICLMYYkRs4hCXeMQn
igQkJBGJqUdxDvM+r/mQSH5jGDE+rKv19XKtsC4vIQkT9BSslgdRnxIkJZpk
JCeGFKQkFamZ6H0pWSMPpgElmW0tH0fkD+hGGiZZS8VaeQg75SY8kxuyTK7A
Nfmq2Y/58jGzI/H9HgnMPxkZfrZeyvU5cn6Oyh/SnbRMtpaadfJQGlE63Gem
WE/DenkYjSnDXGsFOCZ/RA/SM9VaWjbIw2nCz/orXJe/oSzz9IIcly+ZvZkp
7zdbEdd3jmX+zvBw7/Werm+Qa4d1eSkZmKanY6N8wezFe/Iusymxvfe5fl8e
TLTeVF8uV+SG/C3lmK8X4oT8Mb3IyHRr6dkkj6AZK/RK3JS/o3z4/fTCnJQ/
4YDcOnwH3tA3mnX4lz/0W+YAlsmnza4k5SV9hpmBzfJImlMhfFdrRTglf0pv
MoU9bS0jW+RR7Jab8Y/cgpVyZZ5zS79mvskC+bjZiYThWYXfxyzKafkz+pA5
7NPw3dgqj6Ylv+ivclu+br7FQvmE2Zko9zuR+ZhRYW/rFV1fIBfjjPw5fckS
9qa1TGyTx4RzSiUWWivOWfkL+rFJr8ujsM/IGvajnpnt8sVw30nsZ47V98jN
w/2XH5hDSOZaK/1XuQp35Bvm2yyST5pdSOB1ic0njA5nRq/s+iK5BOfkLzko
tyFOuL/6ZrMeL8KZ1G+b75DE+5frZ+RuJNKjzb8ZG86dns31mXIWdsjj2Cu3
CJ/v+gv9oTyU5HprfZVcNTx37uo3zf4slk+Zr4fn7LVJzL8YE56fa4vNkpyX
L5vhj+0s+ZDZlrhhz4azFZ6x9S1mfcIf4cfGHXkgK+SzZvdwb3nKONJ6XfZw
ruSs7JTH04bVejXuyd9TJUy9FBfkrzgstyNeeDb6VrMBkT73iX5XfjecH32l
fk7uEe4LL4fzaGZjlzyBtlQlBznJFc6T69nZLU+kHdXIHc5B+Bz2yJNoT3Xy
hP1rPQd75cl0oAY/WCvNRflr+pM37F9rOdknT6Eja/Tq3A/voyY/6mW4JM9m
APnCPrOWi/3yVDpRi/wUoCCFmOU1uTkgT6Mza/UaPAifT21+0styWZ7DEbk9
8cNe1beZDcN+CeedwuGZ6Hk4KE+nC3VYYq0cV+S5DGS73ijs7XDOKBLuh56X
Q/IM9sktw34Ke9RYZ9bkYfh+1GWpXp6r8hWzL/Pko2aHsDc8+yjzESPCfnBt
h9mYWK491e/Jg1glnzd7EsMzxkf+//9FUdf+A39qA1c=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$2278186#1"]& ]}}], {}}, {
                   GridLines -> Dynamic[
                    Join[{{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-7.889184*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-4.7335104*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.7335968*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {0, 10, 20, 30, 40}}, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox[
                    TagBox["5", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox[
                    TagBox["20", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox[
                    TagBox["25", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox[
                    TagBox["30", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox[
                    TagBox["35", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {37., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {37., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{-9.4671072*^9, 
                    FormBox[
                    StyleBox["\"1600\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-7.889184*^9, 
                    FormBox[
                    StyleBox["\"1650\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    StyleBox["\"1700\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-4.7335104*^9, 
                    FormBox[
                    StyleBox["\"1750\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    StyleBox["\"1800\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-1.5778368*^9, 
                    FormBox[
                    StyleBox["\"1850\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    StyleBox["\"1900\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.5778368*^9, 
                    FormBox[
                    StyleBox["\"1950\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {4.7335968*^9, 
                    FormBox[
                    StyleBox["\"2050\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.8359552*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.2048032*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-7.5736512*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.9424992*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-2.524608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.893456*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.262304*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.31152*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.310656*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.2622176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                    GridLines -> {{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-7.889184*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-4.7335104*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.7335968*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, PlotRangePadding -> None, 
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {30., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {22., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {24., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {26., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {28., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {32., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {34., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {36., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {38., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {40., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-7.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, 
                    GridLines -> {{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                    Identity, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 0.3, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                    GrayLevel[0.9], ImageSize -> Full, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> PointSize[Medium], 
                    "PointSizeFunction" -> "SmallPointSize", 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                    PlotRange -> {{-9.4671072*^9, 3.818448*^9}, {
                    0, 38.38553130353622}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                    Ticks -> {Automatic, Automatic}}], 
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1600\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in millions of people\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
                 "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, Alignment -> {Left, Inherited}, 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", #2, "}"}], ",", 
                    TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "]"}]& )]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"population for current political boundaries\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show projections", "input" -> 
         "LongTermHistory:Population:CountryData__Show projections"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "LongTermHistory:Population:CountryData__Log scale"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Demographics", "scanner" -> "Data", "id" -> 
     "DemographicProperties:CountryData", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Country\", \"Peru\"], \
{EntityProperty[\"Country\", \"Population\"], EntityProperty[\"Country\", \
\"PopulationDensity\"], EntityProperty[\"Country\", \"PopulationGrowth\"], \
EntityProperty[\"Country\", \"LifeExpectancy\"], EntityProperty[\"Country\", \
\"MedianAge\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"population\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["33.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "33.5", "SRString" -> "33.5"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, LineIndent -> 0}], 1000000& , 
                    AutoDelete -> True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["44", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"44", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["26.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "26.3", "SRString" -> "26.3"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"km\"", "2"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    "\"people per square kilometer\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], LineIndent -> 0}]}], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["192", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"192", "\[InvisibleSpace]", "\"nd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population growth\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.16", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.16", "SRString" -> "1.16"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"%\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["93", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"93", "\[InvisibleSpace]", "\"rd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"life expectancy\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["76.9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "76.9", "SRString" -> "76.9"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["94", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"94", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2020\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"median age\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["28.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28.2", "SRString" -> "28.2"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["137", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"137", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show rates", "input" -> 
         "DemographicProperties:CountryData__Show rates"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show distribution", "input" -> 
         "DemographicProperties:CountryData__Show distribution"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "DemographicProperties:CountryData__Show non-metric"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {
            "short" -> "%/yr", "long" -> "percent per year"}, {}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Age distribution", "scanner" -> "Data", "id" -> 
     "AgeDistributionPyramidGraphic:AgeDistributionData", "position" -> "600",
      "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{{{
                    Hue[0.67, 0.6, 0.6, 0.15], 
                    EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[0.6]}], {
                    RectangleBox[{-3.487890285714286, 0.}, {0, 0.3}], 
                    RectangleBox[{-3.334233142857143, 0.3}, {0, 0.6}], 
                    
                    RectangleBox[{-3.359757714285715, 0.6}, {
                    0, 0.8999999999999999}], 
                    
                    RectangleBox[{-3.484349714285715, 0.8999999999999999}, {
                    0, 1.2}], 
                    RectangleBox[{-3.1422308571428577`, 1.2}, {0, 1.5}], 
                    
                    RectangleBox[{-2.747997714285715, 1.5}, {
                    0, 1.7999999999999998`}], 
                    
                    RectangleBox[{-2.449524571428572, 1.7999999999999998`}, {
                    0, 2.1}], 
                    RectangleBox[{-2.2060548571428575`, 2.1}, {0, 2.4}], 
                    
                    RectangleBox[{-1.928962285714286, 2.4}, {
                    0, 2.6999999999999997`}], 
                    
                    RectangleBox[{-1.6918171428571431`, 
                    2.6999999999999997`}, {0, 3.}], 
                    RectangleBox[{-1.3849097142857145`, 3.}, {0, 3.3}], 
                    
                    RectangleBox[{-1.1319085714285715`, 3.3}, {
                    0, 3.5999999999999996`}], 
                    
                    RectangleBox[{-0.8437737142857143, 3.5999999999999996`}, {
                    0, 3.9}], 
                    RectangleBox[{-0.6792548571428573, 3.9}, {0, 4.2}], 
                    RectangleBox[{-0.520528, 4.2}, {0, 4.5}], 
                    RectangleBox[{-0.36485257142857147`, 4.5}, {0, 4.8}], 
                    RectangleBox[{-0.22443885714285716`, 4.8}, {0, 5.1}], 
                    
                    RectangleBox[{-0.07744914285714287, 5.1}, {
                    0, 5.3999999999999995`}], 
                    
                    RectangleBox[{-0.019787428571428574`, 
                    5.3999999999999995`}, {0, 5.7}], 
                    RectangleBox[{-0.0032114285714285717`, 5.7}, {0, 6.}], 
                    
                    RectangleBox[{-0.0002651428571428572, 6.}, {
                    0, 6.3}]}}, {}, {
                    GrayLevel[0.3], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"0-4\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 0.15}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"5-9\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 0.44999999999999996`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"10-14\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 0.75}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"15-19\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.05}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"20-24\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.3499999999999999`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"25-29\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.65}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"30-34\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.95}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"35-39\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 2.25}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"40-44\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 2.55}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"45-49\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 2.85}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"50-54\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 3.15}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"55-59\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 3.4499999999999997`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"60-64\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 3.75}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"65-69\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.05}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"70-74\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.35}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"75-79\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.6499999999999995`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"80-84\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.95}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"85-89\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 5.25}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"90-94\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 5.55}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"95-99\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 5.85}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"100+\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 6.1499999999999995`}]}}, {
                    
                    RGBColor[{0.996078431372549, 0.9725490196078431, 
                    0.9254901960784314}], 
                    EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[0.6]}], {
                    RectangleBox[{1.1, 0.}, {4.4794285714285715`, 0.3}], 
                    RectangleBox[{1.1, 0.3}, {4.296048000000001, 0.6}], 
                    
                    RectangleBox[{1.1, 0.6}, {4.310454857142858, 
                    0.8999999999999999}], 
                    
                    RectangleBox[{1.1, 0.8999999999999999}, {
                    4.229101714285715, 1.2}], 
                    RectangleBox[{1.1, 1.2}, {4.040964571428572, 1.5}], 
                    
                    RectangleBox[{1.1, 1.5}, {3.834948571428572, 
                    1.7999999999999998`}], 
                    
                    RectangleBox[{1.1, 1.7999999999999998`}, {
                    3.6178308571428577`, 2.1}], 
                    RectangleBox[{1.1, 2.1}, {3.428002285714286, 2.4}], 
                    
                    RectangleBox[{1.1, 2.4}, {3.1922377142857146`, 
                    2.6999999999999997`}], 
                    
                    RectangleBox[{1.1, 2.6999999999999997`}, {
                    2.912667428571429, 3.}], 
                    RectangleBox[{1.1, 3.}, {2.604528, 3.3}], 
                    
                    RectangleBox[{1.1, 3.3}, {2.347890285714286, 
                    3.5999999999999996`}], 
                    
                    RectangleBox[{1.1, 3.5999999999999996`}, {
                    2.037444571428572, 3.9}], 
                    RectangleBox[{1.1, 3.9}, {1.8568205714285715`, 4.2}], 
                    RectangleBox[{1.1, 4.2}, {1.6990377142857145`, 4.5}], 
                    RectangleBox[{1.1, 4.5}, {1.5361508571428573`, 4.8}], 
                    RectangleBox[{1.1, 4.8}, {1.3720800000000002`, 5.1}], 
                    
                    RectangleBox[{1.1, 5.1}, {1.2255634285714287`, 
                    5.3999999999999995`}], 
                    
                    RectangleBox[{1.1, 5.3999999999999995`}, {
                    1.1370057142857144`, 5.7}], 
                    RectangleBox[{1.1, 5.7}, {1.1069257142857143`, 6.}], 
                    RectangleBox[{1.1, 6.}, {1.100649142857143, 6.3}]}}}, {}, {
                    Thickness[0.0008], 
                    LineBox[{{0, -0.4}, {-4., -0.4}}], 
                    LineBox[{{1.1, -0.4}, {5.1, -0.4}}], {{
                    LineBox[{{0., -0.4}, {0., -0.5}}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], {0., -0.7}]}, {
                    
                    LineBox[{{-0.5714285714285714, -0.4}, \
{-0.5714285714285714, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"250\"", 
                    TraditionalForm], {-0.5714285714285714, -0.7}]}, {
                    
                    LineBox[{{-1.1428571428571428`, -0.4}, \
{-1.1428571428571428`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"500\"", 
                    TraditionalForm], {-1.1428571428571428`, -0.7}]}, {
                    
                    LineBox[{{-1.7142857142857142`, -0.4}, \
{-1.7142857142857142`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"750\"", 
                    TraditionalForm], {-1.7142857142857142`, -0.7}]}, {
                    
                    LineBox[{{-2.2857142857142856`, -0.4}, \
{-2.2857142857142856`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"1000\"", 
                    TraditionalForm], {-2.2857142857142856`, -0.7}]}, {
                    
                    LineBox[{{-2.857142857142857, -0.4}, {-2.857142857142857, \
-0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"1250\"", 
                    TraditionalForm], {-2.857142857142857, -0.7}]}, {
                    
                    LineBox[{{-3.4285714285714284`, -0.4}, \
{-3.4285714285714284`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"1500\"", 
                    TraditionalForm], {-3.4285714285714284`, -0.7}]}, {
                    LineBox[{{-4., -0.4}, {-4., -0.5}}], 
                    InsetBox[
                    FormBox["\"1750\"", TraditionalForm], {-4., -0.7}]}}, {{
                    LineBox[{{1.1, -0.4}, {1.1, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"0\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {1.1, -0.7}]}, {
                    
                    LineBox[{{1.6714285714285715`, -0.4}, {
                    1.6714285714285715`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"250\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {1.6714285714285715`, -0.7}]}, {
                    
                    LineBox[{{2.242857142857143, -0.4}, {
                    2.242857142857143, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"500\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {2.242857142857143, -0.7}]}, {
                    
                    LineBox[{{2.814285714285714, -0.4}, {
                    2.814285714285714, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"750\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {2.814285714285714, -0.7}]}, {
                    
                    LineBox[{{3.3857142857142857`, -0.4}, {
                    3.3857142857142857`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1000\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {3.3857142857142857`, -0.7}]}, {
                    
                    LineBox[{{3.9571428571428573`, -0.4}, {
                    3.9571428571428573`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1250\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {3.9571428571428573`, -0.7}]}, {
                    
                    LineBox[{{4.5285714285714285`, -0.4}, {
                    4.5285714285714285`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1500\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {4.5285714285714285`, -0.7}]}, {
                    LineBox[{{5.1, -0.4}, {5.1, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1750\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {5.1, -0.7}]}}}}, {
                   GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 
                    Full}], 
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"male\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 
                    "\"                                      \""}, 
                    "RowDefault"], 
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"population\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"thousands\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowWithSeparators"], 
                    TemplateBox[{"\"                                      \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"female\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}, "RowDefault"]}, "RowDefault"]}, 
                 "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", #2}], "]"}]& )]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"2010 estimates\"", "\[NoBreak]",
                     "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "LargestCities:CountryData", 
     "numsubpods" -> "1", "position" -> "700", "scanner" -> "Data", "title" -> 
     "Largest cities"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CityData"}], "\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"city\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"population\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                    FormBox[
                    TagBox[
                    TagBox["\"Lima\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CityData, {"Lima", "Lima", "Peru"}}]], 
                    Identity], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["9.752", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9.752", "SRString" -> "9.752"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TagBox[
                    TagBox["\"Arequipa\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Arequipa", "Arequipa", "Peru"}}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TemplateBox[{",", "\",\"", 
                    TagBox[
                    TagBox["\"Trujillo\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Trujillo", "LaLibertad", "Peru"}}]], 
                    Identity], 
                    TagBox[
                    TagBox["\"La Libertad\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    AdministrativeDivisionData, {"LaLibertad", "Peru"}}]], 
                    Identity]}, "RowWithSeparators"], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["682834", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TemplateBox[{",", "\",\"", 
                    TagBox[
                    TagBox["\"Chiclayo\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Chiclayo", "Lambayeque", "Peru"}}]], 
                    Identity], 
                    TagBox[
                    TagBox["\"Lambayeque\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    AdministrativeDivisionData, {"Lambayeque", "Peru"}}]], 
                    Identity]}, "RowWithSeparators"], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["524442", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TagBox[
                    TagBox["\"Cusco\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CityData, {"Cusco", "Cusco", "Peru"}}]], 
                    Identity], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["435114", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {{None}}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    RowBox[{
                    FormBox[
                    TagBox["\"2004\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2005\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2007\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2013\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2016\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2018\"", Identity], TraditionalForm], ",", 
                    "\"and\[ThinSpace]\"", 
                    FormBox[
                    TagBox["\"2023\"", Identity], TraditionalForm]}], 
                    "\" estimates\""}, "RowDefault"], "\[NoBreak]", "\")\""}],
                     TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "LargestCities:CountryData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsPersonCount", 
     "numsubpods" -> "3", "position" -> "800", "scanner" -> "Unit", "title" -> 
     "Comparisons"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "8", "5"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"current population of California\"", FontFamily -> "Roboto",
                 FontSize -> Smaller, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["39.54", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "39.54", "SRString" -> "39.54"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "9", "2"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"current population of Canada\"", FontFamily -> "Roboto", 
                FontSize -> Smaller, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["36.62", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "36.62", "SRString" -> "36.62"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "1", "\".\"", "2"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"current population of Texas\"", FontFamily -> "Roboto", 
                FontSize -> Smaller, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["28.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28.3", "SRString" -> "28.3"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CityDataSourceInformationNotes.html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "City,Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.332", "parsetiming" -> "0.223", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP3219149db5c0d3i182470000405g1186694d8100", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa3220149db5c0d3i182470000499h7hh59c7ba6h05481992349747128482", "version" -> 
    "2.6", "inputstring" -> "population of peru"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 6, 23, 19, 1, 36.0781582`9.30981924955072}, "Line" -> 58,
     "SessionID" -> 26807131832210277864}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "Quantity[3.35*^7, \"People\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "population of peru"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{141.09765625, {62., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[59]:=",ExpressionUUID->"cdd611ed-adfc-4625-9407-9decedbef65c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8966172897833977`*^9, 
  3.896617289799023*^9}},ExpressionUUID->"494421b4-3c5a-4baf-8c13-\
dbb91657cc06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"caffeine", "  ", "molecule"}]], "Input",
 CellChangeTimes->{{3.8966172794975734`*^9, 
  3.8966172858738585`*^9}},ExpressionUUID->"127f009a-f00d-45f7-8b73-\
9d86b85c3863"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Molecule",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.], {
                RGBColor[0.800498, 0.201504, 0.192061], 
                
                LineBox[{{{3.79209869902163, 1.8272037753821582`}, {
                 3.79209869902163, 1.4136018876910792`}}, {{
                 3.6721013208147957`, 1.8272037753821582`}, {
                 3.6721013208147957`, 1.4136018876910792`}}}], 
                
                LineBox[{{{2.096436010722458, -0.8750399779748617}, {
                 2.466217970792783, -0.6615399855113666}}, {{
                 2.156436023111233, -0.9789599918791183}, {
                 2.526217983181558, -0.7654599994156234}}}]}, {
                RGBColor[0.4, 0.4, 0.4], 
                
                LineBox[{{{3.79209869902163, 1.4136018876910792`}, {
                 3.79209869902163, 1.}}, {{3.6721013208147957`, 
                 1.4136018876910792`}, {3.6721013208147957`, 1.}}}], 
                
                LineBox[{{{2.466217970792783, -0.6615399855113666}, {
                 2.8359999308631076`, -0.4480399930478716}}, {{
                 2.526217983181558, -0.7654599994156234}, {
                 2.8959999432518826`, -0.5519600069521284}}}], 
                
                LineBox[{{4.2265861101150515`, -0.7145}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{3.2375621880030865`, -0.714503071058709}, {
                 2.865999937057495, -0.5}}], 
                
                LineBox[{{3.732100009918213, -1.6079976403861511`}, {
                 3.732100009918213, -2.}}], 
                
                LineBox[{{5.003619333775719, 0.6305873020970953}, {
                 4.598100185394287, 0.5}}], 
                
                LineBox[{{5.899504924166603, 0.31492393235529803`}, {
                 6.127900123596191, 0.}}], 
                
                LineBox[{{5.7332019761533894`, 1.3826536160625205`}, {
                 5.855000019073486, 1.7553000450134277`}}], 
                
                LineBox[{{3.3605377589726215`, 0.785496928941291}, {
                 3.732100009918213, 1.}}], 
                
                LineBox[{{2.865999937057495, -0.10799764038615117`}, {
                 2.865999937057495, -0.5}}], 
                LineBox[{{2.371513960302062, 0.7855000073300253}, {2., 1.}}], 
                
                LineBox[{{5.003619333775719, -0.6305873020970953}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{{5.899504924166603, -0.31492393235529803`}, {
                 6.127900123596191, 0.}}, {{
                 5.773010113643557, -0.2849500489356847}, {
                 5.972050587141657, -0.010502036155947234`}}}], 
                
                LineBox[{{{4.598100185394287, 0.5}, {
                 4.598100185394287, -0.5}}, {{4.7180975636011215`, 0.4}, {
                 4.7180975636011215`, -0.4}}}], 
                
                LineBox[{{4.598100185394287, 0.5}, {3.732100009918213, 
                 1.}}]}, {
                RGBColor[0.291989, 0.437977, 0.888609], 
                
                LineBox[{{3.8550720348358154`, -0.929}, {
                 4.2265861101150515`, -0.7145}}], 
                
                LineBox[{{3.6091244389486774`, -0.929006142117418}, {
                 3.2375621880030865`, -0.714503071058709}}], 
                
                LineBox[{{3.732100009918213, -1.2159952807723022`}, {
                 3.732100009918213, -1.6079976403861511`}}], 
                
                LineBox[{{5.40913848215715, 0.7611746041941907}, {
                 5.003619333775719, 0.6305873020970953}}], 
                
                LineBox[{{5.671109724737016, 0.6298478647105961}, {
                 5.899504924166603, 0.31492393235529803`}}], 
                
                LineBox[{{5.611403933233293, 1.010007187111613}, {
                 5.7332019761533894`, 1.3826536160625205`}}], 
                
                LineBox[{{2.9889755080270306`, 0.570993857882582}, {
                 3.3605377589726215`, 0.785496928941291}}], 
                LineBox[{{2.865999937057495, 0.28400471922769766`}, {
                 2.865999937057495, -0.10799764038615117`}}], 
                
                LineBox[{{2.7430279206041246`, 0.5710000146600508}, {
                 2.371513960302062, 0.7855000073300253}}], 
                
                LineBox[{{5.40913848215715, -0.7611746041941907}, {
                 5.003619333775719, -0.6305873020970953}}], 
                
                LineBox[{{{5.671109724737016, -0.6298478647105961}, {
                 5.899504924166603, -0.31492393235529803`}}, {{
                 5.573969640145457, -0.5593980617154222}, {
                 5.773010113643557, -0.2849500489356847}}}]}}, {
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, 2.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "1"], 
                Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2., -1.}, Center, {0.5999868910341732, 
                  0.36999191613774013`}], "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, -1.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "3"], 
                Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, 0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "4"], 
                Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2.865999937057495, 0.5}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, -0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, 0.5}, 0.2]}, "7"], 
                Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, -0.5}, 0.2]}, "8"], 
                Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, 1.}, 0.2]}, "9"], 
                Annotation[#, 9, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2.865999937057495, -0.5}, 0.2]}, "10"], 
                Annotation[#, 10, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{6.127900123596191, 0.}, 0.2]}, "11"], 
                Annotation[#, 11, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, -2.}, 0.2]}, "12"], 
                Annotation[#, 12, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{5.855000019073486, 1.7553000450134277`}, 0.2]}, 
                 "13"], Annotation[#, 13, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2., 1.}, 0.2]}, "14"], 
                Annotation[#, 14, "Tooltip"]& ]}}, DisplayFunction -> 
             Identity, Frame -> True, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.], {
                RGBColor[0.800498, 0.201504, 0.192061], 
                
                LineBox[{{{3.79209869902163, 1.8272037753821582`}, {
                 3.79209869902163, 1.4136018876910792`}}, {{
                 3.6721013208147957`, 1.8272037753821582`}, {
                 3.6721013208147957`, 1.4136018876910792`}}}], 
                
                LineBox[{{{2.096436010722458, -0.8750399779748617}, {
                 2.466217970792783, -0.6615399855113666}}, {{
                 2.156436023111233, -0.9789599918791183}, {
                 2.526217983181558, -0.7654599994156234}}}]}, {
                RGBColor[0.4, 0.4, 0.4], 
                
                LineBox[{{{3.79209869902163, 1.4136018876910792`}, {
                 3.79209869902163, 1.}}, {{3.6721013208147957`, 
                 1.4136018876910792`}, {3.6721013208147957`, 1.}}}], 
                
                LineBox[{{{2.466217970792783, -0.6615399855113666}, {
                 2.8359999308631076`, -0.4480399930478716}}, {{
                 2.526217983181558, -0.7654599994156234}, {
                 2.8959999432518826`, -0.5519600069521284}}}], 
                
                LineBox[{{4.2265861101150515`, -0.7145}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{3.2375621880030865`, -0.714503071058709}, {
                 2.865999937057495, -0.5}}], 
                
                LineBox[{{3.732100009918213, -1.6079976403861511`}, {
                 3.732100009918213, -2.}}], 
                
                LineBox[{{5.003619333775719, 0.6305873020970953}, {
                 4.598100185394287, 0.5}}], 
                
                LineBox[{{5.899504924166603, 0.31492393235529803`}, {
                 6.127900123596191, 0.}}], 
                
                LineBox[{{5.7332019761533894`, 1.3826536160625205`}, {
                 5.855000019073486, 1.7553000450134277`}}], 
                
                LineBox[{{3.3605377589726215`, 0.785496928941291}, {
                 3.732100009918213, 1.}}], 
                
                LineBox[{{2.865999937057495, -0.10799764038615117`}, {
                 2.865999937057495, -0.5}}], 
                LineBox[{{2.371513960302062, 0.7855000073300253}, {2., 1.}}], 
                
                LineBox[{{5.003619333775719, -0.6305873020970953}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{{5.899504924166603, -0.31492393235529803`}, {
                 6.127900123596191, 0.}}, {{
                 5.773010113643557, -0.2849500489356847}, {
                 5.972050587141657, -0.010502036155947234`}}}], 
                
                LineBox[{{{4.598100185394287, 0.5}, {
                 4.598100185394287, -0.5}}, {{4.7180975636011215`, 0.4}, {
                 4.7180975636011215`, -0.4}}}], 
                
                LineBox[{{4.598100185394287, 0.5}, {3.732100009918213, 
                 1.}}]}, {
                RGBColor[0.291989, 0.437977, 0.888609], 
                
                LineBox[{{3.8550720348358154`, -0.929}, {
                 4.2265861101150515`, -0.7145}}], 
                
                LineBox[{{3.6091244389486774`, -0.929006142117418}, {
                 3.2375621880030865`, -0.714503071058709}}], 
                
                LineBox[{{3.732100009918213, -1.2159952807723022`}, {
                 3.732100009918213, -1.6079976403861511`}}], 
                
                LineBox[{{5.40913848215715, 0.7611746041941907}, {
                 5.003619333775719, 0.6305873020970953}}], 
                
                LineBox[{{5.671109724737016, 0.6298478647105961}, {
                 5.899504924166603, 0.31492393235529803`}}], 
                
                LineBox[{{5.611403933233293, 1.010007187111613}, {
                 5.7332019761533894`, 1.3826536160625205`}}], 
                
                LineBox[{{2.9889755080270306`, 0.570993857882582}, {
                 3.3605377589726215`, 0.785496928941291}}], 
                
                LineBox[{{2.865999937057495, 0.28400471922769766`}, {
                 2.865999937057495, -0.10799764038615117`}}], 
                
                LineBox[{{2.7430279206041246`, 0.5710000146600508}, {
                 2.371513960302062, 0.7855000073300253}}], 
                
                LineBox[{{5.40913848215715, -0.7611746041941907}, {
                 5.003619333775719, -0.6305873020970953}}], 
                
                LineBox[{{{5.671109724737016, -0.6298478647105961}, {
                 5.899504924166603, -0.31492393235529803`}}, {{
                 5.573969640145457, -0.5593980617154222}, {
                 5.773010113643557, -0.2849500489356847}}}]}}, {
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, 2.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "1"], 
                Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2., -1.}, Center, {0.5999868910341732, 
                  0.36999191613774013`}], "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, -1.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "3"], 
                Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, 0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "4"], 
                Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2.865999937057495, 0.5}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, -0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, 0.5}, 0.2]}, "7"], 
                Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, -0.5}, 0.2]}, "8"], 
                Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, 1.}, 0.2]}, "9"], 
                Annotation[#, 9, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2.865999937057495, -0.5}, 0.2]}, "10"], 
                Annotation[#, 10, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{6.127900123596191, 0.}, 0.2]}, "11"], 
                Annotation[#, 11, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, -2.}, 0.2]}, "12"], 
                Annotation[#, 12, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{5.855000019073486, 1.7553000450134277`}, 0.2]}, 
                 "13"], Annotation[#, 13, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2., 1.}, 0.2]}, "14"], 
                Annotation[#, 14, "Tooltip"]& ]}}, DisplayFunction -> 
             Identity, Frame -> True, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"SMILES: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "\"O=c1n(C([H])([H])[H])c(=O)n(C([H])([H])[H])c2nc([H])n(C([\
H])([H])[H])c21\"", BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, ImageSize -> {{1, 300}, Automatic}, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InChIKey: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"RYYVLZVUVIJVGH-UHFFFAOYSA-N\"", "SummaryItem"]}]}},
              AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Molecule[{
   "O", "O", "N", "N", "N", "N", "C", "C", "C", "C", "C", "C", "C", "C", "H", 
    "H", "H", "H", "H", "H", "H", "H", "H", "H"}, {
    Bond[{1, 9}, "Double"], 
    Bond[{2, 10}, "Double"], 
    Bond[{3, 8}, "Aromatic"], 
    Bond[{3, 10}, "Aromatic"], 
    Bond[{3, 12}, "Single"], 
    Bond[{4, 7}, "Aromatic"], 
    Bond[{4, 11}, "Aromatic"], 
    Bond[{4, 13}, "Single"], 
    Bond[{5, 9}, "Aromatic"], 
    Bond[{5, 10}, "Aromatic"], 
    Bond[{5, 14}, "Single"], 
    Bond[{6, 8}, "Aromatic"], 
    Bond[{6, 11}, "Aromatic"], 
    Bond[{7, 8}, "Aromatic"], 
    Bond[{7, 9}, "Aromatic"], 
    Bond[{11, 15}, "Single"], 
    Bond[{12, 16}, "Single"], 
    Bond[{12, 17}, "Single"], 
    Bond[{12, 18}, "Single"], 
    Bond[{13, 19}, "Single"], 
    Bond[{13, 20}, "Single"], 
    Bond[{13, 21}, "Single"], 
    Bond[{14, 22}, "Single"], 
    Bond[{14, 23}, "Single"], 
    Bond[{14, 24}, "Single"]}, {AtomCoordinates -> QuantityArray[
      StructuredArray`StructuredData[{24, 3}, {CompressedData["
1:eJwBUQKu/SFib1JlAgAAABgAAAADAAAA3Lqbpzrkzj+XkA96Nqv3vzlnRGlv
8P4/f4y5awn5BsBXfa62Yn/hv5zEILByaPO/AKlNnNzv7b/Ik6RrJt/jP6Rw
PQrXo/W/HVpkO99PAEDbxMn9DkXhPwzSjEXT2eU/z9VW7C+79b86kst/SL/w
vzHw3Hu45Ng/elioNc079j+TOgFNhA37P+M2GsBbIPK/aam8HeG06T8cfGEy
VTDCP65kx0YgXtU/G2SSkbOw2T+nRBK9jGLrP+B/K9mxEem/mLwBZr6Dt78w
Ub01sFXrvwH76NSVz+4/LiEf9GxW/L/s+gW7YdvUv9Fcp5GWyue/iUFg5dAi
A0DRs1n1udr3PyC1iZP7Hc6/n82qz9VW9r+xUGuad5z1PxWMSuoENATARbbz
/dT4BkAuUigLX1+rP/JBz2bV5/w/FR3J5T8kAsCBJsKGp1cAwPIk6ZrJN+8/
4L4OnDOiCkDmP6Tfvg4AQMCy0qQUdM+/R3L5D+k3AsCYu5aQD3r+P7gehetR
OALAgZVDi2zn+b9kIxCv6xflP7FyaJHtfArAH9ydtdsu5L/gLZCg+DEAQFwg
QfFjzAbAMQisHFpkCEBgB84ZUdrvv8iYu5aQD/s/+DHmriXkAkDtEtVbA1vN
PyqpE9BE2AVAbcX+sntyDkDYEvJBz2biP/YoXI/C9fw/jblrCfmgAMAhH/Rs
Vv0AwL8OnDOiNABAc2iR7Xw/CsB6xyk6ksv7v1sqb0c4Leo/D3o2qz7XAMAA
kX77OvAHwONrzywJUOA/+3wsEQ==
        "], "Angstroms", {{1}, {2}}}]], 
    AtomDiagramCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQQO4bd5HRigbFT6w35UeTCfIVZXDMR3kDrw0h5I
J0x8ywaVf2CPJg9Sn1CSIoQsj8xHNx/dPLD8jyYJmLvQ3XsAiBVas8VB/Iat
on/s0dwP4jfc/CuFrH/BlKccyPph5jUc+soC4j/oyRBEll/w7ZgkiP8gg+En
2Px9BmD3LNh7kAms7ye/KNi/M7X+g+QdHlZBxFWm/wDbfzvjuz3E/C9g2pbr
N4hWyFt81x4AjFdTAQ==
     "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.896553941837287*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"2563f8f1-02e6-406f-9831-aaa1c21ebf73"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"toast", " ", "+", " ", 
  RowBox[{"orange", " ", "juice"}]}]], "WolframAlphaShortInput",
 CellChangeTimes->{{3.8966172091152697`*^9, 
  3.8966172278667154`*^9}},ExpressionUUID->"9714372e-c09a-4549-a230-\
6be272c59283"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Propane molecule", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "3DStructure:ChemicalData", "3D structure", 1, 1, "Content"}, 
      "ExtrusionOpen" -> False, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {
     "StructureDiagramPod:ChemicalData__Lewis structure", 
      "StructureDiagramPod:ChemicalData__All atoms"}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Chemical\", \"Propane\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"propane\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {ChemicalData, "Propane"}, 
                 "SRString" :> $CellContext`GeneralData[
                  ChemicalData, "Propane", "SpokenName"]]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Chemical names and formulas", "scanner" -> "Data", 
     "id" -> "ChemicalNamesFormulas:ChemicalData", "position" -> "200", 
     "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"formula\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{"\"C\"", 
                    SubscriptBox["\"H\"", "3"], "\"C\"", 
                    SubscriptBox["\"H\"", "2"], "\"C\"", 
                    SubscriptBox["\"H\"", "3"]}, "RowDefault"], 
                  ScriptBaselineShifts -> {0.5, 0.75}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"Hill formula\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "3"], 
                    SubscriptBox["\"H\"", "8"]}, "RowDefault"], 
                  ScriptBaselineShifts -> {0.5, 0.75}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"propane\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalNamesFormulas:ChemicalData__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Structure diagram", "scanner" -> "Data", "id" -> 
     "StructureDiagramPod:ChemicalData", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Propane\"][EntityProperty[\"Chemical\", \
\"CHColorStructureDiagram\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               CapForm["Round"], Null, {{
                 RGBColor[0.4, 0.4, 0.4], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"C\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  286.6, -25.}]}, {
                 RGBColor[0.4, 0.4, 0.4], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"C\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {373.21, 
                  25.}]}, {
                 RGBColor[0.4, 0.4, 0.4], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"C\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {200., 25.}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  246.74999999999997`, -72.49}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  326.46000000000004`, -72.49}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  404.21, -28.689999999999998`}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  426.90000000000003`, 56.00000000000001}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {342.21, 
                  78.69}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {231., 
                  78.69}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {146.31, 
                  56.00000000000001}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  169., -28.689999999999998`}]}}, {{{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{307.54855353916753`, -12.906388673843926`}, {
                   329.905, 0.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{329.905, 0.}, {352.2614464608325, 
                   12.90638867384394}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{265.6520511418232, -12.905341305902537`}, {243.3, 
                   0.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{243.3, 0.}, {220.9479488581768, 
                   12.905341305902537`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{271.05148331135274`, -43.52946192079944}, {
                   266.675, -48.745}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{266.675, -48.745}, {
                   263.5319690695996, -52.49060950777199}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{302.1508059247849, -43.52754072674445}, {
                   306.53000000000003`, -48.745}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{306.53000000000003`, -48.745}, {
                   309.67556009084547`, -52.492683108736834`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{385.30499658697346`, 4.052246233722375}, {
                   388.71, -1.8449999999999989`}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{388.71, -1.8449999999999989`}, {
                   391.1555162390052, -6.080476350715781}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{394.1577537662776, 37.09499658697348}, {400.055, 
                   40.5}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{400.055, 40.5}, {404.29047635071583`, 
                   42.945516239005215`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{361.1150034130265, 45.94775376627763}, {357.71, 
                   51.845}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{357.71, 51.845}, {355.2644837609948, 
                   56.080476350715784`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{212.09499658697348`, 45.94775376627763}, {215.5, 
                   51.845}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{215.5, 51.845}, {217.9455162390052, 
                   56.080476350715784`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{179.05224623372237`, 37.09499658697348}, {173.155,
                    40.5}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{173.155, 40.5}, {168.9195236492842, 
                   42.9455162390052}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{187.90500341302652`, 4.052246233722375}, {
                   184.5, -1.8449999999999989`}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{184.5, -1.8449999999999989`}, {
                   182.0544837609948, -6.080476350715781}}]}}}, Null}, {
              GridLines -> Dynamic[
                 Map[{{#, 
                    GrayLevel[0.7]}}& , 
                  MousePosition[{"Graphics", Graphics}, None]]], 
               Method -> {"GridLinesInFront" -> True}, ImageSize -> 104, 
               PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
               95.37710733650941, 
               PlotRange -> {{121.95500337796813`, 
                446.3839972976255}, {-102.0112080267053, 
                100.83090602002898`}}}], ImageSizeAction -> "ShrinkToFit", 
             ImageSize -> {440.}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "4"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "All atoms", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Skeletal structure", "input" -> 
           "StructureDiagramPod:ChemicalData__Skeletal structure"}, {}], 
         XMLElement[
         "state", {
          "name" -> "All atoms", "input" -> 
           "StructureDiagramPod:ChemicalData__All atoms"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Lewis structure", "input" -> 
           "StructureDiagramPod:ChemicalData__Lewis structure"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Show bond information", "input" -> 
         "StructureDiagramPod:ChemicalData__Show bond information"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show graph properties", "input" -> 
         "StructureDiagramPod:ChemicalData__Show graph properties"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step", "input" -> 
         "StructureDiagramPod:ChemicalData__Step-by-step", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "3D structure", "scanner" -> "Data", "id" -> 
     "3DStructure:ChemicalData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnWd4lNXW98/1Ps+H9+P7zQ/nw8lzmqconKPnHAQMGWqEIFWK0obeiYQS
EkSGGgKEIC00mdBBiJSIdAaQXgJIB2EoAipIryrud/02s/LcxgRRA3fKva5r
MyGZmbv993+VvfZa/9MmvkGH//Ob3/ym1/+Vfxq0TqyckNA6qeH/k/806tGr
c8ce7dvV7NG7fcf2Ca+0+S/55SAZ82T892888cQTT0qXlKtY0Ve+UqVg5Ro1
QrXq1jV1GzUy9Rs3Dtdv0iQQGxfnc/v8PCldUi4mJqp8dHSoYkyMqfraa6ZW
vXqmXuPGplHz5uZNv9+07NDBtO7c2fg7dAjFxMZGuX2+npR8qRAd7a9QqZKp
6PMZX/XqBp4UfjRvtW5t2ggWOyckmB6JiSahf3/Te8AAXsNtu3b1uX3enpRc
gSfBJEN0t6ldv75pLBzp79jRdOnVy/R5910zYPhwMzgtzaS8954ZMW6cGTZ2
rBkyerSJa9jQ5/b5e1LyxGIyOjr8qvCkYrJJy5ambZcuJr5fP9N/6FAzLD3d
pGVkmPEzZpjJc+aYafPmmalz55oJmZngM+T2NXhS8gT9je7GnoyL8GQbweTb
SUlmQEqKSR0/3owTPILFWR9+aOZ/9JFZuHKlHfOWLzfTFywwiUOG+Ny+Drel
bLly2OYBfMWadeqEX2/YMFyvUaOw+IyBsi+/7HP7/Iqb4OdYH0fsyQZNm1rf
BjvyHdHbqRMmmInCiTMWLbJ4zN640azats2OlVu3mhWffGKy1q41k2bODLp9
HW6J9RVffTVYqWpVU6N2bSN4tPexcYsW1jZv0a6dvafN27YNx9Wt63P7fIuD
cE+5nzUFk/jdTVu1Mp179jRJgwdbO3JCMGiCgsmFH39slodCZs+JE+bw2bPm
+BdfmK2HDplN+/ebNTt3miXr1xu3r8UNUbs8ukoVUz0uzrzeoIF54623LB6J
W3SMjzddxT7v0bevtYl4bd6und/t8y7qQpyyeq1aNj5JLIh7mZCcbAaLPzN2
2jTz/sKFZsGKFWa58OT63bvNmStXzANjzP3vvzdHLlwwuwSnWw4etPzp9rU8
a1FMYpfHCk9q7KJdt26mu+APXxHbfGBqqgmMHGnHu2IXJcvvBK9+t8+/KMvL
5cr5iFE2fPNNe087vf22SR4yxIwU/Y1/M1fsx2XCk2uFE+HH89evm4eCy3sy
wteumU/PnTN7PvvM8qbb1/IsJddXrFzZYhKObNm+vemSkGBjaO+OGGGGjx1r
Rk+aZMZOn27tc3xGfh45caKd9606dvS5fR1FVZ5//vko7KEmYgsRE0LPBGR+
w5UzPvjALFm3zmwTPO4Ph83B8+fNlbt3zfeCyRsyPvv6a3NU9PkB0esbc3LC
bl/Ls5RyFSr4K4nuBpNqk3fr3dv0GzTIDBkzxqRNnmxtoKniK2IH4S/OXrLE
vqKDwOmgtLRSa5M/idR5440waznoH2LmQ+W+Ev+ZvXSpWbdrlzkj2Lt57565
dg+WfCS3ZZwSvjwpev3Q55+Dy1ITK4IriV/UEHuyrtjk4s/YGC82OfE05jQx
tJlZWdZXzFqzxizbsMEslYEdvnj1ajNn2TIzXnCbOHBglNvXU1SlZp06QdXh
fQcONMPF38mYPdvMy842G/fuNbcfPrRYvC/juwguv/72WxO+ccN8JriER5eE
Qj63r+NZidrk6Bl87g49etj7xnwGk9Pmz7e4W7RqlY1XbNq3z+w8dsxsPnDA
zvNV27dbH5L3iD73u309RVXIz6jy2mt23vdMSrJ+OLYlc321+DOHhQ8viF15
Rvjx8v375pLw5pmbN01Yfnf8q6/MruPHS5UOJ0ZJnLeB2OTEgIjz4tOgu+FJ
8Pbh2rXm4y1brA10VOycaw8emAu3b+fiEx8S/pyYmenp8nzE2u8xMdZOIkaE
Hh8ldjlzHr78aNMmE8rJMbtPnrR25JFLl8yJy5etbcnr/jNnwvOzs31uX8ez
lJjq1QPE1FgTgyuxKVmXnTRzprUf0dtgcv2ePdYnvCTzF3n4/ffWHt8j9xIf
cs2OHSYzK6vU2D8/R+DKmGrVjNiY1r4kpjFR7i/xSuKSOTK/14ru4T7uPXXK
+t+HL140R2TknD4dXrR6dcDta3jWUjk2NtBQ/G/0C74Ovnf61KnWn+G+Zctc
3iCY3Hr4sPlU5vL1+/cf2eRi+2CPawxjo+h3sUFLla55EimIKzMXL7bxyt0n
Ttj7eVl8cHDJ2Hn8uJ3vWw4eDKeMG+d3+xrckCqxsX7sSmK9PZOTrf+N7w1X
LhW/Bj194ssvzRmxv8/dumVjvchdeT119arVOaJnbNwXLMcnJvrcvqaiJD/i
Spn3ypXrZL5/KfbkN3I/z+LfiN7mfot+Ci9csSLg9rm7Lehw7hmxSuzxjFmz
bKwX/X1K7tVt4cj74i/eMf8r/IxNjv2Dr8g8hwNGjB/v2ZgR0bWKGg6uHOng
SvFl7L28Jff2hOge/JsNOTne/YuI8GVI/XDRG7l+IrhkHexhBItwpf58VX4+
LXMdXKLLV0f8cjjT7espKpKXK7GRyM+wXCm+4hd5uFLuYzg9GIxy+7yLipBz
yn2zcbWxY3NxuWLzZrNV9PNZ4cVLosM/v3PHXLx3z1wSWwi9jh4/JjpebHPz
wcqVNpZE3kuTVq2i3L4mt+VHXCk2ElwZhCtl/uZypcxvuPKEcOXm/fs9rswj
zdu1C/V+5x0zJC3NzmniQ+gafB7uofqIGr9ggEniGthEHwmGWQ8ixhnvxdcf
cWXVqo+4smvXH3OlzGm48pyDKzM8rsxXOvfsGeL+jZkyxa43EiNCP3/y6ae5
sbXDotfxdcCo+js7jh2z/jgcy+fcvg635QdcKbZ7T+VKuTdwJXFf5cqTHlc+
kbTv3j00ND3drivCmcTLWdcBm9xP4hfEheBQ8lvA6sHPP7fYxB4lVuz2Nbgt
ypWsoVmuTEmxXEkuG1x5KR+u9HJZHy/Va9XyEzMit598jJmR2Dr6mRgw9xUO
JQ7MPEevHxX+3BcOW5xy77v17u13+zrcklyujIuzaxWWKydMsFy5LD+ulPu3
+dNPPa58AsHWJKZhcyxFr/P63vTpj3KJliyx3Ii9iX3JfSW+Qb4LHEre/5S5
c0ttfP2FMmWC/ylf3nJl2whXTohwJXP5onLlzZseV/5Mia1bNyo+MdEERo2y
MfZe4g+xX5RcQXwh/JycU6ce+UGCyZNw5hdfWHuTv+Gby+f9bl/Hs5bf/e53
UX/84x/N3//+d1OhYkXTzO+3e3cex5WfeFz5s6RZq1a+d4YNM6MmTTL95ZV1
8/Rp0x7Ne9HnO44efcSZgkfu7wnlzBMnbL5/n6Qk88ILL4TLlCkTevHFFwPy
rAJuX9PTlj/84Q/B559/3pQtW9ZER0eb119/3TRr1sykjBlj/Z0Lwo95uTJj
9myf2+dd3KRVx45RosdDY6ZOtWsVxJDwa5j72JLkGOCfH1c7U/S6cmbSgAGm
onDGv/71L/Pvf//b/Oc//zGvvPKKefnllwNuX9fTECdXcq3Vq1c3b7zxhmnT
po3p3r27effdd81RmcseVxaeiE6OElspwB6fMZMn29wsfJ/tR45YfxzOPBnh
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
ADUTUtLTfWkZGYEp8+cHxAYILlyxIqR+j8Wt+PRr5bvWReqBZInvoz2NwRED
3QtewA06Fwzhl2tPw4L6bKK7sRvhQL6H34NdYuvgl2OAe/rOal95jsHv4Uz5
Xp/b992TnxZy51InTAgR1yG/Ez8bXY0Ps/vkSRu3FA4Mz83ODjzJ94FbehSk
T53qnzhzZmDmhx8GMz/4ICT+Dr3rcvtsYlvCYdrTmIHedvbKdvZPUP0NT2pP
PDhV+xiq/tc1Sj4Dj6pNC4bl2N56ZDGTxIEDo+DAzKysoHBnaN2OHaFFq1YF
p82f7yvM42DbEt8WHvTTb1P4LkCPO9HNYfxuYuhOHa716fFZ0MNwH9yKvneu
nasPr30M+Q7wq31v4Wf5vLfm48nPFuE8v7OHu7M/F3YlXAkuiR2xdu7s/ar9
NZUz8ZuIv7MnF1xiM7R6xrmjnpQcAZesgWs+ELjE33H2M3T2MXSuWTr7ZWt+
B5yJjSmvng735BeL8J0/P1wSeweX+EHgkPVKZ79s8j3AZAw5mGKbVhG/CTuV
tUo4tqvYt25fmyfFWwRPIe3jTtxS+2ziN4FT9DZY1J7Ef5P/x+C/5+nFxagr
OOZz9ju8Xu6e/EoR3zyk/rj22dT+r3Aj/g46vKzo7uhI3w76IVEvj9xkcj9b
iK9EnYge4v/z2QH05vH6dnjyK0T0dJRwZghdzjoQcSLtswmXosv/IX4OvWRs
nwTR3TXy9COGL9nH2SUSk8rIzCRPxdPnnvxqETszwNo48UhiRaz1oMvhzFcj
fYgrRF5tHXBnz9cIZ1KLLDB8uM0rJfcZrLK/4/WGDQMxXk8uT36hiF9texmy
Pq79iV8Rvx0c0r/Q2fPV9tWkTnikrya5U+zzJCef9QJyR6n7BJeCWfLoG775
ZsDta/SkeIvgM6qh8FztevWCNSK9uKIj/YjBKHuXtE49NcFtn2yxTck3XbFl
i90PQn0yck/J9aPWKDUfBbtezrAnhSL04sLfiYn01cT/qRKpZUNvBeo0sOeN
fXD0iiPXlPVVq88XLLA1mW2/OBn83LVXL5/b1+RJ8Zc44Uz4EZ8HPV5R/R/2
EImdGRvpCYufzp4m+JN+Hehz8qDZ28lgPxJ7kdg/5/Y1eVL8RfwbP3084Ej1
f+BMehDzMxjl77UjcU32tYPNNsKd9JpjPzJ76KjxyD4kcv4SBw/2u31dnhR/
ES4MO/0f2/NVXnP1OfFM9HkkbtRCbE36yLVkvV1sy6UbNtg8KvY30R9p1MSJ
np3pya+W1xs08KO3LV9G+hDjC2F7gkk4kvoN1FugVxd1HNjTDibJ2acGE3mi
5Iziqwt/evFNTwpFwKX2x4Y3wSR6G58HbsQXB4fUB6e2CHn69I3llToM1BjB
5iQHf8GKFR4uPSkU0dp0cCY+DhyJD96he3dbJ7FfpC44MUz8G2ouMOiPRN0F
9t+x/x1srtm2zcOlJ79aylWs6MvV3YJJbEntzQU/vpuSYrE3Rnxu4kT06cLH
oVYIPMm+O/xx8vXZvyS2ppc77MmvlvKVKgXVx6H+IWs4rIdTIwkepF4idRLZ
w0QdEPYkU2uBvobUW6BGyPSFC219hz0nT+Kb+9y+Jk+Kv/iqVQup3611RKgF
RiwSHqTGDXGg+aKniVluzMmxvZDYF0e9BeqDfCC+OHH2dbt3ezrck0IRcog0
t406h9TbZl88NecyIv3a4Ufi6ex5v3D5svny5k1z6Nw5u6+Yvcbs4aR/0sCU
FJ/b1+NJyRCNTzYn16hXL+tja2/szAgm2T9MH2LqMty6e/dRzaVvvrG1wdjj
zv53anwOSU/3uX09npQMIV+NeBC9CqgV6+yNTU1EeJL4D/vi6Z95/+FDi8sL
N27Y+g3sQ4ZHiV/GxsX53L4eT0qG1GvcOEguG/0ziAeljh9v9Tf+DJjceujQ
o/p0X31la35Rdwlcnrt929Zt4G/sk1+7c6dnW3pSaMJ6T4uIDs+tmxjpXbhp
3z5z4do1W5/ugYy7332XWxfs0p07ttfrkYsXzd7PPjPZmzd764+eFKo0b9s2
rD3bqcdNvwLqxlKr81qkXqLt2y7jAT9//705I9xJ3SXq3BwIh036tGk+t6/D
k5IlDZs181lcpqRYXGZGehCz7o2vQ026c4JDsHjh3j1bn872bL9yxdZeEvvT
40pPnoq079o1yJq39iamd4GtAyb2Zc7p09bncfbGpm4i9uXO48c9u9KTpyrx
iYkB+mPQMwNfnLi5rRXv6I1N/URqJlJjdteJE96aoyfPROIHDowaNXFiGN8H
zqS3C/HzHUeP2pgQ3Lnz2LFw9qZNAbfP1ZPSJ9Q7TJsyJTB76dLg4jVrQtkb
NwaXrl9faL2xPfHEE0888eRZyv8Hlc9mHw==
               "], {{0, 0}, {166, 129}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              Method -> {"ShrinkWrap" -> True}, ImageSize -> 183, 
               ImageSize -> {166, 129}, PlotRange -> {{0, 166}, {0, 129}}}], 
             ImageSizeAction -> "ShrinkToFit", ImageSize -> 400], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show bonds only", "input" -> 
         "3DStructure:ChemicalData__Show bonds only"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show space filling model", "input" -> 
         "3DStructure:ChemicalData__Show space filling model"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Basic properties", "scanner" -> "Data", "id" -> 
     "Basic:ChemicalData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"SOLV-DB"}], "\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n    ", 
         XMLElement["datasource", {}, {"CRCHandbook"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"MolarMass\"], EntityProperty[\"Chemical\", \
\"Phase\"], EntityProperty[\"Chemical\", \"MeltingPoint\"], \
EntityProperty[\"Chemical\", \"BoilingPoint\"], EntityProperty[\"Chemical\", \
\"MassDensity\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"molar mass\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["44.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "44.1", "SRString" -> "44.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"phase\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"melting point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["187.63", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "187.63", "SRString" -> "187.63"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"boiling point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["42.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "42.1", "SRString" -> "42.1"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"mass density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.00187939", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.00187939", "SRString" -> 
                    "0.00187939"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20", "SRString" -> "20"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Basic:ChemicalData__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step", "input" -> 
         "Basic:ChemicalData__Step-by-step", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "2"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "g/mol", "long" -> "grams per mole"}, {}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Gas properties (at STP)", "scanner" -> "Data", "id" -> 
     "GasProperties:ChemicalData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CRCHandbook"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"mass density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.00187939", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.00187939", "SRString" -> 
                    "0.00187939"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20", "SRString" -> "20"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"vapor density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{"  ", "\"  \"", "1.5`", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"relative to air\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowWithSeparators"], {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"molar volume\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23463", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "23463", "SRString" -> "23463"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    SuperscriptBox["\"cm\"", "3"], "\[InvisibleSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"mol\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"surface tension\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.01515", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.01515", "SRString" -> "0.01515"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"N\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"refractive index\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.3407", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.3407", "SRString" -> "1.3407"]]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "1.3407"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"dynamic viscosity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"8", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-6"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"8", "\[Times]", 
                    SuperscriptBox["10", "-6"]}], "SRString" -> 
                    "8 times 10 to the negative 6"], SyntaxForm -> CenterDot],
                     "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"Pa\"", "\[InvisibleSpace]", "\"\[ThinSpace]\"",
                     "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "25", "SRString" -> "25"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Thermodynamic properties", "scanner" -> "Data", "id" -> 
     "Thermodynamics:ChemicalData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"CriticalTemperature\"], \
EntityProperty[\"Chemical\", \"CriticalPressure\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific heat capacity \"", 
                    SubscriptBox["c", "p"]}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.669", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.669", "SRString" -> "1.669"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"g\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific free energy of formation \"", 
                    SubscriptBox["\"\[CapitalDelta]\"", "f"], "G", 
                    "\"\[Degree]\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.5306", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.5306", "SRString" -> "0.5306"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific heat of formation \"", 
                    SubscriptBox["\"\[CapitalDelta]\"", "f"], "H", 
                    "\"\[Degree]\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["2.354", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.354", "SRString" -> "2.354"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    
                    TemplateBox[{
                    "\"specific entropy \"", "S", "\"\[Degree]\""}, 
                    "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6.123", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6.123", "SRString" -> "6.123"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"g\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of vaporization\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.447", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.447", "SRString" -> "0.447"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of combustion\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50.03", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50.03", "SRString" -> "50.03"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of fusion\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.079", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.079", "SRString" -> "0.079"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"critical temperature\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["370", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "370", "SRString" -> "370"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"critical pressure\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.257", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.257", "SRString" -> "4.257"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Thermodynamics:ChemicalData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "5"}, {
           XMLElement[
           "unit", {
            "short" -> "J/(g K)", "long" -> "joules per gram kelvin"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "J/(g K)", "long" -> 
             "joules per gram kelvin difference"}, {}], 
           XMLElement[
           "unit", {"short" -> "kJ/g", "long" -> "kilojoules per gram"}, {}], 
           XMLElement["unit", {"short" -> "K", "long" -> "kelvins"}, {}], 
           XMLElement[
           "unit", {"short" -> "MPa", "long" -> "megapascals"}, {}]}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Phase diagram", "scanner" -> "Data", "id" -> 
     "PhaseDiagramPlot:ChemicalData", "position" -> "800", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n    ", 
         XMLElement["microsource", {}, {"ThermodynamicData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"NISTREFPROP"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              RGBColor[
              0.9921487999999999, 0.8385818666666667, 0.6927381333333333], 
              PolygonBox[CompressedData["
1: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
feZCrxdYchP/x5EkDfwPVqH1RA==
               "]], 
              RGBColor[0.998154, 0.933974, 0.820264], 
              PolygonBox[CompressedData["
1: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
/CCUbqzpbbh/hOUpOvN/TF8r+W44jYn/Ao44UdI=
               "]], 
              RGBColor[0.9888385333333334, 0.7798814666666667, 0.5990192], 
              PolygonBox[CompressedData["
1:eJw9k3tMk2cUh1totaWlLaybBDZuiWDYqCyDMZz4vlhEwMtSVrAbCOXS7xOk
XBMDDhghoKIyayjMjYsVhkPRFhAGCMoZsjJkQ2wUkcmGoYFOUKCgIgjsc8l2
kpOT549znpw/fi5xqWEKCxqNto3qN5N4U7bpYBvCnJg97QK1af5WDzLJ/3lL
aXGbjmK5td2V94tMSF+tMRAUqzyGfzhZ+QSpeyzsbClu3K2u+vvaDGqPeVqh
yyBhKCGsPHjgGZKOPXD1p5gWcKLv8/Q5lDx5TNieTu1/NiW2zJ1HBJ2tfI9i
5+ggaD5hRryqoIbENOpect32OPUCyuP3dJ1LJQF/xeiw0SyiJyHCyboUEkaK
431+bniO8oyaH08pSTh0rqcpre0Fit09VSVOJmHpoovI+dZLpL5+M0qfRPla
8y/fGVxCAzW6QE4i5ev9y+3r0VdI05wjYZGUz7CjVjS5jBYf3x5vSqB8j6uc
/pxfQXprbepyLPXP7OuKktXXKKWlaZ8hmvKtRdr5s9dQyyCI3SMpH7dTPSNc
R8/uCj2NEST0Wpew9gto2Ippmz8nIUFQ1qXfXE7DNj7a3q17SZC9O1O46kDH
JVHa5/m7SNDUOojvX6DjPKfG/hv+JJg89tCvulvgwLNl4x3eJHg1H+0uvGqB
J4qL7gZ4kJDjdzk36iNLTCSGvm3vSPng4afeHZb4y99Tfl3lk8ANZi9zEAMb
snm4ap0A2Z1P2id6Gfh68tPDlTMEaCIOHekMZWJHGZd2dpgA09i33qVDTKy7
WBdDu0GAl6LPnBSxAUdf2SU+eJ6ArJkXjTsfbcA7W8+8xcwloDfTLdU+biOu
NvqZt4cTwF0J9zRPbcRu2pEkkTsB0oKi6X4lCx/YtPWXiXkFaNitly4ssLDG
OGQWtyjApDKS2dls7LBv1IanVICXndBNss7G7Uc+yLtnr4Cs82LjliIrHCy4
nfiyMwHALbOGxuFgYUbMQvX+BOBqa+QjKg4eZ2frWobiQepjcGx8h4uHo33L
HqF4qOyijx2v5OIE5oFtyu/iwCT+sCLG1RqbN3sGkqOx4DUg/8K33hr/1Pdq
+vC6HLLCVJv4Ih4u4FgqmxlygIfd9yev8bB3+qnwpYGDwIqdLb3px8eyhoAG
nn8kSE2OYeXdfHwvx+f7dYkMBn3dWW2uAry4dmvujzUpZKzsmKpRCHA9o/9M
0McSsOuO0H9TL8DOTloflSEEugpS6o5OC/DpSyjUj4dBHnSskBDZ4P/y+Jvi
+L/8D8fsvpc=
               "]], 
              RGBColor[
              0.9954590666666666, 0.8972822666666667, 0.7864570666666667], 
              
              PolygonBox[{{96.74000000000001, 1.6227949246524718`}, {
               664.3490625, 1.6227949246524718`}, {664.3490625, 
               4.2953129489555515`}, {96.74000000000001, 
               4.2953129489555515`}}], 
              RGBColor[
              0.8980593333333333, 0.8971646666666667, 0.9449146666666667], 
              PolygonBox[{}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"gas\"", {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.703033268101761, 0.29618395303326794`}]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"supercritical\""}, {"\"region\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.05}}}], 
                   "Column"], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.8182583170254405, 0.9002152641878671}]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\"solid\"", {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.0734637964774949, 0.6484931506849314}]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\"liquid\"", {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.2551859099804354, 0.7261839530332772}]], 
              GrayLevel[0.3961454], 
              Thickness[0.003], 
              LineBox[CompressedData["
1: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
+D9HFT/q
               "]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"saturation curve\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.40039138943248476`, 0.4722602739726027}]], 
              GrayLevel[0.3961454], 
              Thickness[0.003], 
              LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAo3A9CtdzZ8ASSQXj74whwCiTibev
c2fAYA0YrCuF6D/GnqDSZnNnwJAq1qSKnOo/lMICGBJzZ8CwR5Sd6bPsP7hf
7ZuvcmfA0GRSlkjL7j9U3dciPXJnwABBiMdTcfA/bOaGFLhxZ8CQT+dDA33x
P2YBCW0dcWfAIF5GwLKI8j8OnUaraXBnwLBspTxilPM/fg/CvJhvZ8BAewS5
EaD0P+pJFOalbmfA2IljNcGr9T9+5KCni21nwGiYwrFwt/Y/YUfnnUNsZ8D4
piEuIMP3P5S6vlzGamfAkLWAqs/O+D/Loq9EC2lnwCDE3yZ/2vk/oLJ8UQhn
Z8Cw0j6jLub6P/ThyuCxZGfAQOGdH97x+z/GDa5v+mFnwNDv/JuN/fw/brSx
TdJeZ8Bo/lsYPQn+P7TOwEMnW2fA+Ay7lOwU/z/u0RQt5FZnwMQNjQhOEABA
CgUSgPBRZ8AQlbzGJZYAQBE1rsQvTGfAWBzshP0bAUCNXK71gEVnwKCjG0PV
oQFAfh+wyb09Z8DoKksBrScCQESRleC5NGfAMLJ6v4StAkDjiYXRQSpnwHw5
qn1cMwNAZmlKFRoeZ8DEwNk7NLkDQFrNbsj9D2fADEgJ+gs/BEDSeQ5Anf9m
wFjPOLjjxARAumzta5zsZsCgVmh2u0oFQB5YDACR1mbA6N2XNJPQBUCvpqVf
AL1mwDBlx/JqVgZAXqxFQ12fZsB47PawQtwGQEK1jxMFfWbAxHMmbxpiB0Ce
5DnyPFVmwAz7VS3y5wdAJq7Yai4nZsBUgoXryW0IQFcXL8Xj8WXAoAm1qaHz
CECg5NDyQ7RlwOiQ5Gd5eQlAG03aEQ5tZcAwGBQmUf8JQLh2LH7UGmXAeJ9D
5CiFCkBIEMpp97tkwMAmc6IACwtAFHJf855OZMAMrqJg2JALQOAJea+00GPA
VDXSHrAWDEDWXjeV3D9jwJy8Ad2HnAxAZAVXOm2ZYsDoQzGbXyINQPIlLURn
2mHAMMtgWTeoDUC2x/nra/9gwHhSkBcPLg5AggsDbbIEYMDA2b/V5rMOQDRx
i1X4y13ACGHvk745D0BYq0GrDj1bwFToHlKWvw9A1Hw1mv9RWMDONycItyIQ
QPT+w/Db/lTAcvs+56JlEECoBMmPRjZRwBi/VsaOqBBAIB+uNZDSScC8gm6l
eusQQIypP0o5DkDAYEaGhGYuEUCeZbFT
               "]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"melting curve\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.31215264187866865`, 0.9248923679060665}]], 
              GrayLevel[0.257923], 
              PointSize[0.021], 
              PointBox[{96.74000000000001, 1.6227949246524718`}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"critical point\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.7256360078277884, 0.770215264187867}]], 
              GrayLevel[0.257923], 
              PointSize[0.021], 
              PointBox[{-187.61999999999998`, -8.775267691035456}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"triple point\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.2651859099804299, 2.0362696137702423`*^-18}]], 
              GrayLevel[0.5343678000000001], 
              PointSize[0.021], 
              PointBox[{20., 3.3875862701648884`*^-6}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"STP\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.5463502935420741, 0.6823091976516634}]]}, 
             AspectRatio -> 0.8, ImageSize -> 300, 
             PlotRange -> {{-273.15, 326.85}, {-8.775267691035456, 
              3.99428338758627}}, Frame -> True, PlotRangeClipping -> True, 
             FrameLabel -> {
               FormBox[
                TemplateBox[{
                  StyleBox[
                  "\"temperature\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  TemplateBox[{"\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
               FormBox[
                TemplateBox[{
                  StyleBox[
                  "\"pressure\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  TemplateBox[{"\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"atm\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm]}, 
             FrameTicks -> {{{{-9, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-7, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-5, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-3, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-1, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {1, 
                  FormBox["10", TraditionalForm]}, {3, 
                  FormBox[
                   
                   TemplateBox[{"10", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}}, None}, {
               Automatic, None}}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> "atm", "long" -> "atmospheres"}, {}]}]}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Chemical identifiers", "scanner" -> "Data", "id" -> 
     "ChemicalIdentifiers:ChemicalData", "position" -> "900", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"CASRegistryNumber\"], \
EntityProperty[\"Chemical\", \"BeilsteinNumber\"], \
EntityProperty[\"Chemical\", \"PubChemCompoundID\"], \
EntityProperty[\"Chemical\", \"PubChemSubstanceID\"], \
EntityProperty[\"Chemical\", \"SMILES\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"CAS registry number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"74-98-6\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"Beilstein number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"1730718\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem compound ID\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"6334\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem substance ID\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"24857802\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"SMILES identifier\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"CCC\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalIdentifiers:ChemicalData__More"}, {}]}]}], Typeset`pod10$$ =
    XMLElement[
   "pod", {"title" -> "NFPA label", "scanner" -> "Data", "id" -> 
     "NFPALabel:ChemicalData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Propane\"][EntityProperty[\"Chemical\", \
\"NFPALabel\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{
                InsetBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[0.009], 
                    GrayLevel[0]}], 
                   RGBColor[1, 0.87, 0], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{
                    0.7071067811865475, -0.7071067811865475}, {
                    0.7071067811865475, 0.7071067811865475}}, {0, 0}}], 
                   RGBColor[0.9, 0.25, 0.1], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {
                    0, -1}], {{{-0.7071067811865475, -0.7071067811865475}, {
                    0.7071067811865475, -0.7071067811865475}}, {0, 0}}], 
                   RGBColor[0.1, 0.37, 0.9], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{-0.7071067811865475, 
                    0.7071067811865475}, {-0.7071067811865475, \
-0.7071067811865475}}, {0, 0}}], 
                   GrayLevel[1], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{0.7071067811865475, 
                    0.7071067811865475}, {-0.7071067811865475, 
                    0.7071067811865475}}, {0, 0}}], 
                   GrayLevel[0], 
                   InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    NCache[{2^Rational[-1, 2], -0.05}, {
                    0.7071067811865475, -0.05}]], 
                   GrayLevel[1], 
                   InsetBox[
                    FormBox["4", TraditionalForm], {0, 0.6821067811865474}], 
                   InsetBox[
                    FormBox["1", TraditionalForm], 
                    
                    NCache[{-2^
                    Rational[-1, 2], -0.05}, {-0.7071067811865475, -0.05}]], 
                   GrayLevel[0], 
                   InsetBox[
                    FormBox["\" \"", TraditionalForm], {
                    0, -0.7571067811865475}]}, 
                  PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, ImageSize -> 167, 
                  BaseStyle -> {
                   FontFamily -> "Times", FontSize -> Scaled[0.24]}, 
                  BaselinePosition -> Center], {87.675, -87.675}, 
                 ImageScaled[{0.5, 0.5}], {167, 167.}]}}, {}}, {
             ImageSize -> {40}, ImageSize -> {187.35, 187.35}, 
              PlotRangePadding -> {6, 5}, ContentSelectable -> True}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Table", "input" -> 
         "NFPALabel:ChemicalData__Table"}, {}]}]}], Typeset`pod11$$ = 
   XMLElement[
   "pod", {"title" -> "Safety properties", "scanner" -> "Data", "id" -> 
     "SafetyProperties:ChemicalData", "position" -> "1100", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"FlashPoint\"], EntityProperty[\"Chemical\", \
\"AutoignitionPoint\"], EntityProperty[\"Chemical\", \
\"LowerExplosiveLimit\"], EntityProperty[\"Chemical\", \
\"UpperExplosiveLimit\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"flash point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["104", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "104", "SRString" -> "104"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"autoignition point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["432", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "432", "SRString" -> "432"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"lower explosive limit\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.1", "SRString" -> "2.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"concentration in air\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"upper explosive limit\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9.5", "SRString" -> "9.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"concentration in air\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "SafetyProperties:ChemicalData__More"}, {}]}]}], Typeset`pod12$$ = 
   XMLElement[
   "pod", {"title" -> "Toxicity properties", "scanner" -> "Data", "id" -> 
     "ToxicityProperties:ChemicalData", "position" -> "1200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"MacmillansChemicalAndPhysicalData"}], 
         "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Propane\"][EntityProperty[\"Chemical\", \
\"RTECSClasses\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"RTECS classes\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"agricultural chemical and pesticide\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "3"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ChemicalDataSourceInformationNotes.html", "text" -> "Chemical data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ThermodynamicDataSourceInformationNotes.html", "text" -> 
        "Thermodynamic data"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "12", "datatypes" -> "Chemical,Element,Thermodynamic", 
    "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.4090000000000003", 
    "parsetiming" -> "0.148", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP128118c1a02bfeah78g000006a5689afcdfe1gic", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa128218c1a02bfeah78g000001hd7faca82cd64h94222294402565530544", "version" -> 
    "2.6", "inputstring" -> "Propane molecule"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 6, 23, 19, 17, 53.5679632`9.481479978227489}, "Line" -> 
    3, "SessionID" -> 26807338710386329787}, Typeset`showpods$$ = {1, 2, 3, 4,
    5, 6, 7, 8, 9, 10, 11, 12}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {
   "3DStructure:ChemicalData", "3D structure", 1, 1, "Content"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Propane molecule"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{132.09765625, {32., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[3]:=",ExpressionUUID->"74901a7a-0e80-4070-b10c-f1175498ce38"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     PaneBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJztnWd4lNXW98/1Ps+H9+P7zQ/nw8lzmqconKPnHAQMGWqEIFWK0obeiYQS
EkSGGgKEIC00mdBBiJSIdAaQXgJIB2EoAipIryrud/02s/LcxgRRA3fKva5r
MyGZmbv993+VvfZa/9MmvkGH//Ob3/ym1/+Vfxq0TqyckNA6qeH/k/806tGr
c8ce7dvV7NG7fcf2Ca+0+S/55SAZ82T892888cQTT0qXlKtY0Ve+UqVg5Ro1
QrXq1jV1GzUy9Rs3Dtdv0iQQGxfnc/v8PCldUi4mJqp8dHSoYkyMqfraa6ZW
vXqmXuPGplHz5uZNv9+07NDBtO7c2fg7dAjFxMZGuX2+npR8qRAd7a9QqZKp
6PMZX/XqBp4UfjRvtW5t2ggWOyckmB6JiSahf3/Te8AAXsNtu3b1uX3enpRc
gSfBJEN0t6ldv75pLBzp79jRdOnVy/R5910zYPhwMzgtzaS8954ZMW6cGTZ2
rBkyerSJa9jQ5/b5e1LyxGIyOjr8qvCkYrJJy5ambZcuJr5fP9N/6FAzLD3d
pGVkmPEzZpjJc+aYafPmmalz55oJmZngM+T2NXhS8gT9je7GnoyL8GQbweTb
SUlmQEqKSR0/3owTPILFWR9+aOZ/9JFZuHKlHfOWLzfTFywwiUOG+Ny+Drel
bLly2OYBfMWadeqEX2/YMFyvUaOw+IyBsi+/7HP7/Iqb4OdYH0fsyQZNm1rf
BjvyHdHbqRMmmInCiTMWLbJ4zN640azats2OlVu3mhWffGKy1q41k2bODLp9
HW6J9RVffTVYqWpVU6N2bSN4tPexcYsW1jZv0a6dvafN27YNx9Wt63P7fIuD
cE+5nzUFk/jdTVu1Mp179jRJgwdbO3JCMGiCgsmFH39slodCZs+JE+bw2bPm
+BdfmK2HDplN+/ebNTt3miXr1xu3r8UNUbs8ukoVUz0uzrzeoIF54623LB6J
W3SMjzddxT7v0bevtYl4bd6und/t8y7qQpyyeq1aNj5JLIh7mZCcbAaLPzN2
2jTz/sKFZsGKFWa58OT63bvNmStXzANjzP3vvzdHLlwwuwSnWw4etPzp9rU8
a1FMYpfHCk9q7KJdt26mu+APXxHbfGBqqgmMHGnHu2IXJcvvBK9+t8+/KMvL
5cr5iFE2fPNNe087vf22SR4yxIwU/Y1/M1fsx2XCk2uFE+HH89evm4eCy3sy
wteumU/PnTN7PvvM8qbb1/IsJddXrFzZYhKObNm+vemSkGBjaO+OGGGGjx1r
Rk+aZMZOn27tc3xGfh45caKd9606dvS5fR1FVZ5//vko7KEmYgsRE0LPBGR+
w5UzPvjALFm3zmwTPO4Ph83B8+fNlbt3zfeCyRsyPvv6a3NU9PkB0esbc3LC
bl/Ls5RyFSr4K4nuBpNqk3fr3dv0GzTIDBkzxqRNnmxtoKniK2IH4S/OXrLE
vqKDwOmgtLRSa5M/idR5440waznoH2LmQ+W+Ev+ZvXSpWbdrlzkj2Lt57565
dg+WfCS3ZZwSvjwpev3Q55+Dy1ITK4IriV/UEHuyrtjk4s/YGC82OfE05jQx
tJlZWdZXzFqzxizbsMEslYEdvnj1ajNn2TIzXnCbOHBglNvXU1SlZp06QdXh
fQcONMPF38mYPdvMy842G/fuNbcfPrRYvC/juwguv/72WxO+ccN8JriER5eE
Qj63r+NZidrk6Bl87g49etj7xnwGk9Pmz7e4W7RqlY1XbNq3z+w8dsxsPnDA
zvNV27dbH5L3iD73u309RVXIz6jy2mt23vdMSrJ+OLYlc321+DOHhQ8viF15
Rvjx8v375pLw5pmbN01Yfnf8q6/MruPHS5UOJ0ZJnLeB2OTEgIjz4tOgu+FJ
8Pbh2rXm4y1brA10VOycaw8emAu3b+fiEx8S/pyYmenp8nzE2u8xMdZOIkaE
Hh8ldjlzHr78aNMmE8rJMbtPnrR25JFLl8yJy5etbcnr/jNnwvOzs31uX8ez
lJjq1QPE1FgTgyuxKVmXnTRzprUf0dtgcv2ePdYnvCTzF3n4/ffWHt8j9xIf
cs2OHSYzK6vU2D8/R+DKmGrVjNiY1r4kpjFR7i/xSuKSOTK/14ru4T7uPXXK
+t+HL140R2TknD4dXrR6dcDta3jWUjk2NtBQ/G/0C74Ovnf61KnWn+G+Zctc
3iCY3Hr4sPlU5vL1+/cf2eRi+2CPawxjo+h3sUFLla55EimIKzMXL7bxyt0n
Ttj7eVl8cHDJ2Hn8uJ3vWw4eDKeMG+d3+xrckCqxsX7sSmK9PZOTrf+N7w1X
LhW/Bj194ssvzRmxv8/dumVjvchdeT119arVOaJnbNwXLMcnJvrcvqaiJD/i
Spn3ypXrZL5/KfbkN3I/z+LfiN7mfot+Ci9csSLg9rm7Lehw7hmxSuzxjFmz
bKwX/X1K7tVt4cj74i/eMf8r/IxNjv2Dr8g8hwNGjB/v2ZgR0bWKGg6uHOng
SvFl7L28Jff2hOge/JsNOTne/YuI8GVI/XDRG7l+IrhkHexhBItwpf58VX4+
LXMdXKLLV0f8cjjT7espKpKXK7GRyM+wXCm+4hd5uFLuYzg9GIxy+7yLipBz
yn2zcbWxY3NxuWLzZrNV9PNZ4cVLosM/v3PHXLx3z1wSWwi9jh4/JjpebHPz
wcqVNpZE3kuTVq2i3L4mt+VHXCk2ElwZhCtl/uZypcxvuPKEcOXm/fs9rswj
zdu1C/V+5x0zJC3NzmniQ+gafB7uofqIGr9ggEniGthEHwmGWQ8ixhnvxdcf
cWXVqo+4smvXH3OlzGm48pyDKzM8rsxXOvfsGeL+jZkyxa43EiNCP3/y6ae5
sbXDotfxdcCo+js7jh2z/jgcy+fcvg635QdcKbZ7T+VKuTdwJXFf5cqTHlc+
kbTv3j00ND3drivCmcTLWdcBm9xP4hfEheBQ8lvA6sHPP7fYxB4lVuz2Nbgt
ypWsoVmuTEmxXEkuG1x5KR+u9HJZHy/Va9XyEzMit598jJmR2Dr6mRgw9xUO
JQ7MPEevHxX+3BcOW5xy77v17u13+zrcklyujIuzaxWWKydMsFy5LD+ulPu3
+dNPPa58AsHWJKZhcyxFr/P63vTpj3KJliyx3Ii9iX3JfSW+Qb4LHEre/5S5
c0ttfP2FMmWC/ylf3nJl2whXTohwJXP5onLlzZseV/5Mia1bNyo+MdEERo2y
MfZe4g+xX5RcQXwh/JycU6ce+UGCyZNw5hdfWHuTv+Gby+f9bl/Hs5bf/e53
UX/84x/N3//+d1OhYkXTzO+3e3cex5WfeFz5s6RZq1a+d4YNM6MmTTL95ZV1
8/Rp0x7Ne9HnO44efcSZgkfu7wnlzBMnbL5/n6Qk88ILL4TLlCkTevHFFwPy
rAJuX9PTlj/84Q/B559/3pQtW9ZER0eb119/3TRr1sykjBlj/Z0Lwo95uTJj
9myf2+dd3KRVx45RosdDY6ZOtWsVxJDwa5j72JLkGOCfH1c7U/S6cmbSgAGm
onDGv/71L/Pvf//b/Oc//zGvvPKKefnllwNuX9fTECdXcq3Vq1c3b7zxhmnT
po3p3r27effdd81RmcseVxaeiE6OElspwB6fMZMn29wsfJ/tR45YfxzOPBnh
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
ADUTUtLTfWkZGYEp8+cHxAYILlyxIqR+j8Wt+PRr5bvWReqBZInvoz2NwRED
3QtewA06Fwzhl2tPw4L6bKK7sRvhQL6H34NdYuvgl2OAe/rOal95jsHv4Uz5
Xp/b992TnxZy51InTAgR1yG/Ez8bXY0Ps/vkSRu3FA4Mz83ODjzJ94FbehSk
T53qnzhzZmDmhx8GMz/4ICT+Dr3rcvtsYlvCYdrTmIHedvbKdvZPUP0NT2pP
PDhV+xiq/tc1Sj4Dj6pNC4bl2N56ZDGTxIEDo+DAzKysoHBnaN2OHaFFq1YF
p82f7yvM42DbEt8WHvTTb1P4LkCPO9HNYfxuYuhOHa716fFZ0MNwH9yKvneu
nasPr30M+Q7wq31v4Wf5vLfm48nPFuE8v7OHu7M/F3YlXAkuiR2xdu7s/ar9
NZUz8ZuIv7MnF1xiM7R6xrmjnpQcAZesgWs+ELjE33H2M3T2MXSuWTr7ZWt+
B5yJjSmvng735BeL8J0/P1wSeweX+EHgkPVKZ79s8j3AZAw5mGKbVhG/CTuV
tUo4tqvYt25fmyfFWwRPIe3jTtxS+2ziN4FT9DZY1J7Ef5P/x+C/5+nFxagr
OOZz9ju8Xu6e/EoR3zyk/rj22dT+r3Aj/g46vKzo7uhI3w76IVEvj9xkcj9b
iK9EnYge4v/z2QH05vH6dnjyK0T0dJRwZghdzjoQcSLtswmXosv/IX4OvWRs
nwTR3TXy9COGL9nH2SUSk8rIzCRPxdPnnvxqETszwNo48UhiRaz1oMvhzFcj
fYgrRF5tHXBnz9cIZ1KLLDB8uM0rJfcZrLK/4/WGDQMxXk8uT36hiF9texmy
Pq79iV8Rvx0c0r/Q2fPV9tWkTnikrya5U+zzJCef9QJyR6n7BJeCWfLoG775
ZsDta/SkeIvgM6qh8FztevWCNSK9uKIj/YjBKHuXtE49NcFtn2yxTck3XbFl
i90PQn0yck/J9aPWKDUfBbtezrAnhSL04sLfiYn01cT/qRKpZUNvBeo0sOeN
fXD0iiPXlPVVq88XLLA1mW2/OBn83LVXL5/b1+RJ8Zc44Uz4EZ8HPV5R/R/2
EImdGRvpCYufzp4m+JN+Hehz8qDZ28lgPxJ7kdg/5/Y1eVL8RfwbP3084Ej1
f+BMehDzMxjl77UjcU32tYPNNsKd9JpjPzJ76KjxyD4kcv4SBw/2u31dnhR/
ES4MO/0f2/NVXnP1OfFM9HkkbtRCbE36yLVkvV1sy6UbNtg8KvY30R9p1MSJ
np3pya+W1xs08KO3LV9G+hDjC2F7gkk4kvoN1FugVxd1HNjTDibJ2acGE3mi
5Iziqwt/evFNTwpFwKX2x4Y3wSR6G58HbsQXB4fUB6e2CHn69I3llToM1BjB
5iQHf8GKFR4uPSkU0dp0cCY+DhyJD96he3dbJ7FfpC44MUz8G2ouMOiPRN0F
9t+x/x1srtm2zcOlJ79aylWs6MvV3YJJbEntzQU/vpuSYrE3Rnxu4kT06cLH
oVYIPMm+O/xx8vXZvyS2ppc77MmvlvKVKgXVx6H+IWs4rIdTIwkepF4idRLZ
w0QdEPYkU2uBvobUW6BGyPSFC219hz0nT+Kb+9y+Jk+Kv/iqVQup3611RKgF
RiwSHqTGDXGg+aKniVluzMmxvZDYF0e9BeqDfCC+OHH2dbt3ezrck0IRcog0
t406h9TbZl88NecyIv3a4Ufi6ex5v3D5svny5k1z6Nw5u6+Yvcbs4aR/0sCU
FJ/b1+NJyRCNTzYn16hXL+tja2/szAgm2T9MH2LqMty6e/dRzaVvvrG1wdjj
zv53anwOSU/3uX09npQMIV+NeBC9CqgV6+yNTU1EeJL4D/vi6Z95/+FDi8sL
N27Y+g3sQ4ZHiV/GxsX53L4eT0qG1GvcOEguG/0ziAeljh9v9Tf+DJjceujQ
o/p0X31la35Rdwlcnrt929Zt4G/sk1+7c6dnW3pSaMJ6T4uIDs+tmxjpXbhp
3z5z4do1W5/ugYy7332XWxfs0p07ttfrkYsXzd7PPjPZmzd764+eFKo0b9s2
rD3bqcdNvwLqxlKr81qkXqLt2y7jAT9//705I9xJ3SXq3BwIh036tGk+t6/D
k5IlDZs181lcpqRYXGZGehCz7o2vQ026c4JDsHjh3j1bn872bL9yxdZeEvvT
40pPnoq079o1yJq39iamd4GtAyb2Zc7p09bncfbGpm4i9uXO48c9u9KTpyrx
iYkB+mPQMwNfnLi5rRXv6I1N/URqJlJjdteJE96aoyfPROIHDowaNXFiGN8H
zqS3C/HzHUeP2pgQ3Lnz2LFw9qZNAbfP1ZPSJ9Q7TJsyJTB76dLg4jVrQtkb
NwaXrl9faL2xPfHEE0888eRZyv8Hlc9mHw==
        "], {{0, 0}, {166, 129}}, {0, 255},
        ColorFunction->RGBColor],
       ImageSize->183,
       Method->{"ShrinkWrap" -> True},
       PlotRange->{{0, 166}, {0, 129}}],
      ImageSize->400,
      ImageSizeAction->"ShrinkToFit"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Propane molecule", {{"3DStructure:ChemicalData", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{3.896554657740714*^9, 3.89655472292957*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b4d87548-e940-406a-b46f-58e6b716312f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Last output cell", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 
  3.89661812307841*^9}},ExpressionUUID->"6055b929-8ed5-48c3-a199-\
b132800b876a"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9},ExpressionUUID->"f60b91e1-3f9d-41cf-8866-\
ff8b73fdaa30"],

Cell[BoxData[
 RowBox[{"Total", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8966182090687*^9, 
  3.896618238952159*^9}},ExpressionUUID->"7e2b1202-ed76-4988-bf76-\
c968c0833ca7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"=", 
   RowBox[{
   "Visualize", " ", "the", " ", "table", " ", "of", " ", "values", " ", 
    "for", " ", 
    RowBox[{"i", "^", "2"}]}]}], ",", " ", 
  RowBox[{
  "where", " ", "i", " ", "goes", " ", "from", " ", "1", " ", "to", " ", 
   "15."}]}]], "Input",
 CellChangeTimes->{{3.896618310717902*^9, 3.8966183351028996`*^9}, {
  3.8966184881205626`*^9, 3.8966185055255537`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[5]:=",ExpressionUUID->"6d2dd7f5-9501-4a14-a2fd-31ed4b034569"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create a function", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896636260624796*^9, 
  3.896636263408591*^9}},ExpressionUUID->"c4dfb24a-45c9-400f-b116-\
23b8c944ea9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doubleIt", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "*", "2"}]}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9, {3.896636274679034*^9, 
   3.896636318772581*^9}},ExpressionUUID->"b4fa2994-a8b7-462f-bbb1-\
e6fd782b588d"],

Cell[BoxData[
 RowBox[{"doubleIt", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.896636297619831*^9, 
  3.8966363172230577`*^9}},ExpressionUUID->"ce96a52e-f033-4563-b3c4-\
ebf88351e5b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"powerOf", "[", 
   RowBox[{"x_", ",", "exp_"}], "]"}], ":=", 
  RowBox[{"x", "^", "exp"}]}]], "Input",
 CellChangeTimes->{{3.8966182090687*^9, 3.896618238952159*^9}, {
  3.8966363666395073`*^9, 
  3.896636412654977*^9}},ExpressionUUID->"61c2dfa0-197b-4a60-bf47-\
944740ca070b"],

Cell[BoxData[
 RowBox[{"powerOf", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966363946874285`*^9, 
  3.8966364114903855`*^9}},ExpressionUUID->"94ce6fca-a22c-4a64-9cbf-\
15353c8ac2c0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8966364090451794`*^9, 
  3.8966364090502253`*^9}},ExpressionUUID->"8b6aacf3-da81-411d-ae2b-\
9eb4cbae3757"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrices", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896637007660076*^9, 
  3.896637009243872*^9}},ExpressionUUID->"eb4db081-f279-4149-9139-\
bb99c32ccacb"],

Cell[BoxData[
 RowBox[{"amat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}], ",", "5", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9, {3.896637016098863*^9, 3.8966370629629307`*^9}, {
   3.8966925209310713`*^9, 
   3.896692551971438*^9}},ExpressionUUID->"1d0f40c8-30a4-48fc-b81c-\
966e8845a8dc"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "amat", "]"}]], "Input",
 CellChangeTimes->{{3.8966182090687*^9, 3.896618238952159*^9}, {
   3.8966370797970085`*^9, 3.896637087692565*^9}, 
   3.896692567621275*^9},ExpressionUUID->"b754b86d-78f2-4688-a378-\
edca045df1ce"],

Cell[BoxData[
 RowBox[{"bmat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966371000847273`*^9, 3.8966371333851767`*^9}, {
   3.896637167556698*^9, 3.896637178467637*^9}, 
   3.896692578821743*^9},ExpressionUUID->"a368c2ea-a050-443c-bfef-\
5ddedc05f8a2"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "bmat", "]"}]], "Input",
 CellChangeTimes->{{3.8966371472578545`*^9, 3.8966371519288654`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2dd62be0-221d-420c-b531-9abc9b5a1311"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmat", "=", 
  RowBox[{"amat", ".", "bmat"}]}]], "Input",
 CellChangeTimes->{{3.8966371921112566`*^9, 3.896637207272106*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"724eda57-a93e-4e18-9639-705d3c94810a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "21"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8966371988374925`*^9, 3.8966372094908624`*^9}, 
   3.896692598244585*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"5852b4c9-ae6f-4013-957f-f84601bb003e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "cmat", "]"}]], "Input",
 CellChangeTimes->{{3.896637215607462*^9, 3.896637220648633*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"da7befb4-64b1-46e6-b0ef-54f216d6b2cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.896692615764097*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a4fc17c7-597c-471a-b447-dcbeebb47518"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "cmat", "]"}]], "Input",
 CellChangeTimes->{{3.896638904987034*^9, 3.8966389079537373`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ba2b72e9-c892-401a-b5ad-55f128f292c5"],

Cell[BoxData[
 RowBox[{"-", "123"}]], "Output",
 CellChangeTimes->{3.896638909156525*^9, 3.8966926309608026`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e6e31b48-f2c5-4905-aa76-40cf2698a9b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmati", "=", 
  RowBox[{"Inverse", "[", "cmat", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8966372260643883`*^9, 3.896637233078429*^9}, {
  3.896637289393007*^9, 3.8966372910693398`*^9}, {3.896638945387023*^9, 
  3.8966389483249893`*^9}, {3.896692668268381*^9, 3.896692669622859*^9}, {
  3.89670489579263*^9, 3.89670491399612*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"0216e79d-cc78-4512-8520-8b9f0691b269"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "41"], ",", 
     FractionBox["11", "123"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "41"], ",", 
     FractionBox["2", "123"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896637236607276*^9, 3.8966372929748526`*^9, {3.896638202928361*^9, 
   3.8966382424303455`*^9}, 3.896638949384096*^9, 3.896692639745816*^9, 
   3.8966926706228533`*^9, {3.8967048980491867`*^9, 3.8967049160983953`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"488295c8-e1b8-4f68-be53-5b4a871f01e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cmati", " ", "//", "N"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8967051697430234`*^9, 3.896705190581333*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e8564e6d-6b0f-4e5d-8ea7-ddd67ab036d9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.17073170731707318`", "0.08943089430894309`"},
     {"0.12195121951219512`", "0.016260162601626018`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8967051757284718`*^9, 3.896705191800084*^9}},
 CellLabel->
  "Out[69]//MatrixForm=",ExpressionUUID->"4b2bcdab-8c00-4cf2-b92c-\
8e0686e0ce6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"cmat", ".", "cmati"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966372997081957`*^9, 3.896637315780059*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"fc2a36ed-95aa-4cd4-8c53-d9fa3d17dd92"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8966373048019967`*^9, 3.896637317152793*^9}, {
  3.896692651559162*^9, 3.8966926763729057`*^9}, {3.8967049056328917`*^9, 
  3.896704923783959*^9}},
 CellLabel->
  "Out[61]//MatrixForm=",ExpressionUUID->"83dc94de-e29d-425c-87fc-\
3a214ef27803"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cmat", "+", "cmati"}], " ", "//", "N"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.896637407481142*^9, 3.8966374176162944`*^9}, {
  3.8966374617976065`*^9, 3.8966374731229544`*^9}, {3.896637846215715*^9, 
  3.8966378495849266`*^9}, {3.896639018797734*^9, 3.896639054277377*^9}, {
  3.8967050781054*^9, 3.896705137353307*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f95972d3-4be3-4278-8587-e67ecda21a35"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.829268292682927`"}], "11.089430894308943`"},
     {"15.121951219512194`", 
      RowBox[{"-", "20.983739837398375`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.896637419471941*^9, {3.896637462790435*^9, 3.8966374740534487`*^9}, 
   3.89663785182764*^9, {3.89663902169655*^9, 3.8966390563026304`*^9}, 
   3.896692699579358*^9, {3.89670508179292*^9, 3.8967051383220587`*^9}},
 CellLabel->
  "Out[66]//MatrixForm=",ExpressionUUID->"e97536f6-54e4-4e2f-8406-\
6e94b444abee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cmat", "-", "cmati"}], " ", "//", "N"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.896705126644092*^9, 3.896705146697115*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"4e67c5ef-fc03-438b-b5e1-2dc958a39dfe"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2.1707317073170733`"}], "10.910569105691057`"},
     {"14.878048780487806`", 
      RowBox[{"-", "21.016260162601625`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.896705129769092*^9, 3.8967051473449574`*^9}},
 CellLabel->
  "Out[67]//MatrixForm=",ExpressionUUID->"2731b979-6617-41c9-b32b-\
0b469fc394e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "amat", "]"}]], "Input",
 CellChangeTimes->{{3.8967033462019787`*^9, 3.8967033951845694`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"88086892-5009-437a-bf79-4aec9bb5ff75"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3", "4"},
     {"2", 
      RowBox[{"-", "1"}], "5", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8967033526229696`*^9, 3.8967034048071365`*^9}},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"e24a6693-8952-41d2-85c1-\
986c2206ece3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "amat", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966378703323603`*^9, 3.8966380558726215`*^9}, {
  3.8967033242280607`*^9, 3.896703361327876*^9}, {3.896703399757842*^9, 
  3.896703399835904*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"47451e5d-fe1d-44ed-81e5-d4d6a4a7354c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"2", 
      RowBox[{"-", "1"}]},
     {"3", "5"},
     {"4", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8966379720701327`*^9, 3.8966380570382586`*^9}, 
   3.8966927419541535`*^9, {3.896703334294681*^9, 3.8967033623741508`*^9}, 
   3.8967034006586685`*^9},
 CellLabel->
  "Out[45]//MatrixForm=",ExpressionUUID->"b014125d-068b-4902-9178-\
28f4d7319ca4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Referring to matrix rows and columns", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896636260624796*^9, 3.896636263408591*^9}, {3.8966383907905164`*^9, 
  3.896638394917861*^9}, {3.8966385994214935`*^9, 
  3.896638627218012*^9}},ExpressionUUID->"d529fb8c-32fb-4e25-b533-\
020be0b96b3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", 
      RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9, {3.896636274679034*^9, 3.896636318772581*^9}, {
   3.896638398998406*^9, 3.896638438296329*^9}, {3.896638638963355*^9, 
   3.89663868141145*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"c92c7fd8-8500-4e02-93fb-5f6dbc7ab247"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896638686577357*^9, 3.8967031025415936`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"7d5d5eec-c571-4b28-aefd-9636c0fdd865"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat1", "]"}]], "Input",
 CellChangeTimes->{{3.896703090159606*^9, 3.896703094801706*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"92d5b94a-84a7-4d8c-93b9-b9322a7c51a9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "4", "5", "8"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "2"}], "6"},
     {"9", 
      RowBox[{"-", "2"}], "1", "3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.896703096411087*^9, 3.8967031084958296`*^9}},
 CellLabel->
  "Out[34]//MatrixForm=",ExpressionUUID->"c4f1d71e-dc2c-428f-9eab-\
6c9110865d7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat1", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " ", 
  RowBox[{"(*", "row", "*)"}]}]], "Input",
 CellChangeTimes->{{3.896638694532045*^9, 3.896638700437766*^9}, {
  3.8967031158515434`*^9, 3.896703116023366*^9}, {3.896703462438521*^9, 
  3.8967034633447685`*^9}, {3.8967039702451515`*^9, 3.896703971073285*^9}, {
  3.8967048075019464`*^9, 3.8967048310822787`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"e14284a7-9d2c-470b-83de-6105f98cad8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "99"}], ",", 
   RowBox[{"-", "2"}], ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.8966387018226175`*^9, 3.896703117660263*^9, 
  3.8967034641260185`*^9, 3.896703972835996*^9, 3.896704832816654*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"24c849c4-e749-4f3a-8d75-ae74b77191f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat1", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "  ", 
  RowBox[{"(*", "Column", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8967032077181573`*^9, 3.8967032578875957`*^9}, {
  3.8967048197570477`*^9, 3.896704823813246*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"3bbd60ea-59a0-44a9-bc17-05c0b400da62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   RowBox[{"-", "99"}], ",", 
   RowBox[{"-", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896703218867447*^9, 3.8967048248291874`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"0f4b9e8c-5c6f-463e-82e9-e8019cdc5631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"992714c6-3774-4f81-8d92-3c1dc3f57171"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.896703135488433*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"65122bb2-203b-46e4-a8c4-db227deecc00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat1", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
  RowBox[{"-", "99"}]}]], "Input",
 CellChangeTimes->{{3.896638712038611*^9, 3.8966387237220397`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"66e85a9b-672d-453a-9232-879ce7012ab2"],

Cell[BoxData[
 RowBox[{"-", "99"}]], "Output",
 CellChangeTimes->{3.8966387248087626`*^9, 3.896703179482213*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"f22a9626-6d45-4634-b5c8-d3d5f4a8d92c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat1", "]"}]], "Input",
 CellChangeTimes->{{3.896638731319213*^9, 3.8966387321105757`*^9}, {
  3.896703168274913*^9, 3.8967031719326277`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"68448ea7-6dfb-429c-b75d-d62b82b63f10"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "4", "5", "8"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "99"}], 
      RowBox[{"-", "2"}], "6"},
     {"9", 
      RowBox[{"-", "2"}], "1", "3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8966387327317014`*^9, {3.896703173104452*^9, 3.8967031836627955`*^9}},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"63abb33a-30bc-4400-aac1-\
91a91383ffa0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot a function", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896636260624796*^9, 3.896636263408591*^9}, {3.8966383907905164`*^9, 
  3.896638394917861*^9}},ExpressionUUID->"8542ea68-0361-4cb8-810c-\
c3c0295082e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "x"}], "+", "7"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896647695994584*^9, 3.8966477089913225`*^9}, {
  3.8966927646556206`*^9, 3.8966927647805567`*^9}, {3.8966928014894185`*^9, 
  3.896692994831565*^9}, {3.896693064255233*^9, 3.8966930658489695`*^9}, {
  3.8967035345375795`*^9, 3.8967035690328636`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"96691166-fa48-40dc-b098-403bcfbf7d95"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1Ps31GkcwHEsuyOzuU4aOxie1opmTCaDqPnMV87ILdGok02W0ZlcIreU
RmgYldPGUNugk0s2Z4p2u7JqnpaStFbkrjYpQkUxyGVnd8/ZH97n9R+8rcLj
AiO1NDQ0/P7tP8Wjfp/UaoTdB5Im1GoOHklbpRpYQrivrmxy6yIH+xv8NXf7
M8LJP7VNy2Y5mO4avxw3jfA1ge3Sd+85+PeTBaSXIwij9gFyQD8Hk5g9FvgP
hMkPCObFGxxcmBTmk1GM8Isag4Own4MVmomVGs4IZ2Rdmc3ocMI6kXxH6h5r
nGsa3Xrp1AZs3PsgpjzfCtOabCsSd7NxYKM8Yu1jOl5cI6JsdnDEaZObYs4M
W+KSROb2K+MsfOeQPKp2mwUuvD5qKT3kgP0LBPS/z9NwUkgGa3lkHeaX3vX3
emeGx6NpKTHhdriq+XB3YggVpypu3Wfo2uJQSSHlz8umOO9h6EWO+FucHvZF
jZ7xKtxgoJOdT0NYg2Gp9Mg2wRmNNRfeNNNx/6nzUkWXET5d8eSsViYN01aI
qmcIQ7zDwmXp+SNTHO1kpzNA08f0AKXUS2GEI5xfXG5s1MO2VfIFbx89bJe6
UX2gkoQzRLXLvu81cdnzoKbDPB18JuID+6bhpHI0k+LOX62FceXcb5UJrdz6
IlvPt8HLyvbNOSz+4hyXNdY341A6q3SxrjNwMfkSttQP6C4HTynlIs5BiVgf
4qtr5w2Nh5Up9HtEX68JBO9DZR1HW5SimtfgW0KF5id9J9lBj7jsaO2uJ3wL
2Mi4/2vAuWFumovEau8VK9BKoQwKqVNcHjm3I1t3DXxFDsgM/zDLzdJOnxKe
t4HjL7s9EiqWuesL4/u8zdfCteKcgPRPmtA0I2x4kWwPceVCg9fBOtB52Ids
r8mE0Ci5uTSTBMOjVEUBiwUntqe4skv0oDA0z0m2ez1omxSNHFtYCVmjh2Yn
Sx2hpzV7SqJvCEO7hDcqWtkgSAvnyBuNIGOw5fJ1IyeI0ZuwbtttAvleLLnZ
Fg5YKh6e/XKcAjs1KB8lcc6QdscjSL/YFL5/nJDuc8MF4qtibnEcqPDs6FPS
/mFXIGs5hzPfmMEJXnXLK3s38IzdUWQno8HMdvXk3gPusLrOPM5zjQV0eAcb
byjeBAUJufmsHkv4ILCJFQ5thsCcbYzSW3S4V7k4pCIB2IVIBJViKwjbgsDt
AkD3iG65TGAN9FhpHRN40Bb+hmdkicBsRcwvfj08GNL+eb7IGkG1h/jIVB8P
ZqpEtVQbBM7i0x6yQR5QJyZoVgwEQVPXunqHeCBM/DTn4IbgVLfqc8Q7Hiwc
V1/124lgqfwYcUSTAJtLVLMTPyIYdJN1VtkT4MofaCfLEEQnV5ZsZRLgO1Yi
PXMWweeam5HvWAQcZNBV50oRUKx759ZzCGi4adNepUDgRzKn3QUCAh+yc5qa
Edx7ViXsFBAQKVK5e7Ui8F15h5Gyi4DUFbenW9sQ9PNbZleHEFDqv/GHzi4E
s/UTuaFhBLztBvdXwwiYZayrY1EELKRqTUeOImjo56XkxRLw9TdN1WPjCLxN
grgO8QQ47uWbfvyIYJ80+WlSMgGemrptSSoEMzhHbppKwK6Kx5L5eQRZC+ci
6o8QEOWZ53Z0CYHBhup1e8QE/P8vuBBbr1IfI+AfdPQ6GA==
       "]]},
     Annotation[#, "Charting`Private`Tag$212822#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-22.999998775510207`, 36.99999877551021}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.896647710511407*^9, {3.896692831744339*^9, 3.896692857408186*^9}, 
   3.8966928938589687`*^9, 3.8966929973388643`*^9, 3.8966930564484367`*^9, {
   3.896703556611809*^9, 3.8967035705297127`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"1cdebf71-f800-43db-8655-07e77ee67ad5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Plot sin(x)/x", Typeset`newq$$ = 
   "Plot sin(x)/x", Typeset`chosen$$ = "Plot[Sin[x]/x, {x, -9.4, 9.4}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Plot sin(x)/x", 
                  Defer[
                   Plot[
                   Sin[$CellContext`x]/$CellContext`x, {$CellContext`x, -9.4, 
                    9.4}]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Plot sin(x)/x", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x]/$CellContext`x, {$CellContext`x, -9.4,
                     9.4}]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[73]:=",ExpressionUUID->"100c934a-0a32-4540-9c49-e6f3d911bd55"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
X/rrWh3JXFM/32VSDmmx0pNLJOrJyqPzbvVsk8fZySGl+x/rSdMOZsEjT3kc
CJnj4jZdT3aDXnXEYXk8d8PbuJn2gkTLrOnTPCuP0gPqL3usXpCX9710fYvk
8eq7RSbP770gRd/fvwuVpOBaJT3WlV0NJND5X9RHeQpqH1s6WRbYQAzLtZds
mE9BQ6bSi2uxDSQr9kjsfC0KKnxri9lR3EDStMRWFq+m4Jn1rqqK0o1ke5x+
v/o6Cu5Num3zjNlIFH84XI22paB3S96g4GIjl6vShpxcKOjAbamtc20kkTuX
pP08QkENt9CZwKxGYsHetn5XCAX7Up3Yic8aycyCUz+rwyj4R3tngi+3kQSP
1W28ep6Cl1LyS+m8RuJ3xfW30R2BvvS86BYjDtGZiMhKfkDBw2nWJsHAIb1u
953+PaIg64hDPmczh7jq/8htqaDgzHrrA3GHOGRzXYzb4XYKqiglzWy/yyHS
BnkSb7somPZ75GfMYw5piH9VtLqPgq8dzBJ9qzjE0kNdVmaUgqVy9zZavOMQ
k9+PK3Mkqfg5afSHlRiX/PB8t59GoaKNZlCqKIVL8htm552cT8XE1F+DIapc
sjBpg7+tFhWfVY9KBBtyiZpxN2NwNRV9lON02xy5pCNZmOuwjopbfyz+auDK
JYl/dUOf2lIxxjHt4Mp9XCLXdLQ1xoWKVUuP7vM/yiXcpSmneG5U7LL30ko+
wSWxqZW6LvuoaL5pkXVwBJcI+0pE6ARQ0cklZvOmS1xCmhcbXAqhopd84LkN
CVwSZuLUMRZGRV/N7trJFC4xu3482i2Kiov33Fnins4l43PSl9SeF+hxUxwP
vcMlhX41XYv+R0V34anVNtlc4t86GJuQREWl+ZeWteRxyeCNZZ/33qHiMub8
rt9FXDJX3nXC/QEV3zqGLPEr5RLtyDPSOx9RUeiE9ZbEci5Z++sBy7mYir/F
LntEVHHJHu9Xyx3KqehdWBhjUC3Q925q48ZqKr7T8h9MqeGSNFuWh/ULKn5P
fJ1bV8clpeUbjmEzFTvDbCcLX3BJ++IjceZvqBhsmvDDo5FLxm4l3TJ9L/Dr
fn11K4dLaLSqIuOPVPzZu+XKPy6XLInubzTop6J4+1jkaBOX2E/IfNQdpmJl
P6c6s5lLDviZjGn+oCIzGUPntwj87XSVZExSMX6pMtdOwPc3RTFU/lDRzdfv
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

       "]]},
     Annotation[#, "Charting`Private`Tag$163682#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.4, 9.4}, {-0.21723355372267017`, 0.9999940102105066}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8966442758914623`*^9, 3.896644301370151*^9}, 
   3.896644403331836*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"a7b9aee5-4404-4891-9587-f5319ef068cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Plot sin(x y) in three dimensions, where x goes from -3 to 3 and y goes \
from -5 to 5", Typeset`newq$$ = 
   "Plot sin(x y) in three dimensions, where x goes from -3 to 3 and y goes \
from -5 to 5", Typeset`chosen$$ = "Plot3D[Sin[x*y], {x, -3, 3}, {y, -5, 5}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Plot sin(x y) in three dimensions, where x goes from -3 to \
3 and y goes from -5 to 5", 
                  Defer[
                   Plot3D[
                    
                    Sin[$CellContext`x $CellContext`y], {$CellContext`x, -3, 
                    3}, {$CellContext`y, -5, 5}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Plot sin(x y) in three dimensions, where x goes from -3 \
to 3 and y goes from -5 to 5", 
                    Defer[
                    Plot3D[
                    
                    Sin[$CellContext`x $CellContext`y], {$CellContext`x, -3, 
                    3}, {$CellContext`y, -5, 5}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[72]:=",ExpressionUUID->"dd0d3f70-d2b5-43f2-877d-8f466515c519"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3ie8lPxYq8cJ/1T9JFaPEz5X8md96aspFj9PlltfEPRT4/tgsq0j9DPj450R
1u9Ev0zrxTpCv8rRWx8R9MPUJ8P6Qn+3G4/1F0Ef0bpbnS5RDqH/Sf7N+f+G
k3eq7uKLsG9Z9NnEx/xP4Qu0XuD0yZxb/s8de1aGdSjoM0gfwK1fSPpp/qfo
J0jfrM9ZeE7NF3r45NI4rf9Z9B0lT/Yp9Nul/9YXLfpvtF7oA/LJpvGjD9D3
cfqQjD7A/1vxsT5q0f8ifUMfoP9duPVXi76L9Jb9C/0e2Rnzb0U/SfYKHPp8
2hfsU+gzyY6BQ19f9pB9Cv3fsrfg3rrbPoX+quJNcOifLVv0+ZceD/umkPMD
6sNBP+kLel7xI/oJ/Z0uzjV/DLyz7BLnAvj7sm/oFTh6iD6AF5C+se7gx5w9
T2afgueVPFlH8HHq/2H/gjeQnFlf5os/gH2G/j2da6wv9PiH2GfoO+rcZH3J
uxKvYZ+hL6G4gPWFf3/FfdgZT/6W/7H+MfljrC/fLZXoVxiew+U97HynTymH
i0/tHId+qxu/4dAPVbzA+kL/hvQB+wBO3wv7F3yo/Cv2Kfh0+WPsa/Cj2o+s
O7j5ddITxom/gT5Ajz+PPkAPzvpC305+LOsLPfEg6ws9fWKsL/SZlQdgfb11
sfWFfo3iI/Yp/U79FGexvuSxJ8qfZ5+Cs+6sCzj9G6yL8dG5gH3mu9oXtl7Q
R2UPWS/worKHrBf4ZO0j1gv+Pby+R+ivq1+R/Qg98R3rZfSKR1gv6In3WS/o
J6lPj/WC/k7lDVgvT85mb6F/X/kK9iN5+F2JcbThP7n8p/m34Gu17zh/6b9i
HVkv6HW+2HqRD39A+RzWC/pisp+sF3hjz06C51K8zHoxHuIF9pfNS/sCPtB3
0z5ifaFnXVhf6M9rHVlf6Mmzsb7Qg7O+Jk/ll1hf6Mn7sb7euth+hL6il1dE
zrOU17I4yOU/bd2xk9DfLHtrdWrR3yW7zfpCv1B+IOsIvkt+AusIni4/gX0H
vl7nC+sFfl35E6tfazx+PyH05D9ZF3DkaXGK+CB/1gV68rcWp4genHXx5Gzr
Ar1f16C/697EfLLVfcC9ukZAftKrRwSqR/j1i0D1C78eEage4dcXAtUX/HpE
kNnb19CrjuDXHQLVHfz6QqD6QtSrLwSqL0S8+kKg+oL5yfC507Pb0JP/8eoR
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
w75xne85dD/a3leRntyZoVq7lO8227zgU9rlQyLoLeNv9/m8lZ3rn47gj2F/
stduVTxSJi3aRv4DeFB42NW8G5fJfobvkLdSf8LeOL7V8NbN82W4t+tp6fOc
VPi4v9clb3T0ZveufZT0Wuv+p6NbZPfAX+jW650/Jk6PtI6P56zhr41OP/lu
x9P4P1aviamv4HadF+Bz/yharNiL+8z/pK56atnCT5My/yo7eM3e697V8K5y
2edus/GD++MHH9z3xMI1H4XjB+908OmzcwbssO+izz0q31L9yYmnI8gZ/IMP
C23rM3WBfRfc/b3Kvguesv3ar1XLnrTvGv7F/rT+449HkRt4+X/yvXnbzTNs
3dnXgzvtmvhilYNRvgvu/l5m3wXf0WxIztsPHLHvgh95KuvcRaXS7bvgY/dX
XVntyiGTA+fXnox5fxqQfMD0DfyF0a8MuK3Vb1HWBfzE7btXNH9+VwR9A690
btLJ94rsM7mBu79jNn7wBxy9jRO8cuZOE27+v/NI4ySP8VzdikPu7pcWQf/B
i+d7rl+5R8Lvgru/f7Pvgg8/vuSWcUfXmdzAe419bNertcLxGP9Lo+ZO/O+I
jYd77u323rLgRuREMnID7xMtsOLG+0eSkRt4yui8G29EDyQzTnD376jHGCd4
zfj//69Uxgnu4onVqYwTvGf8u1tSGSd9sy86uZle2XvXTj6pfBd8oJNPhO+C
55Sc+S74zU4+ps/4P7OcXtn+As/xQ1yvTH/Ay0sfGCe49MfGae9/St8YJ3iv
dWXLDf37pI0Hv2vr+WcrpnU9aHoCrv1l/MGbP3Rg0Krvjxh/8KNuf5kcwH93
+8u+S578VWdnbH+BX/kgbmdsf9m703syZM8x+piNE1z2x8YJPszZHxsn+Ehn
f2yc4NPOxu2P6TP9EhkKV/xw5ehJNk7wDV//nLvNw6dtnODjnX229TI+zj7b
OMEHOfts4wTv5+yzjRO8/pMXP7lyR9hXSb59yO3jO/42/ZTpFfi6W+Lno8kN
3B8P+HV33tl4rC+0a/y8MzsA/oY772y+5EPc37uNP/jrOn8Zf/pXebbceP9/
8X7/lG9yJR337Dzn8g6zV2dEX7XQt/fVeDa0h+fbF62dVCt3bGSLfXfOOrzY
+HybcD5uNT4XRX+h0/5fKqelGR/3rm722MTRDe4q2Oq0Z7ezYc+MTy7R94s9
csvO2qeMT0nl8Xp07Vu8edetNp7FCefXWuNzl+h/39r5vse/PGpy3i2/MWOW
9Gyd391p/F+P+6WXotvLLLi6bvUR08ODcX/sv+iS7C80+fbZ6fbd2QnnTnhe
dxGf5jVbtZy6NPRDyir+Xrzm7h03NT1hcliQcI4sMj4VRV9md/eZDYpvCM99
3Y94Mnbiw9YvhXm2Qrn+j8/saNmR/1dfXm384/98cFT2f7zxbyv6H0bVzXZX
y+9NPmeU5yx//uzpkqfWG/8ycX07GAmkJ7YfE+z8CNPPEqKfNLv+wq3BmtBu
KE8zp/3YTxpO3m56e9zlBSODdk2a/PDKLTb+HxLs81jjf0j0M5O6tbmnyl7j
X0b9jeOzbhpYqfJx499S+dUbRT/qlWVDaPfmJdjnVOPfQvRLpzaavDRPeO48
6+KRYPyr0178vPMJ7xzBfi4yPs+I/nCN7JkGlztp9ucz+ecPf9Pp6TbjVhj/
R+Lv/twc7LhY98ebKm0wPXzX5YuCx3M2+bZm23k2/qEJ9jA8Xx4Wn28afpy/
9QNpxn/o1dyvJS3PF0wY2D910vV0s2+tlO+q+lzlmzosWm7zSk2wb5uN/xDx
WVO58vmsZ9JsPBUS7NVOo8+qePOt3h8/eKFb6A9v1f1BvdscnlOqU2Q+2LPA
g9v3RXYo/9BbeYNNqseB9xS+lPtoTs7RieKTdt/rjYa8fywK/qzi0w8vRFdm
KHba9H+86PPdH6fnXQvFfQViG1T3B39X+BjhdRR/ThKf0wfi4zec754t1aLn
9bFH7Bx8RXnUKXpPADlUiOcF8sUmFBmbZ2CtNJtvHuVtiuo9f/AcwusLZ74V
xadfja+rTDxw2vBJ6uN64alnat5oFMqB7/Z09CaHvOIfqA4Lrrpz7H3hzJfv
TnXjNzlM1HdTWkwb2mb20ShxXLrOkS3L5l/+Lf9vpic7lEdt4vLeJp8+yqNO
2NZjW41Lf5gcktSX9Zt+JwK8hHB+PwK7sV38p6ueyLxK8/vXut8Brng8NlM4
4zzDvSi9B2L+jPK3q1/vnV5gWjieKsobdFN8Df6I8JeEs17fiM/o3ZVavfrd
StPzrTrX1u3rXeK9kzvMHpIXbK/3olnfL8Tn5PC4/bH5Pq7vdlU9HbyCcO7B
sY4jxGe5m5fhWzhnm+fLVCB/msknl/KELd17lTbf0erXClSXB/9aeF/hzLe5
5Hpi6tAX79x6wvDtOq8LnL/68sEn0kwOOfTdbXp3CDlQN7vu+Jgcxui7vM8G
niJ8RGL/VXCb8jElnmp8bnuP7TbfSqoHTdK7NOiDs2P/RPvsrdz7yeCEzXe5
8uXF9Lse4FHh/N4H8/1IfMotLv7t4v5phrv9+D97Wnr5V4f6nLI46D/V33br
3MRuT0jwZ8YmQ3+b/JAk54dEsOdp4hN1fEye72o8d7vxmNxWafz8HhN4auJ8
zT58LD7tnXwMz6J55Tv8+/YsudNsX8Ti67Ir2jfHQ8NLbdljcvhT/sy5c3F/
xuL6LaovXZcfgp6kCt/kcJvXZ+L/1Mftauwcs8e++6Xqv8scf8Odn7wr0kj0
fHeh/J9D4s9356jfr170z1Y9iiwwP2GZ+Gd1/pjp1TD1AXbQvkavtO6RPJIP
+vO76hvcE/H0KlJcOOM/V87xqeH0x3DpbeQ+rS96ksPpSaSw/FX0akqCf7go
Ffqz8t/WS3/MbxefYtI35JBL80Kf0Z/fEsdvOPUc9gv6c0bzKu7kY3gfzYv9
iJy1ryOVtK+R22DVC+bIDnj2KtJbOHJb6+xSpJizS4Zr3SIXZH/Qhzv1Xd7H
Qw67xKeQ7BvzHajvrpCdBB8hfIBw5tVL9YhHzpfZ/diJk2aXdI4E59U/wLzK
K8/8lOy/d04FTYUzrw3iU0dxlu0X+b19dO4w394az0vuvUGb7zbx2atzjXk9
qO/ep/MRvKLwxsJZ3/Xic71Z/DwynPFwLuOHFFZfxGPdXLyJ3Nqo/jLv226N
Ro7fbuteTPl5fr8MvKTwWcKZbzvx2a533hj/raKfLf8E/E76FYUz/lTXZx4s
zLjg1xwjthmu+nKwS34R/v8Z518FZZY7/4p1n+z8saBA9+BGsPqwzSsL97Dk
14HnFF5NOOs7XnzqOH/S8EecHxi8L38SOTyvvoXNOh9Z9yni87z8UuSQWd+d
JP8WXHXM4A3hyGGc+PR3fqbtd8bzi/xq5HPa5UOCH4v83GZKicOhHVB9P8PW
OZ2v1ttmclOdK1gpf96LRwLFI1EvfgkUv/jxSNDfxSN+/BIofjH51BH9AMUv
XjwSKB7x45dgnXDkUEt8zrnxR7z4JVD8YvKhbrv4yPelp3fZYvuC+svf+n20
RDtTIPZo8aHzxl89aucU9GWmNIp8+cUEmy/0PefMSmo87nh4vit/1VT5MfRn
i+JHfq8QHP41ZZfA4d807WCHYsvD88V+x7lq1mqP7Qv9W77brMJHEyf/Eua1
qJufOv9i45VPH7N5gf8zoNP271NCvw68vBevUT86OuHP3V2/PG5+AvQ/Z2ld
8PL4JSafD4l3fu66YOPOfSafBbpv8lX+jrv+vXmr8YH/08p/Igf1t8TOHGv5
0r6iY/x9FGvqxXfwuejGafrA/Zcro++p3vL5E7YvwPPUe+Sj515fY+MEP3HX
9qTDk3eaHKhbZXO/X2bjh75G45SXni5+yPzVLxPykMuSoYfPQOWl8Svsns5n
E8u/8HMYB/WWPN938jR9gH6dG6fVGcGz/xifr+kD9d+lH9TqXSX7epMD/37v
rQv0bZS/RT7U0UYoz898f03Ily5KTvQnM8YOq17AfOH/6Y+rs9ccdtz2C3h7
912LX+w+kd6TQf9baPy73PgN36Y4q162eF7U9IF7N3m69p6ZZVvoT9o75CN/
H3fpm1O2L6jH/ezuNZt/Dv2shPd+zxr9TT3ODvnxQLrFNa+qn3O38nXILZqQ
H061uKaN8rQtXJ7W5MZ3n+h38+/XRh00uYHXTvv5q3Nfppn+gF9y87J9BP62
/ED0x5OPyY17QzmOTZ6275tNdu4sUjzCOy3o0wjFIwdqDT/z6utHTZ4b9L73
OvW9g08UPks4cg4Un85XvhQ8RXnmR12e2eRvvwuvehxyZvzu73kmZ+hHe/W+
CvruUPVPIre9Gudm3XsCHyV8inD01nt/3s79pZLPdScfw2crHpyaNPOxT4bt
sXWBTy4nf9unvJe+fn+9AsVPrzN9A3+nefLUWrcsMLm5+fM++Wqrw0Lv/h5j
8oG+qavDWn4e+s6Ov+kh+Go3nrB+JHzL6BevDMq83eQGvlByQ69GKd7MoHfp
0atUxZt/ST7oTz+9szdSfDy9iswWjp7wLt90jQd66rl51Odm55Tof9e84GP0
qo8jN+ibST7w6au4+F7VR8Arqi7wh9Nzi0/ho3Wx+JTvfqE6vvWBiL6e1t36
QITPkJ4g/7eFp2jfgf8h/E8P57u5nHzM3g7Rurzp1sXw0cozHJIdADc+99d+
97s7QjvD/b720nPmC168auTWjifCeiu49rX1CYyQnB+RfQCHfpPrG7F5UTef
IzvP/oVe9y9s/GsU51bO6upu4A3073Cdp+xf+HSR/YQ/3139veszQQ70++WS
HUb/lT+MrJteJ+nhxb+Y3YP+iuw8egWud+lNns3c+RJprDog8pycUM9aZfrW
RvWm7e78Mn1rLz4NvXOK71Zy55T5LeAZv3PnLPIHH688APIBL6n7dMiZfoMs
z/WInXjjmMnZ+iR1voNDn6r+IuRDf1oH+RvIIZZQd1uXCr31G6ivyepZ4jPA
+TOmb+BvyI9ivvC56H7P1M4L6Fvp/h3zhb5MyTHZjtQ4bvOCvpH8OvhAv8H1
V9j+ok+vkPxD9Ocvxemd5UeBv6c4fYT8T+wk/Qn428htUkKdcZPJTfWj4Mcj
zp9HboyndOzM9aNdwzzS3xpPf+0j5AD9EvntiXnvXEGWX12cghyg/13v98IH
+g/UX4c8oS/q5GNyoP+hmfr9GD/3GVvHsubpsi7MG4BXzOriI68OFQzw8gDg
6xSXMX7whXqvG3rG09LFfTZ+6Nco7oMP9B+6/hA77+jTmHn7I5cKZwnzfuBZ
FW8yrxK846H3o7y4NVDcauc++HDFy8gBfI6XB+C7Y914TA7Ql1GcjhygHzbN
xenIAforygOgh8TXQzVO7JvF9cntspcfc8rWF/wNh4f+A7+Lrf4c+BCfdpE+
wAe8lcONnnhtlYv7zH8j3kmRPWG+xFO3Obtn9Pjtz8jesr74t+rbNz8Qf/Kg
zkHGCX6bzlnWBT7F5BcxHvBb3DlucuZ876p+Qug576qUSOyfxG4/qbgGHPvW
79UfN5e6J8y3sE+XKf6FHny54ujEeCFX0Fx9sOgt9C8rfocP+0jr6OtPIP2J
ePoTSH+inv4E0h+jJ2+T62PXf2V+o/RqpPrE0H/W9+hn9698r9Qxs+fm//eI
DVuw9HjYDyb8RPFcF77LctT8B/AZ9+R7q+COUE/AF8nfM7snfLvzk0P7I3y6
4xPaGeHH3XftnAJf68YZ9j/jlwpn/OArxMf6ooV/pe9ankr4RPn52B/wyRq/
5YuET9B8mRd4iuTDvLzxmJ2xOMKTP/q8RuuF/nj9k6bn6Oe36t+2OE52O7fT
E5Pbc+rTGB+b1rrvoLBvWfY5Vt3d2416+eFYReHIU3na2HLlV8GVZ46dHPLu
hWW508w+0B+S1KTC9bPvhPlG5cNjczfn+LBag4P23Qa617PB3fsz+dQVflI4
350uPqnKh4OfVd9FlfsPj67y+n4bD30aOxccqNhjazge+Q+x4xo/331V9zsq
uvsdhrcVXko4310iPrerfmF1TPUBThh38vOf7wj7ZPrq/kVJV7fy8syZYo8K
h88u9SHkdn0Iht+u/sCeD+y8dNdnYV/9++Lzon73Cryn8ObCkcNu5cFqPjCh
z6qUUD75VKde1WV7cCU9lMNY5VUaurqt4Yqnoq8IZ5zFxSez6pWJ+dXj0bHd
d37XfUq6+Yc/J+QZPrb+q7nKewzY9+gjf+6cZ/PKkcvddx7s6s6GKz8QfUY4
8xqoePP5jcWmXRt2yuQ/XXXteXrnDVz1dPudbsbfRXyWKz9j/U7qG8x4bkip
ZedOWbwwIyFOn2XzGiU+5f67aWmNuYvMv20v/E71A4BXFv+3xs8aUOWTQ4a/
qfrvneqjAKdOfeNSh0yPHg/7fDLpHndD/e4quPpMIo2EI8/r5Ry+xfWfGK5+
GH633b5bXfbypmmuvwWcOPGrS8ei/ecfNT4ndM+ok/QHXP1IwWvC4fOO4o4u
qiOYfNQ3GP0pw/xJlcI4lHrZoBWR8v+0C8f5kPAe6iuz/iL1B56Kthw2OZZu
fKgrzb16vu6SUaGc1XcXqO/O+ORQ32Cz5NFF7tt82PRqu+o+c9Q3mFiPLhiT
v23nrPoPY03FB5z+5zevDKt578DT5keBH3H2zfRf84qNd/2T4T139bnVnZR/
9p/ZTpg+fyn6C2+VKTh4WJjnHyb8pOQDTh/1+YcLvHGxS3ivBz6SZyQxz5wr
dlpxIvLZo362huqXQz5fJdZxTG5TVV/IqvqLF/fFLos/53JW2ecxrq/b5FBX
9/UWuv5Y86O+Vp/Y3vJb+38zcLfZsfqiP7Twx9yfnDvh5RWzxTJ69aAL6mdr
In0G9/rcDMdut1BfATh2vqFw9gv826ivBv8EPhXULwEOnyThzLct9QjXb2zy
aax5d5K+sV4F1J/WWn1x6MMr4jNM+x28s+oXOQdNL9W1TDivwuKj39cznP63
XcIZP/QdZa/Aoa8rnHVvre/+5vrkDT+qc7CBOwdtfS+rT+yzt9JTDjxywKtH
XIxOVj4w0U8+Ei2peIr5posPdhj9XCT6JC9uqqzzcZw7H6OJ+a7/xZne+tJX
X18439V5FO2m8wJ5cj4G6tcyOes8HSkcP7O2+FxTPzz4ENUpOL8478Yl3AsY
YXWE7Qnn+yyrIwy72fXzv/ldvJ/f+Kfp3N/jzv1IYj7tYHSZG4/Z50UaTx03
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
Z0meoG8w/kzZf+Af8JNkjxoUy9X0xg6hf3pJXE87XSE5Sb4b+AHJyaoPRXI1
zav+dtVYrqYrJZ8bxPW30w/XltXftngMy0t9O/TDdXnr+UT9Uqs5u8o1umfx
e1r+qerMU6+Dc52q7y1ymPGL1C+Vc+r6khg9XXyynUfmP0b19rnXwOerPxT3
oNUHVn+o9c5/d6v8Mj3cvaM8uCT2+5Qkk2SXiP0+JYnsJOb3d/kavFMMp983
9kn48y81Qv3t2F/2i34oPgS3+g/q37rc+ZvO1Xe1cv6pw+WvGRO9CwrTTMtQ
PzyOoytMT1X/1umK+4KvLs0vbfj0xi0mh83eeEzoRwBfWV04zQP/WJ009VOA
T8CP1nctk/0Qef5h/eM6Zx6werBml5gveq6P9N7SZJ7Gz3B6Pv1qiZ+0/A7x
Sfx+KUynim/rujqKF6mO4lyXxyH/TuLqBKYn6XzdE+c/pmNUx744zn9MW6kf
seubkF+7IPQRcH0T8uqb4PsX5NW/wHCLawp9HHz8W/52yUPXj4C+QuY/ZZ69
N4W4hTWu7v142X/4XfZ3V+hzkUNvBx8guY1dEfyp0A80WaK4OPPXqy7K8ZJ7
lj8e3mVmN7b63uorSl4w+Cy9Z5VvaPjzuh/R/y2fXX0h67u8yEOVF8m7DL4d
rnv8GpeHvlf5tsTXgf9V768WTq8bJr2O+x38Rd2D0I3fHR/6pZo+xviZusfB
Gb9c+snTbvxCjeceNFx9OWe5PPfN7h3N/Bc0Htxw64hvc9Wc/1TxRXZPgY8R
/xQ7e6D6vGTYX877ZH1vXLeqIL1J/c7i911pcpHWQzw8eAv1QY7r25QmU9Qf
sE7k3yxIl4kO050+9oH0MfywpkfpHmG/kD9Piz+fdnrRgkgvKs/vHqn8bujA
PP11XmJ9tSBtKr662NHnY9EnrtNVQL9Rixdl/pvE/zH9f3lfq55nrMcWpmfL
HuL8aGk/9eNz/cvoe5JzfV7y6vOSc31b8urbkvuIvqI6j/uC/mnyHD58XfuI
Hgv+tvRw7Ku8F75W/F6xq7OUFX/GdU4K0y2qX0oeIuu8WH0hz9L7Ebz79K5l
fSGbxXln+U9C3pnvI5PfHPrI5Jxemj9b9Kwf553le6lf5+w47yz/mPp17pB+
YnVBtY+dFF8NfmiDb6ttr/aV+XM5F/v+evGQ8b1GmF4N/ywO8eo2D3iNMI/h
8NWGJZdd1vjgN6Z/go9W39jiOM8uz/1IfQnunQ66l7GDIU/o40ncIHh11V2n
jwm/O119OfG/sL/02aRONetpPK1sH5Pxuk+tX4z6/U10eBPhvNOh84Ohf2Vu
b8w/6RHq19M05p/04ffC77KPFgd1wYpXC0t35JZFfFuazA16US74eb82fMOl
FaudunOnjYcOm5r0uaXumi255orDt3z/+mEfd7n136D1T1DcDvNcE/ql2jsO
/InQt9He19Cz3YJHzzr2yS8dX5Ukq+UX+F56IPTsLj/Cfoc/LBw9mXVeKPnW
yt2zF8T9MQ3Hzj/a2auPlr063E9zMowPcmhVFv0BfFTNXTd2OD9ncdQWHxL6
bFq8vcWfhL6flu8D/tJp4dzxu1bXPfxu5j7FJ0Dn2/780xsP3T7H9AHwz2v9
peXmNZsS8u5Z50u6d9o7fJxw/EHg1RT3Nc59b2t9b2XnL2gsf0GP6J1ldUiS
Mb8hT15QXj/zf9/klM3JY19ln5FdF/ynUwdOvGDX4hzjy+P9bup102lfZxgP
vj+MT8Chz+Ih9ao9WXW57QvjG4f71PQ68B+0/gZu/Okav+n2yA6cbxDswMkO
Z9/7i+x7f3ZxsGsVB9vZ1YNaondQI9mTuQf/E+oEJvhboU9e+T5zXDzeldJb
PtQ6rd7pi6FexA4XZ95BdtRaWif4S8tDf41ukfwvSfaoTwfrhB9WhXqYlv8C
fqPqGMOf0PN/0kvnOLvQ5dKH1T/F6PCx6vk3k/wEr67+AuTNmf1T/YmoswT+
o/pQ4J81vCD0ORrn8kw/U55pnd/IM63o/PXF8tdXcXoy8W8v/IYff5Lz1y+U
nDxGch59Zpb6ZGEvAl8UcMujB182oeO4jw7fYu8R9PB665Z0aPLjzAx2RavL
ofGa3/APNX9r5wc/IcyTJR7M/JLrm3XrOXyh3Xfgf1QfH/aLc7pU9h/2Bfww
1SUbF8nbX971w27r+OLrxRZ/CP6D/GsVnb+pvexgxc6/Nk/+NfYL/HLlnbFf
4HWUTzTJ1W34u+o2FMV9/dK182f8OLnWZPtd9neI9BnkD/S8M9QxzhCfDx2o
w99EfTeszqHqG/xdOOdipPpWVHbxQlcpXminyy97X/kRl7o6h9jH6PcBP5Av
zO9aHKb6GY1Qnw67L9R3ifk577UVd0SdVb7rXtV5aK//D/6F6lF0cXXe3tV7
iv53nOs7NQ/8DE6dMdXTM7/DV6pjRh8EzpH6WWsfV9r5WqE6NqzH4lJCHRjV
xy6vq9PzjtEb+93+ZqZ/9e0nThna3+rbnDVl6OKuzYcr7re8/sxNYXwWuoEP
DHV7soO1fui8XfWXurh3a1bv1raujm6dcO9bn0r4bZ/oLH42f/FZqjfYNt6X
lHqMrMfwLqGvJXzi8s1tHvCCkF+fYx7wH9SvkDr/8KHG2z6C71XdgHVxv8uU
OgatXR7BWuURHCs+4RxlFSfAeOj/yomv3zvzqjmZyi5O6e4Qb5PZ6eKOVvzr
js4NNs7O0N/H4mqeu3XVW/NnZEtcPM+qMD47y8X/tAjxTln2EXxcWE/22ij+
oSSZqnfu737jvVDZxTP3Vzwevwu+RfXB6mgezuNE+Sm+FZ3hk0O1L7+Lx6d9
wvhkpOSD1Zm5OPivxQ92L/QKdSz1rrfx+a3tg1+G/WW/Kol/hms8+E3qN8T5
cvGQFv8GrjgQ6Y1f23omyD7JPNDnKMVVct5Nr3Y444Xb+eK7eoTzkux0foTZ
8iO0dXp7d+nt20UH5NiDQV7l2nX89d8jWcan02td2q7jHdlB+l3oc3E419a/
nvWcpvjtlS4v7F7FhzMePRZ7UXfJT/BWstcxj9XZE51biy/Bt5674NhPB1qe
UbmfSHk3/K6r82+/a3U1t3zS5fnem2Uf+8rwL1ceOqqo/rrcCt3LVuf/3Lrn
X15jnX0veD/VT+Z3fd4Tvwt+zIaZre9vutPWb3mdyo/me8Ff/NPRVYvO2mLz
c06fUd7BysguV5q8Ibv01U6/PSD9lr/RN57V/CucHlIkPYR5wGtp/cxjeb46
19AT/L+iG/ODbxKdmR+cfQE3OVYw7Iifjnk3287JgSslByyfB72uc+fHxr3+
BefX9K7Kt1Zo1vzKpTYefJPutavj/Me0n/QE1g+/jQh0yynPyPSolwL/2/eC
/4c8OM1vccvaR/iEdX2vuqbQExz/l+zwpp8cN73x6r7XfptskL2U/XpM9A90
nJaFr74p6//+VvYzyQfw+zT+2sg+VprU0fx8L/LnaZ13vhf8BvEz3wv+uviT
77J6+LJHwf9m91a9Yr7X6rOpvoTb3/yH2/o/MXHhKjvXyI2x0uehg90LZX8v
yXzm7osDinNgPPtVJjY7zrfx4I+N+rhqi4Ff2/rZl8flh2Ie8LLfTWdn2C/w
OwL/G53Zx2otvhr4TcuZ9l3gU9Vnp7vTS++UXsrvMj78PTnDPJyvbdPvrXn9
hWMyjGeeimV/j7Z1mr5x8YglZ2x8OQP9fX4948FXSR+GbmZ/UD1Mxht/Sj6w
7+Afax+llxo+/4JAH9YP3+7/lc2T2cbn4L1E57qu/iHnPT4vBWnZPD8vdOel
IH007LvR3+yf2vf4dwvT21RvAT5BzuyWnsz3gr8hfoY+8GcVyVvmZ383iG7M
b/so/Yd5LL5X8pZ5OEdNVM+knqv3dZb05Lqu/s8/hDOec1dx9tNDz3+o2Pgb
/Ltwj9v6weEfxls/OMkB9oXfXV22Ly9nkTPgN4n/wfneCuoL3N29K3tr3zkX
nOsekmPwOetqKb2Fe9nsPxrP/OAfSW5Df+i5WvwPHay+ls4L38u5+4Peg4wH
P9iu7DxmkcPgY8K5zvJdlp+o+yjWNwpS6uDF56sgvVv3GvoGfN5c42M9pDDt
IH2P+cG/0L7XdXUUn1UdxXquvv23OhfQH3yP5D/093X82Cf28XzqKTk7wF3a
d+Zx/S9sneCn6lzwXfAb+g/n19fLYt/53rM1jzt3KeeI8RaHo3mY39fhqRf3
wcwPED3hB+t/Lf0Nevo6MMzD+v/p5ADydmOQt0Yf6zuj/YrlTGGq+U2em11O
8dixHC5MP54V5Ab8z3cVlN2bxRnHP/l+8ocy3uTPr3/2X049BKPDaOld7Dvn
pZXqJHB+wRcH/TPDvoO/f/ftxz6TnZnlu8DTTrcduuPb2e7clSTvqG9a/C4o
SJ/UehgPP5wQ7n37Luhz8Fex98DyLN8Fn7eN6xLYvfAfd97Bh0qP9faB92Qf
YJ3mF9Y7Itb3SpLJTg+xeixOb+S7hqpPq3tXpv+TPun0c+x7idPP832VL8P6
2fct4ivWyfgZ4lvmYfxRWif0tzglvY+YHzpnJN98P/S34zy+1OEmV+GTKTvG
5Do8/GEW+oBPC7jpV+DtAl9lrA6U8HmBD43Pwb+THYnx7FeR9j3Wz0sS4vHq
ubwkyUn3zvrlHSo9J+afgvR8vd+hP/JB76Yk1usK0naiZz1nb9ypd1n8/i1M
U80f3++FaaJ72cmNQO+0OOvOV17nK+fkcz6DPVDfafFRsjOwj+zvNvEV9Eeu
yj5gcs/80Vp/XVenAjqzHusTLf3N8XP6vvRe5je5NyXEA7N++Lmz4njZL+bn
vRzve2FaSe9l1sn8NYSzHvhhjviH/WL+ZaKb03vzX2t/mcflm5v8sX678new
7+D3iQ/ruvi9wxW/x3qsTojeoeDsy9WKB+B3wRkf31+lSSp+i/Wc0qSv1hnb
eQrSlpo/plthulpyI34HFaSPiH/gW8YTR+feC/mR4b2QxOfd9DrTM61Oo+Kp
oJv1sQr2vZyz76UFsvvF6ylNpN/aOWKegXofsV8WtyD6sB7W21v2Sc4v48vU
/J8X2z1rcaeyB/4/OhfQuw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXe4FMXz9ffenZ0Ns3kNoCIi5oCiomJEsohgwgRKEDCgopgFFVGMiAEV
zAlRTJjBDKggJhTFnLOiYsCc3vO5p7/P7/1jn67t6enp6ZnprnCqqt2w0Xsd
3ZxKpd6qplJplRcmqdSoplTqrHwqNa6SSh1RSKVuaaRSQ+qp1MrZVOr7Wip1
UiaV6qDGx6jdxvq/nf5/r/PXLKVSW6h+hs75N5dK6bTUF+rvdPVzqdo+W06l
BqiPIXEqNVrnvKa2m+l3nI4NUt080SdrMC+p3Fi/I1X/gPqforq91cdy1b0t
+jrVb5f1dX/RNYZqbK31/ye1Hat2F+j4PF1r67TpX9VmiI4P1u9M/e+sdjWd
+6LG3FrjbKXftvp/hs69Qsef07nr6F4uUd2qxVTqII1tS9HDdGyqjg3W3Lyu
m+uq+9xL46mpbK32/XV8hI5dpP6n6do/ct9qf5uu/6muNU5tbtcYBqjsoz47
qs/Ddf5eqttN/48QvbvKUSoHqq/jNHf3iu6p/ifrHkdonBep3F6/XXVOSWVb
XeNnXfM1jecrnbsnfejch3W8j3576P8RuvbNGs/Pavub+tpOdWmVUzS2gTr3
Cp27gY5dr3H+obFdpn4P17UuUdlRfXTQb7aOpXTOTup7gM4ZoXYD1M9KqttW
93u16p9Xf1foni7X7xz9n6+5K6lso/b36lcW3VZlIUql9tV45uv/sbrGGrrW
4Spf4pno96zqd1FdF/0O1rWLar+32j+j+vU1zr/Vx4Ea8wW63p6ir2X8mqv2
anMj49HvReaAdmrTSuU0tWmon2Fq86aOrSp6BO+T6Pd1zff0e1f03xrHk5rH
RbqnuWrzhupW5p3Q/XbXFHyv/s5Qmz81roEqB+r/aur/cfW/ne73ebW9X/+n
qr8r9TtX/0eqXSfRy/QcTtH4T1bdkzqvncZ8vuZwE413I/1Gqn68zt1I154o
eq7aPKsxnqU2I/T/pIq/iUdVP13XulD1HXTeGPW9ptodoWPXqf4+1fdS/Wjd
x5H6nav/ZdWvrTY3qP50Xfd+1fUWPUrHHxB9pn4b6LpF9bVQ41yg3zNqd7Pu
61zVradzx6v/w9R+mH7j1X5l9Xm+jq3EWDRXx+r4Z5qjkzXOker7Jp37is5r
q9/ROrae+lus84br2GDVva66VXgn9H+QyuN170eqv1H6DdX/czTH3fR7UnQf
vQs/iN6J71T3P0TX+UDP5DWd+5OOv6JzV9KxLN+3jl2s/9+r/EfnXafxXqL6
5fo/Xm0uE/2D6GtF36RxT9L/bdT3DWp3ucb3pvpcobol6mO8rjVUbT/UtV7X
/3VVv63KNXTek2r7pf6vKfop0V+Lfk3H1qE/lf3Uz1uinxDdX/Q7PHfRu2ke
HuU7Vd3TOvcJ0e/p2EDNfz+NKaVyLdXPVf0y1a+t+S3zXHTe2hrHVNVdqX4u
1O800eernK9jX+rU31gj1HYD3hsd20z1l6mfjrpWVf3kdGyu6gpq11n3vJJ+
2+q3qn4rdH6TrttL5z6kc2ep7fb6XSP6TpVbqf4q0VPU5hL1eZLodVR3segv
dO5VarOR/p+n+um63vkqJ2tsnXW9K9RmK9XluK7a/az226gs6feN6NNVnqD2
n4vuqTYX6//W+k3U+Z+q7kfVnar/k3TtMWp3ie5ltPpspz6P1zVj0eur/mP9
L4j+VOedozZDRK+uui56tofq/OGMQ/e6hX7Pqt+ixnaw6lqrzar67a0+jtC5
MzKe8yv1/5u0x8+8b6vvYqj+L9Y7vk3i92VLnbevntlbaj9A5QCN8S61OVDH
Oum6s1Tur99aaneQ+jhR/bfWuceqrr3q9lObp9T+RP1/X/X7q83RatND9Q+q
fqTqZ6rcT+WeOranxt5fv/3YH3WPd6u+m/o5THN0qH576vc+c636j9XP7Ym/
tcdFr9D7vJfue4neo33V5h/Vv6H6AzTu3TT+f3R/i1TuoevN43tX+7V0/Gx9
y/10rXnqcwBj1u8/HX9Tx5ap/dq65z/0fw/RkdqsJ7pJc3S0rvWtrrWT+h2u
Pl9V3SM6p6bj7VQOU/+7qM0CtTlJ9Caq665rnSK6g+j9Ra/Q+D9W+wX6vyV7
n67xl/rbR2PuJfpP0UeofW/184L62Uv1B+laL+laW6j9ANGLRM/T+B9WP7ey
Xuu8+zTmB/T/Gd3LqyofU31f0Q3ea/ifjPkTdZE6LmOeRJdKtVI/G4r+i7Ul
8jtfYY0IfMu3ol9Nm0fSUFr4mU1C/dTE9C26ziM6qa3q5mvMg/X/WtFHFb13
0Ocy/f848EisZTN1bEvRTRpbKu81rKP6m6zxbp42v3VN4M2+E/2U+t+Q70yD
uCX297ua/rcvmW5WH01qv7roD1T/hNq3V7mabnL9xH2yfh4duw37Uzc926zo
u9TuELXLwO/pvAvVppg2D/Se5gRm8ioVN+pYE/uOyvdVH3Hvqr9M97uj2v7H
OlZz/fSK3+WS6D10bFnkPh9hrS54D9xQ5aJm93md6kdqDLHo29kbRRdEzxL9
hc7Ni75PbbrWTd+t+rdij3m66r9Rm0T0g6I/j33u/aKn1Fx/n9rv2Oz+b1X9
nRXf+x0q7wnjfEz1j+l/O5Wtdf0Lwtr7lf6vo//vqd05Ov6s5nEz1Z2q8nzm
QvXnqdyuZp72TNF3aDzvslbzzET/x1oFj6R7/l11V2uuLo+95qpIXVdxm+56
93/JeQ0+N28+9k2+QXjP2GPYQsfuE/2R6C7w+WrzgegLVM6KTO+g+mfUz/rs
4SrnsJ6qvqv+H1A3PVntNxf9qehLRd/W5HvZSm1e0b38y1qk687RsdVVt6Hq
LonMm7G1PaT6lXjX1OaCyLwB8sfEyDyMukudp4brp72fZUW3Ef2x6HX1Tq6V
9l7wYuAr2BtGN7ke+eWq2POvTyV1QuCLPhG9NO15Y45O0LXWEH0YPEfs/g8X
fUaT+Ryu+7DG2VrlqrrXDXXddVX/q66byfjcj3gekdsX4Dci81e8+j/nvI8V
NYgHKl4DVtK7sETH24Uxv6xrVfXbR/SeGsMqqj9Y/w9RByunvU98WPC+9oGe
6UD2b3gM0Wdp7s6EHVffZ4uewLVED9Q4F6jNILVtUp97a6yrwc+oz1Yq/1Kf
E9X+fLVv8O7o+F76tdaxg3XuQpUH6dwD9Suzp+taWbX7iPdOi8shup91VP+j
/ndSn+dpnGvrfyu1uUR9/g5von1pH9YUeFa1X0/lCsbMvqj6osoJ+k1mTdN5
52g8PeGJ4DNFX8ycqz7W+Nvy3jIP+q2u3zD4AJ37t/p9Ru3ba053Uj9Pq/1C
nXu5+nlR9X1EZ0UvFD01b14jUrmW2m+H3KH2L+l+n1Kf96h+kp7xIXpmF6rs
pjEubvL+9KiO1VW2V7md5uR9ZBrRq6vtaoGPOUb3fCX7PDyGxnav5uVSXWe+
6G661rOsIaJ3UNvlqv9O9G8a/9Ma274a50rq71XR6+tYb7VfwJqtcZymedxA
5RK16aTxPw3/KXob0W2QP2K/J6/o/xa65kTRa8FH5s0Hbc/+oPo686M2B4qu
id6nyfxONW1e53u+JR1/VOWwZrcfoPrBoc08Hfs19rnzRe9VMJ/7gvoflViu
HCp6ad688HMqD9K5FdXPVft9I9N7NVkuaSV6ODyW6lcVPVj0b5Hf/1fV/sqC
eaXJut8fNKZ3Vfekyr9it1+i/39H7uctvveCZeUTNRYWmNVU/z7rbNr8z4Y6
1lNz+WuTefdeJfPV+8CPZ8yHw6PvqvO/Ufmixv9O3vzLdrxPaveV6EWi9xS9
luhOot/VuY81m6ffo2D+fa7qb2o2r3KIxvC12nyFbkT/dytaRthbbXuzhqhu
OPu76MNYl/R/A93X/GbzVfvzDYt+GzlGbdbRsb/5FkQfqvafsVZF5sfg4Y5N
Ww5qr9+YtOUX5JDF6me5ypd4RqJ/EP2y6Ad07oc6d2eN4V7V3wvPrvq7NM/3
iP6X/UvztmbG9zaP+0f+1TwtqVhWfkVzuazZ9GAd21rv8HXwujr+dbPl7INY
6yqmX1b7P9TmZ/UxV+98RWP4Uu2WIDfpOksy5sO+abZcfrDO3V7tr9f/A9hD
Nc6Fqj+X9VV1zzH3arOz5nYB8qLqX6n43MUl6xJo309tnqtY3zClat0D7XdX
/fNq10vlDH1Tv1T97T+vb3SjqvUQz8An69zXkBn1/T2nMd/a7P9sVswb+zrf
/X2id0TG1Dh24psqeG+Fl56lY3dobrvCO7H2a2x38syZ57rrlqr/BTl/7+NU
3gC/K3oT3V9bPYtX1GZf/R+b9dpCn9M1vnXV9maVv6m+nX6rq+/+NesuflKf
L5V8r8eK3ln1d8Pzi+6oe7xW97Kf7m/3mvn9L1iP9Xw+U/0pBfMJvA9vqn5u
bL56rv7fpft6WG1miH5V13slrJvnZ62reVr0JNVdmLEcOjRrme5s0V8FmRMd
B/v1NZHb3KXrTVd5re77StWd3mT59vLE9AWqv1T1pzRZ9pxVs97u26rlevQq
K+s+30mbB5ig/7cXrPMbgz5S7Y5H36Z7OhYdVWSdyTrq/2XVD0MPgV4na14A
HgVepZXK1wP/cGKTeRlkVfiZqwIPQPta0TqSSRrnC0GPxbv3u57vbfrfSeN9
RmN4EB2IxnCRrvNFs3VGi3PmBS5gPa6YP1ik59YBvViT9U6PRpahFvGOVvz+
Izd1K7nuPl13nuZzTuT5X1ixzuwr+IWM5Xbm7mVdY29d63yVM3XvB/JM2fc1
nglqN1ZtxqqfU/W7VOM7Vf08xH6u8kFdoxvykK55ltq+mXZ7+MwZsZ/fKI35
Rh1/T9/4k+r3BdU9gI5Cxx+P/P/cwPuha94tbT4SHnK2rnM7a5vo5epnX3QE
mrczYO50bFPmXf/7q75J5aca0y+q+0f3eJra/Ct6E/0+QC+q8m/4AtF5nZtn
3dLvR9X/hQ6p4r1yK9Fvi/5E9O/oMEUnap+gc252+3b6LdF4PlD5i9p8Xbbu
im+KNewadKHMNTpW1k/Vb6/3YaTG9Jzm4Bv9X1X1x5W9Zt7AXsiepDlvm/G+
8nvVfRxFn2XrHUer/KHZ97K2fj82+35Z58dnzZPDp/+h6/QJ89hNz7WrfuN0
fDM9h12RazSGO0RvxjNnb1Vd97R16c+F9Yp161udMydj/fjfacsFrDNL4QNV
/qrxnJtYjjhRfW5V9D5yvOhMxfvmlmrzZ9n77QSVf5S9F52p8sawbrJmvqnr
Ha9ymsqs3odBYW1hH1gtYzn8F9X11O9m0WtpbK0z5sn+CeO/nzlv9jrGfG2c
t37jPPV5q+7zWfRIGuMTvHv6PaE2u+pYb+Qb9IIV132iscUaQ/8whrt1zpk6
fqfKvhnzivsj45S9Jm+q8rKKdZOfip4PL9Hkb2NTvSePcY8qH1Ufu6vPx/V/
F2RHlVvznhdMn65xdNQ4j9O9ba6yC9+V6J1V3qPxdNE5M1lTKtZVvKtrLaz5
G1kLXbWu+4R+D+r//ZHnina8p62brCc9QNfYX7+l6veiinV776mfbzVnN+vX
hjnPmWe5WOVrVfMnp6L7jM1rjVO77/Wbrl9bHftO5S36rcm7UXXdaWr/as58
+uScdTjw7SerfDDye8i1E7U/Suf211gu1m8241WbmXnLmg9pbl7XWJt1zlS1
e7zg+7tV792ExDzedap7SdfonzI/8LDG+ZB+j7AmFv0tPIiOoeTv4zZ0SWnT
XIO16lb9mvX/xCADToZ3yVoXeXyT5cfzNYajRF+hNmdnrD9FZvxD9Rc1Wzdy
VNCxn5ixLPpZkMORNZEZbytaR7pZwXJru7DujVX7UzLWZ36ium31u4h3PrJd
4FDRmybWtW6uc9cpWnd9Wd56oY5p667RO22q34VNlm2fS9s28Fna+iJ03+iF
rs5YJ3tJ3rrw/1gjYuuH2WfH6Lncqfa/Vyx/s6chCw/We7ZC7T7We/e6+t9A
7bdmjVM/W8B/Ih8yb2nLkn9mLEvW9Ttf552n3+2ir1Cb8WnLpN/pnM3VRw/0
5ejZ+Bbg/9mD0pYf10DXpN8Z7AXYSET/qvb7aU5WEb1MdEZ9R7Fln910P1Xe
dfV3MHYg9bm72lyQthzaSf+X6/+avMvoPLmu6M6q31DnDdT/zfX/Dv22V91k
XXcr3e/ZQc5FJ3Nu2jJwb43zDXRq6HdK1mMvQBeXsW4QfuYM3jGVU/Qrqv8d
dU4rZBEd31G/W1R/lc65llLjuTlvnvAm6MTf/Y3Yg9T/X8j4jFn3tbHqdxS9
c9qy5586VtYzOwHdg9r+pPrO+t2gdtvremvo97eOLVOfsepW0bkPlfyt3I58
oeMPxP4O0TGha8ozFuZXdSvnvUdP07Ui/X+x6PXsDtWfwlqVNU/5GWNVuYPK
z1T3qX4FzcfvGesl0F/cqnfoe3hHvWsXFW0D/VjjWqNknXxe5TVF25iuUnmX
1oVR6m+BeIlZ8ECoFuFnEtutdkX2SqwLPzJv/SB6wtNFb1CwXWt9lWN1vSd0
Dxl4QP1mif5Tc7YmfA/7OHaGxHank0XP0TVOUnmDrnuy2j+i9s0qT0hsp22D
3Kkxzk3bZj0/bfkW2TabtX1trH4n6ZyHdew/9N7ID+ht6DvooCY1WweKLnRv
lRurz691rJ/qN9ZcTFP9KXp3vlfbbcJ+PUPHewT6x7Tt3NeLXkPf6QY65wWN
eXzFvNSh6BU1xzMztt3wPmCr3ShlnfDNsetvjbz+8C6eVfG78yJ7fcXv6eKy
dSc3hr17emJ6rMZ2e8b8LfaR+wreq6/X8e3DO9hO7Weq/x30/yb9n1hx+bL6
vFP1X4Rv4X508hmff2vGPCf2lwnYEdTvibqvmQWPf5rm6rzIunRsoi+nretj
rb6+YHvj2WpzUdDLscauVfN6PknP5FJkRtW30TjTutYFYb2t6NgY0XsiIwS9
93ms85q31fS7R23XrXmtX1vlfshlze5/SsY2LWzf76atw8f+O1xtpmVsF7u1
YLzDZF135ar3ggd1rX2zto2yf2BLpYTlvSixXfUc3cvViTEXR2rOF2tsL8e2
x6+LHVTnHgZPUfAecg12P9VvoOu+Jbqt2q6p37Zqt5P6n5I2DqCb6CtF7wB/
rHN76dxBvIc6rzv9aAzr8Y6oTRe1+VTt71TZU8fmqP+uomN0KWqzi+ge3Lvm
tofoHNgRPeOR6u9BPbt7WRPUrjdrtfq5CZ5V9Iei+1Knc/upz94qD9I51+vc
Q1Q+q3O7aI4a6u9j0U9p3odrfKuobFUyPiGLjUlt7kQ/JPrmyHYT9sctNV//
wjvq2i+pz9/Qc+tbuT6yrYQ9sVXVe+ij6uNatbshMnbkOs3dxfAI6uODtO07
7LMfqXy92f2zDoMbWRc9nfpfW2V77Fc177mbqtylaJ7sadYZtX+j2fvyl2nL
g5eLnh55XwArswCeGZ23yo2LtguM0f1fHxtjw7lrFd32Uuao5n0GvvTokr+p
LTX256uW00eCbcm7z/ZF27uxEfwIz1f1eNYpu1/o5UH/g20aG977Jet4XlM/
X4keJXqorjlK/8eK3lznvleyzmZn9fduybqf7arWC2IrZ3/6XPWHqvxE8/+Z
6JGiu2G/Uz+nit5M/Xyj+iNFD1f/K0SfKPo7tV8m+ijR80QfpfZnid5G7X8q
WY44TO2PVP040R2ZB/TjorcVPVr0RNGdy94jGcuRan8MOmjGiQ0FGyQ6LvXf
Xvf+eLOvt37WOkOOdS94Dxpb8v4ONok5PTXyfGIP7lHzXjlAfT9fNG+6SOVt
BbffQmX/xHqtu1Q+VvR70CmxbYg9fR/Gpf9vMQa1Xy9r/SFzcYfaXwU/ApYj
MpYCvdtbanNw2rLo+1nbp7CnvYecjO2Wbwc+OfL5bfROX91seWlibLwLctQC
0U9G7ueMgJlhrFfpOdX1f0uVTxfNmz8DriRrXSjPbLn+Z8CJqVytZtv1ZzXr
kNn3h8LPZ61Pxjb/l+6zrPs8T2M7KOir0UOvproRKr8uWo/N3n0IMnPNNvze
yG1Z28Jpt5P63z52m4Fqf2/a16qon0PhJTVX7XLGVr2kcR6q59eApym4fKnZ
WKzu6qNb7HFj7D1S5aMqp9V8bkbvydPgJtI+NiWxDmRjlf9WzBs8ovZ7R7YR
Yh98s2ac2I46PjW2bgue+x2NYZCOd4Kv0O9Ynr/mYYuAGXhSx8bUTf+rthcH
WQw+o8zzzZoHukT1/0TmOX4AFyF6nPqaLbo174Pu8RTVvZ22Pmey2l8UG1s2
WnOyqq7TrmibH7a/m3TubgWvZ1uLPilnfcz1Wj/6qH4VdJKqf1pr2xzed/1/
VeN8RPSLGucdievP0nnHgK/jGwz2FtogRx+nuTiMNZ/vNbLtg/fpptj8BHiL
adjO4BtVXq3fysgUKgdrrjbXOQerfDG2TMKxbzWGtXTuu6q/JmcbWS/sK4GH
rzTbTjaB+0KvorGOEf0l/av9+JTlkTF6Xl+qn4NUDlJfHXT+QJWXab6/y1gP
f27B+igM/58F+h7d42uR5Y2G/n+St+zygY5fVXFdrWK7HWPrpDEsCTIF9zla
12uHvl3XmgEeU3Vp9FXoB9Q+0vG9i76PL9X331XbAd4oWV7/vMk2hVl1Y5TW
aljGx7YwMsjkw1Qu0XheK1kHiGz+bN4Yp01V9qxaxj9I111StS3jNzCPYPlU
f13OaxHzjB3o47r1AIPYe9V+VdEriV6m+p+xVWjMUysec6ViHQJ2lsN0vX90
fEaz7ZK0ZZ9gXZ5Scf3givUM2F/YM/6r+l7e1NifKloHfaPmfEDVtpN9VC7X
sWPZX3TuC6pbN3JfR6l+CTye7v1tnfu+3pu3VL6XNcbgLh27uWocS18wMAXr
RnZAF1GybpZ5uL5q7FdXlY/XbJfpL/qGqnFgPVS+VXN/b9eMf0CeHFaxPubG
ZutkXqoZ+3Wd2i8sWB/YuWCMAfzVIdhQ9H+m6J0LloNva/b7dDa2oGbL1PfX
beurNszf0f5ytRmh/ttkjOs9S+2rwW4xQeXhaT9jcDns7feqj/0Tv2/vqq9X
Isvg/P8wb7l8J42hWWM6TfQWyDF161r/A09UtS1qT5WfFlx/t/obpjGsgY5Y
9TdWjWnrrbJa8/10QedW8T2hg125ZrzqUvb9irGsO7CHFvyO7ajye435GLVf
qusfLHoT3fMpeo7fiR6t+tdVf1/dtrtKw3qFTLPvIaq4RD/5Ws7fyiUqt9AY
X2z2eoSch+1zXsrv7R/Mc9Vr0Z+iZ1b9Lf8l+o6q1yWexcvgoBu230ytW3Zq
kb/BhZVtJ+paM7bzUl1v37qxyvDtc2vGSMN3wYvxHS3VXN2l8u2Sv5dD1P4K
3j+N7ye1rVat53kKeUXXPVT3O1tt3ir5ewF00KZq7NqaYT1ZrD5vY69R+7X1
fOpVf0t8U+C+WEdYT8BW3V62jIysjK4QvR32aOxqLfY15CNsEBrz2TWvG21Z
y6r+fn9W/S2i+yDjgBVQebCuO1/zc3ndtsKVsPtUbeNrxRqtco+GMco/YNMv
mT/pVbOdDvvXr2rzasnf0ZVV7zfsKZdVbV/EzggGD9skdknwZl0btl/+XPY+
yn56SbDxoWPco2Y7H/YacGJdGrZzfKv2t1aMTQKjdG3F+BZwLnuqzWe6lxt1
L9PL1puhP7tW9AzRl6vNMLV5Gx6rbixWJ9W3VZvdypbl56nuvYrxi++rHNIw
/ubKunEjyIbIiEMbxgCdXTHWCL3f4xVjVNDTza4YS4b8ghxzBLhb1i1sTLrW
papfLnpQ2fptsM2D+W7RG6r94Wq/oe53pq77ecW28y9U9g0yP7iJ88vGbIDd
+KZivMEQ1U/GvoLuUudeLHqq6OGqvwnskehfKsYCoRNrrTbDG8Z+3Yw+u+zv
Df3Kcao/TmN4Qm2OF32C6CdF7xHWFtaYXNV6lrzK2WXzhOh14qr1MJ9qbHeo
/n7Rf2O3FP2A6H9EX1I2Jh9s/t5hv2Df6Ff1Gs5avktY21njd9CvNTywym30
W1n01diO9dtI9P4qD9BvE9EHquwV1jfWuXEa/z76vnYV3T3sC+wPu4X9hX3m
+Ir5zd2ZG/22FH2BxrBuxTrJiugXssZnnw0PpPG/rM/6CM3JcZFx4efAb2Wt
o0D/DIYaZ47FKfsRHBV43TUS049jY9S55bSxqb9VXH6ia52pNfQA0Q/lrF+f
2GwcxZ0188YnVqwnQS/9oeqfBC/E+wymW2N4tdk67qrop9PGrN9UtO5kYz3v
57PGjk+Ah8ta98KYj1Ddf5HbL9O1jgA7pHJO0bbeyxJjaAcGfvjRrPEkg/T/
NLXZXMfGFc3Pbp6xT8LXuofH1faBnDEsB4f1nLYviN5Xv4/Vz0dZ8+h7q91e
4Mt1/Kyi1//VwPvUfe5/WhuqicfwMJgUjW8f9mXNyerwUdyT2v9R8bge1PPN
JsbBtFJ959j0XGTUjGUBZEgwvcz5E8ix6ndr/X5W26ElP6OpBWMgeYe5xq8V
Y4A/BGeka7wD5kDlKTrn5Nh2gpMj2zKwTaR0f0dnrJ9cmLUfyym8W+p/45Rx
SOh+3kUHpP8H6vhfkdt/WfN8fqP+V9e9nKq6dTWekWozQr8zmi1znN5sPefp
Ve+hJ2iM+zSsJz2x6rljDh8QPaHueb5YZT+1+Vj09aL7i/4EvIPoG/gO0RGJ
jst+n6+u2Xb/vMY6TuV+DeOu+tYtjyGXTa0Zz1DTmB4RfYL6OC62TWdq0far
9TT+BZqHfWNjrY9V22Mi30tT1dfimhF8rMZ/YcP7K/tsjXUytjzFO/xy1vpb
7CxPJR5be+5Z/S0Ket0bitYrbgqmKbZvw0n6f3hkLNNxotcpGMN1sdo20O+p
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
L9r+gr1upq61P/J2xvz5gaJ3z5iHxwf/N/acovUd6D2OULlf0diO/YvGG4OX
BQv/ftFrNj5xyJfLwj2+U3M+uhvrtumD1/pM5Wuq36LZ+Z2R7TLqZ3nR+dqx
zWer9q9Hj3Zg0f4U6OYOFn18zTzUrIYxCdj+Btetw0KXdVPdeSpfTBmPTJwT
8DhflSwjvoPeUOUzxFzLWDdCfiV0He1V90TFeQ6erDiXE5gtfOPI9fljs+1Z
5JnCPo6dvHPVeaBurzsvKjrZzdR+zbx99/DhQ87+Ldj1Wvwv0s6tRzBRYrKv
WXIuHnwAZybOdUsehQVhPyIm8diGY+oSX5e4xshzbYkpl1i+Jw8HOdjJj0OO
m1LVuVfAd16qfg7P2+8M/zPyFGDLm504NwE2yjmJY9turj4HV53Pnrz2+1Wd
L6Mu+qqq7b9g0sh3MbzqHMQ/VBy/nXjsxGUfot9E1S+rOB8r/lpDi85lQ/4a
YltPZi7S9rkkr+uF+n9Iw/lkydNGTPWWPMJp54IjPybxiIkRQQ5N4q0Tq5bc
nfibEaeXfMTnif6u4pzUYDjw4yQH2RGiXypYh3Fc2rZF8h3jg0SOOPQcJ6Rt
GyUH6FHgnCrOj3yS6I8rzuGL/yo2XHJG4+OKbw552YaK3rbq3LLkmSU25eUF
61XxqUKe/hkcS8E5Z8nfSixKcs6SS28Cts2C89+Q7/17eDHRh4r+RXR70Rsk
zuVELhDwENey12I3V/0POWPHZ8NLFOwPi1/szznHRCgXrUPCZwrfKWwfxAIl
Jig5F7C/n1R13pAvwaSq/YtFyyfEgFmcs7w2O295nZxrMwJ+4yHV7axnd07O
ucdYn7crBluLrrVIv5ebrC9aUvdz6Bb0QMTg3B9dTMEYQfJfnRvmhzy3L+ad
s5N1efeCMXbsU0vhJcDTqHwt55yFKxLnKx+ecp5DclkSjxJ9BXogdHrEoTkr
51xZ7PvP6xqVjPWr49X+LdVfKXqfgv06BqjPvQv29+Bbu1Tnft7ktZSc6Yek
nCNxas52Xp7jrLpz5ZHjcUDB/ns892V55zqclTg3IbZB/NfIOYKd/cHE+c7Y
Z7sUnB8NO8XionMKg0ckviv5bckJRGzYgwrOK8yajN8f3xr5igcVnGOYPQK9
15qil+eda/WHZtvcybcF77dq1TliiIl8dMk5uYglMSVx/hd45jWqtguT34m8
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
            "]], Polygon3DBox[CompressedData["
1:eJwtnQOUbMkSRauqWdbYxhvbtm3btm3btm175o1tW39s/b3fqbW6VmfexM2r
zMiIEycm3niHlbcvFQqFc8qFQj//z68VCpsNFgr7cfAs0pdw/Bryew8VCnPU
C4VHOXYT+Rv5PUJ6+UahcOtAoTAd6cu7hcKfrUJhCfKPUf5Mu1C4oFIo7Fos
FA7gWIM6T/O7i7I7PcdwofAXvy8578mUj0XZ0vRxDseqnP+0ZqGwEPkrqoXC
ctR5lvM/SHpv+juY+i3qz8/5xmHgY3FsV8byG20Pp6zC72HqPtrOWBek/WO0
f4g2N5Bfwf6o+wDlx5in/QWNjG92yu7m2LO19Pc5+SPor0O+ym9v0i8wvs24
ttHIH0zbozk2OumdOXYx+VvIT0N+PsY3NuO7n/s4PtfyRDvXPht9vsT5TqL8
Rsqv935SNgZtjqftORz7k3M/zj1Ysq9Q+Jff29S/u1MobEV5H/XOp7/H+X8r
bWehv1s497PUX4+6j3LsafobSfkdpGel/EnShzOOPWl/LP0fx/35mXPsRX4f
fjXKz2A891H2CG1G0v5ezrkfZXXKLuJ8f1P/W/rag2Nljj1A+ZGku6Qv7qYP
+5qEMfxE3R+45zXu1b7kv2RsQ9TfhvJ+6l1A/YU4x/uU78LYr7B9M/Wn4R4e
2sg1eC3PUf9ByufjtwB9HsL7uDb34jOuYTb6+44x/cv5DqXsc8qmJ30I6Xmp
fxv/lyA/QPpG/m9G/Wnp83PSW3I/VuZca3LN29PXKZxnLco24tgn5E+m/Af6
vpg2k1F2GG0eovwTxvgM6TW4XyNo+yb1GvS/EvkpyP9D+/8Y/xP0cSrpi7wn
tP+C/Jy+67Q9k3EtQJvnSD9DnW+p/yXlc1M+N9dQp3wM+p2T88/Hsa8pW8r7
Qfowyj+i/ufkB0h/S9+n09fr1JmS8sXob23avs94JiP/quOgfFXyUzG+/ygv
cK8vos5VXM+15C92DqDPmah/nO8C9U/n/wZ+/1zvuPQxsprxzEudr0gvyfkf
IX0oY/iQtivT/5T0vzd1ViS9Jr9pyO9LfnXSd3DOKfvyzvju/I/nfhRlL3KO
FzjXWYzhRsouoM1Z9H8mxzaibF/OfwbpbZwLKFuG/H+0bdYyF6zN+Sfkfv1H
+YyUvUqblylbm3NOR/1DOcdapK+nzTyk76DNDM5v3PuTyL9G/VfM89uF9G78
LiO9K/Vv5d48QP1ZyV/F9W7Smx9341qmrWX+u8L5w/vH7yf6u45jIyibnt9t
pBfmmuuUTUf7s8mf7/zE9a/g8/Fbp/0G9PcS17AR7d8l/7P3h9+zpFfx+6Vs
avq7hrZX8ZuSdJk+f6fsAvITkl+f/makv9EYX4f+1qB8Edq/wpiPo32FYxXK
RnDsEPqeuJZ381aO7cC9eJH8y9Q9m/u5DPXHo/4klB3J+L8hPcw78Qf1vuCc
T3Culcu5d0tSf8x6rslrm8B76XrA/VuI9m9T51WOrUOb6Rlfh2Nt+hufY+dS
/xXyW1H3P/q+kPzxjO9E303yb9J2ao59TPpojh1G+kz6OLWaNcT5dBfO/wTp
W+njjmLmROfG66jzLHX3Z/wfU3Y9+efIH0j+E/LnMIe8Sv4Gjh/BeJv0fxP5
eznHLN4bvyeu9XqOXVLN/RqTfKP3PVt+HWV3MP49Of9p9Nek7EmOH09/91qH
sZxG+Vwce4hrnoNzX0GbE7kXT/KrU/9w7t1x1L+bMc3v+0n55dS/h/YX0n4M
js1K/hLq/0Rfb7jOUf9h+pvbZ8Pvae79/Rz/l7Zjk/+e9H602ZH8TvwOIH2f
8zT9jeN6SH67Ssa2D+WHkz+Q/vcmfRjpg+j/HvI/e33kjyY/OfW3J/9QX+aD
2yj/lvytpI+kfFfPQd8/cux20ptTvgjpeTnHVYx1d9qfQXo/jh1B+QOM50rG
M7nvsPNJJd+WY97f50v7HUh/T70D6H8pyg+kfGeOHUT5nZT/QPo20kdRfgD5
Zym/m2s/kPx51D+c/K7UOZg6RX5Lk/+c/C3O9zyvMvf/IdLHUv8y/t9C2Wpc
3720fZ78OL57/JZgDCfT77ikJ+Z9e4X0PLS50PeUd+4P+jqEY4sXsoZeTduN
+M1CemLO+T39fdfK3Lkn7V/leW1Lfpn+jOlG7s/19LUG7ceizrPKL8pAjGVX
6r9M/Ud4T6ag/Mpi5IdtWlm/tqDdzozlWGUa+vuC/l4gfTblo5Nflr4Oo3xD
8rOTP5k+vnK+4ZrG5v7/N5T5YTPqzet46HND+nzL9Yz0XKRPov0jtJnftZ3f
c5x/Aq55B9ruyO958htTfz7qn8y1bkr9+8n/Sn930u8xPVnuzv6soa6lE/rc
GGuJ672f9KTWI9/v+kD6TdoXfd85/4ndzPc0Kwz35L9NKV+A/hbknCdw/vk4
9gJl81LpRq7nRco7lE1C+xNoP8y4SpR9wPnfpu5TnKNN/Tv5zUh+E+rPT39z
c84ruNbpmkn/RrsVaT8X5WO63tPnC5T9Ukn5exy7mb7G4vci49uc/F5+M/wO
9/uj/+FaZEply3tp/wzpQxjXR4XUOYa6c3HsOeouwO9/5J9kvbiH+nNQ55VG
+lNeP4L6x5JelvFMQvpb+ltfWZH8ROS/Jr8e+cXIT0D+S/Lrkp+La5iUc0xG
H4/T3yr0MWGv/ipcy0c8zy0oO5LjB1P3Eo613RdQ5wyfVTlz7wHUP4b0otSZ
tpz16WXu91NUvp/xlj2f4+X8zzHgB5THqLuac2hvvKvS93YcP5n8Sf6cM/2R
npH36zLKn3D9pL/bByO/7kD/f3BvViN9Cv1NxzlOoa/LfB6kp6H9iZzvVPo4
hfTUHBvB2M6mfE7aLsx4xqPsc/LrcD+maGTuOc09CvmH29nv/MuxlSj7cTiy
sjK/sr9yqPLo0s5x9P8U+TNLkbFH9uTn5+nrTu7JoYxve9cE2r/O9Yzw/eaa
tnA/QH7satbvK8lfRJuzST/SyNrnGjgDY7mdPk+k75tLmQ/vIH+S724h8/tt
5E8gfxPl5ymLuH9wf6ZM7fvkfEn/m3G+J0jvzLENyD9D+Ubkd3eOUl6g/Czy
O5Bfh/w95EcjfRO/d5TFyP9eiTzhXPEvv2N53ifxO5OxTMV4TyZ9I/XfcG3r
y3y3OL8tSzmn43mQazqX8R3NNe7D/R6b6x2d9nuS34v8+dS5mrpL0P4mx8f5
1qNsM47tSdn+5DcjvzH5PZQPq5EV7XM37scizlHUec/5kXd5b45d7vfKGB4j
vTu/SQq55+dVM3c7l7qGX+zcxP07lb74G/U+TuI8RtndjKfbO99ElF3mOavZ
D13UHxlGWcb1b0PyT3O+Wymbj/YHkd+S9iNJH9HK97Zy7/s6xzWd/FyUX035
trRh2KP6PJuyu3ynGMzJ9DcD+X0on7EQGeVS8ldSvtdg3vnpyD/NPVyTvu6h
/DTOdTPl9yhP8rz25vncxPUeS/oYfouQX4zf8aTfY/yLOB86T5Lfij6eqeQb
9Vs9kWNLUPcKyheivwPIz+f+it/+pJeifpuys+rZ27hncu80C/mrab87dWYl
PSkXtwfp2Uk/y/V/yvvwp7I/9e9lvB8whq/JX03+fdOt7O8qpIeovxntR6P/
Oygv+m2Tv4z691P+IuWf0d9f5F+i/CHazsV59uF8d9HHTO7HuT8rc68W5rpW
cb9E/a+ofw3156fsZvpe3v0jvy/cK3INyykL8xubvtbifP8biox5AvWvq2Ru
2Y5j01H+Cef4zv0U/X2kTqSSd3styiegfHx+q5Fe3D0Nfd/JOVYhPzO/b3z2
1L+zkHOOa/1ynpU6i4fpb2GOHU3+aa5njlrWi5WofxzHFqXsZtpfyvl2Ij8D
+ccon7mQNXr6etbrS4rR9zyjfMo7cyj34yB+97j3rEdXsh/153G/0cnz9Tm/
QP0tyY/DOAdpXyP/D/fgFp79H+6JuZd/ew/Jf6fM6NzPsWcoG53+z25mTXZt
bvA7gfQd/JYlvQTnWJ4+n3eOpf4pzq/ee9psVcqe9BL62oXzz0H9G2j3Pue/
jv8fqU/h2PWk36H9h+QXK2V9v4lj81PW4nci6UHuz/n0vbz7BvKb0l+H9FUc
+4v8xp2MbTXyr5L/k/Pf0BcZV1n3P/K3K/84J5D/hzorUf8u/n/IeH7knBWu
ZXWO3e09Y8wvMJ5JGc+5tD1YncFw9Bcj+b8i7/A6/L/P66D9Vpx/PPIV1+9G
9lofU/cTfgdS52P6+53+nmB8g+61qV+n7njeO9rvQ533qHs951uUaz2Z8axK
/Q2L0bncW8/51uV3P+nT+HV739NN/H+7mnuxoXJkPXty9+Yj6O+7StrY9jGe
x2zqZMhvRX4j8ms6tzCmo7g3u5K/m/EvW8/ec/pS9pPuyd2bH6e+hnPdzviX
ZbzjKDsw/puVKYYiA81N3RrlJe73iZz7Scrn5f+blG/BsadcH2j3BvlD6fN6
6s/Bsde9V84h5A9ibK+SX5P/T3nvuX/v0vfbrg88jz3q+Vbfps5e9eTfUp9C
+w/9dprJ78nx1zh/mevbgmt5ShlU3R7j29hvlfyd1N2Bei8NRWZRdtnVdkMZ
wy6muSfXFaNLfa6b+urmXqZ8J/fblI9NfifGeqmyGsc2pOwg2lzJta3G+N9g
/MtT5znKRqtkLA9QZzO/V58H6TOoPyXpmerZO6jTdH+8pvo22n9C+d+Mf9Fa
5v7NXO8oX4vyD1zLXJ8Zy1ydfI9+ly+rP6L8NcpHo3x7yv+qZO68gnOs6nyj
TpOyidRNUH+iTtZX11n3SiXqX0TdC/mtTP3DqPewcz/5TeqZs5y7SsWsJ+tw
vo/UJ5Dfl76XJ/+U+zXyy5FemvpnUL+PMS6srozzner3yXle4nxrU+dD6n+m
Po7rfdnrH8wcMBXP62xlUJ7no/SxJX2N28n6/jD3Yn3ar0++j/Tqfk/Uf6qR
++t9fpryNSn/kvzXtPlfK/oLdZGbc2wK6pS60b8oK71JegnO/7Brrc9D3Shj
/ov0ttSflvzClN83EB3AG43oR9VF3GIfnP9Y5aGh6Ljb6vzKeV/W59gk9byP
U3P9F3NdI73flP9YyDs0ae9825Demt8I8nsx3qkKOTaNa0snst0I+j+K9Jjq
PDn3JhybjPIt1dcpj5GfnPzi9cgGn1N/2Z7+7APfTY5t417V75b0hoPR363N
sRuUJdSfkX+fOWAz0vdzbFPKTqhFFnhMGYT8jox3Lc73EPnN6xmDY/mZOgPu
Reh/a9o/7JxA2Szu6cm/SH578ltUIju9QH478sfw+2coc9w1XPuS5E9VnmX8
a3HuedvRp+1Eu43UNzhHDhVGCYTrUD6NOnb3u+QvIj8P9W8aiEz2DM9rQfdr
5P8jvzL571vR3X6j7Eh/iymfMZ4b1GFwf38nf436G3Uo1P2E891fyh5lIfKf
kn+glD3couS3Jf885z/B/Wkt1+i1ugc6hfvxmTaSUvaAS1D/T/VVlI/HeH7V
PuF8PBQdjPabZxnjhcXokJYlPSu/A/yeKd/QtZzr2Vd9J3VmI70m1zA951nV
/aiyHceeLkTnco1zK8fus29lYs6/ljpxrn189UvON/R/KvWvcr9C/xdSdnop
OiB1QWtrY6D/86izMeU/0+e4Q9mjz0V61Wbq78h51uhGBlEW8X340XJtAtT/
yu+R/Jf8hsjvQ5uvOH+N84+kbJ9q9EmrU/+LobzjI9rZj7xYyj1e2m+BMY03
lD3kX6Qfovwb5+tS9i8HMY5PKT+qZ/8pkJ/Q9Z/kMbxfY1D/eequzrHR6e/x
dtYG14gXKVuPMaynjoD6O9LfZvz2dW2izd7qXhvRjX7gflHdQyO2pzVoPwb9
jUF/m/p+0eebpK/iXtyt7p/6D6jv5NgelO3BsW9ovw7n29F9Y6//RXyWA5lD
nUvvov5h1D9XmYv6O/JbpT86NnVtTcpnoOx32p1LX7e2s9Yuyfifp3xZjm1c
yzOeQF1RN3os9Vm3Ufcz7QGk3+LYadqvOOeTxcgwG3Ntn/B7oJg2tv2H/+tR
f/2ByAvXqu/nfGeVsr7v1Iht8HHafEn6Dq5tOmUT52TS25cjK03PsXfV9TCG
CWj7PmXn9ewl51C+LuV/k76X8iPofy9lRMa6LnWW5vi65N9irNdwz5em7q8c
O4uytzl2Tyk6tjlaeeY++6Wo8wt1Zm7HdrQF43mS8f3CPbmiL3uEdy3zGkgf
Wcp88gv9PUH6T9rsSPkP9LEY6cUHom94rpr+FyX/PelVmpnvruBZV7SnqYuh
rEif66mbYDwrkJ+c+/M66WsZ/3Lkf6ft2dQ/VNmb/hbWhuZen/PfW4rNcl6u
Z9JyzvUC7e/2O6P8cZ8/x7ZjfKt0Ip8qp2ob+EobgLpOyjdpZ4/lXutadXjk
b6F80Z4MrCx8O+f4X390hOoKXYNdi9cpRh/xN21GuHbR326kl+Ie3uL+SH06
174/51+GfjZQH075JPx2H4jNUttljfxqpF/ifrxIejnGsyn35TT6mKgZmUPZ
Y0P6O5zjq1E+PvfhcZ7RXo6NOseTbirDN7MmuTbtQP0TqT/gnta1hf5OdT1h
PPcNZU27gPOV6OOuvujQ1aWvTv+TqYehvNnKmufatwbX+566E/p8V1mG8oWU
dZXPBjMfvu7espH7dyvtPqCvS0kv4H6KOh/wfxPtD8px1H+TOrcy5ok5/0vq
BGhbUT9eiMxTJb1YI/diSvITU3fyRnSDvlO3tLOmurY+43xKv89y7EnOtUEh
83ufNmn3i9R7vZs12rVaGbmpfqIcW7f2V+2wLeofprzFeGqt2IS0DZ1LnT+4
3gHtz+qauF8Pkv6Q8/1M+S/8PiK9Pn3cRv+3F2K/XZf8Leof6HMd0ttyDY+U
YpPV3vgT/Tcov6UUe0GxHt39q8qPlcgoyirqnC+l7g+0P5Pzf6g+l/bbkX+U
sl94h7bi/D/5/Mk3/FG2fTP5aftjX/y6nvP/SP3Nqb815Q+VYhPWHvpLJ/L6
B9XYa6vK/5z/sULmq//VYs91vVqiEp2NupvrfB617C9rQ8Fo/KA9tJnvTZvu
KvS/IfXvpHwtr7eW/p0LV+d6K6Q3cM9NfpVS9As/qnPjeq9VP0O6wbG5SI9f
iP15QcZ7nftJfrO5XpC/ifSNlM9B+juOnUT7uTn/CNJ/KMNRNnMp8vXC1LmR
+kuSv558H+WTkN/Wd2w459PW/Qv5GukB6s8+lDX6C+7fRq5JQ5GZTud+1Clf
ivyl/GZUv03+dtIrOgc7t3MPvuqLjK6svrIyuvM2+fWo+xNtLqZ8ScY7O+kl
OLYu92YX3tNd1E/TfmrK9inkfpa4h3eRPlodq7YHbaCunfTxKek5eY5f9mU9
dV0tkb+U/Ar0sS3pmfh9Qn5mfgXOcTy/d0hPy+9SrufXVuZe5+CRyqbagwZi
A3qd/E2co0rdFcUnqG/wHVH+4NiU9P2D+gHyL5CfvBoboLbAuUnv7vvVzvru
Oj8a+SO53r+4F2MOZr68jv7LffmGFqXsmkr2b586ZvqYlfzpxVyj9surxXCQ
XlydprYHfm9pO6beHu7PqfMz5fPyq3DOcjvrketSV1uZe3b6e5Xyqaj7Yyu2
jpULsXcPU+83dWeUz+haVw2WYAxlHtK/MsatqX8P1/0w/Y3BeMaj7BvaLaN8
zf8DqT8+x74l/T9+B5OfUP0F6S+0B/YFE/CV+8tKvt/f6PML8pfT3wDlC6kz
Z2ybec+8d/Rxm99KPeefhPNfQPpnbZbkN/WZcGx6bVauHWIOSM9YCV7pjb7o
Z3+lzmfUfY381ORv0B7fF0zDdpxvpkrkP/tQ33sl5YOk51P/S/qvVmQLZYDX
6rG/z+t+m37PrUcuWbpXrqzwGf0dQvtfOfZ5OZgAsQF/9/Rxs1SCT/mCOnOo
Xy7HtruuNuta9O3O1c7ZU1N3J+7/zJzrGs71trYf9fu0f4o6E9P+SPp8170N
79OEndjMtZ1rH1W/fjzlH1J+oPtN9+qt2AO1C4r1eqcR/eMH1DlO25s6hlJk
IuXjvRjPg5xrHcZ3KuPbmHaz9eeZLqPsU479UZurttcNlcH6cw+WKmeP5l7N
d/YQ1zvO/ztl81Nvz27sd9pmttHmQ7pFmyL9/eIzIH+u72dfbKDX9uwT2gYE
0U2kfoxrupN8h7q70t995O8gv3E988s8jdz7Q+n/KM6tcW15dWfu96nT4djI
vtg+d+tGTluuNx/8Rnpj1yzG8zR1JiM/nvtrym7ty3o7RH8rU3866rxLX4eq
F6RsIn7nV4K5EHvhPT1LXaZ6vkJ0mi3a99F+xYHYfLX9io+6lrLVfD8pP5lj
t5Feyv2u+gL6eM/3iTpTiGWg/eoDwfQcpjzO9V9N2dbV2KcnquZd2d1n4r6H
9u+U8gx8Fu73vZbFeL5HuX5R58a+2KS0TW3gnKqt1D0z17N2Jevzz5zz03Jw
ceLjnLOdu7dnPBOR370QeXWFSuRbZbZ+dU0cm5jyPQqRt1fslY/LOR4ox6b5
Pvfi0Z6t0/szIfV3sP927NMTkN9eewTX8qX624GsbddSfzbKR1NXXMr+QX2A
c/3TlI+g/MVmdJFiGMUy/qOdm/JZqP8v6Qs6WUtNr0D988nP5PMjv7xYuFbG
6piV3deoRP74RXmW9PKV7E9cc0v1YChfUZfY+9726eY67WNB1076H38gsux1
lP3UCBZpbvpZuBt7+ugD2e9tTdl4teBXSBbG1X7UCj7hkeHgX56k3eZin8Rb
lIOLER/jnCM27gjqPUH69mLwmNPSfqg/GMZt6fQLflXyK2m/5F7tTZ83uK5w
bLpWcBviN5xjxYY+zvk26YuNS1vXe7Tv68+co73mm0awdnNSb0H62oX8mOS7
1JlVvBp13ijmmc1Ofm5+Y/XnHrrXcw97EO/mdeXsTz+m/QDlH1N+Mm0XrSZ/
BOe/i3McL9bA58vvRdLT0F9/f2x0m6rrpb8tByJD30B+LfXNxZxzHuo+0gre
6MHh4FPExP7muzQcrOyl5PvV93G+uXl2H3lvKJ+RPhYlvRHls6r77Olb/mJ8
a3O+Y10/qtHHWDZZKft1f6Y3qfX28s3sPYqc48Jm9kxTUL5ZLXup6xj/jvT3
PHWudb+qvq0vGJPvOf+01L+kkDFe5lpNne0GMmfdxbnHdw1ifP/27COLNJIW
cyb27FPtp33BEL5NfwtT/o9zLb9xXBv9uZ+n3lLOL9qIxIaof2llv7/BQL6p
sZqxcWjr0IZ4Os+zv5K1dVn1D/S/I31sVI6MuDXtT6C80BcbuLbwX8rZK03E
O7Aj96BL/xvT/xXqz8Xj1CJbiaETS7cD/Q1oB6f/U9UFNYMdGYP+5qT/makz
/0AwidonxSO8XgoGSyzWv7S9sC86c3XnxVpsLWcXFJgp62SvqC1rpW70M+oy
1GlMzrm+53cG7TevBr8i3vdT5Sn+n0GbaSi/yEukziWkL2jmWT/lGq6sxzkX
IX2Ve4h6ZGjxM+JolK13os5Zhdyj80mfQNlHXN+46rC0q1Vji164EH3Uea3o
Bt9RR0X9fxvBIu5D+y/IL1sO1tA13bX9Aer/1h9MTasVHJG6goe9BtKP0Of6
fbEBaQv6vJm+xDh+X4+NRFvJhuKVmsF8if3ynSxU8/1b5hz0VQ+Pehz516hz
PuP/lWOTULYtx16l/VWM4SXK2vR/Jvnn68GSO+eIB7paGwPl3d76+gLlKxYy
B2pvWqAc7KE6ZXXL23MPz+A8uxSCj/YnVvqjSsqWFu/YFxlmw56871q+A2M6
TJm6kXszSU9eeIo+FyO/jvZ77Rs8r18Zy5H0tzHlL3Ns677oaNXVbsOx1yjb
kWNveX8Y/xfufenjP3W59L8b55q8L/KveCD3LkdSZ5vh4P60jaqTqZPeVhlO
uYg67zuXahMj/SN9fEB/v9PfpMUce7MZXKG6kYcKwZt4Ds91USWyt/4B2jPE
xIuN34b26/ZljXCtUN4TazI71/NfOfK17R3zEWKr6G/PvuzZvuP829HnB/S9
F8c+cS/YzLu/aTV4tX/of+pi2nzczH5LLJKYnBO0pVRiX1qQ829Bmy0audd3
0v9W1N+cPi6nXj/111BXW877sx11XqbtVZ28C/Mop1B3qnKwOWLKllfe7+Rd
ch3bkvLneu239/2rZMy/kD99ONcyUzm2UG16i9HnLOVgTbR5LU7+lUra/uT6
47ka0Q0fpL2pk2fu9+p367vwUjnPx/fhddrexD1+m7FNzfXd2ArGTaybOqOf
Kf+Q+lMV87zfJf9eL79HX+bkj8u5n97vDyt5JxzLacN5V9ZvZG2/SXlTXXcz
39qL2nW8fuVd8j9Q/nw5+NenOf/ljOeUZubopchvVc3cfQX5F8j3UX65+hD6
XNW9N8emIn8lvxdJNyk/g/bramtwP0u+XAkOWDzwX5zva8quYJwXFlLnn0rs
nef2ZU50bnRON/93JXP9r5XMt64pri1PV4KlObg/mLrrOf/rvf5H4/zPco6J
i7nG59WTtjL3jEn7a1qRj5xfNqL8McrnLwfLrM1K29W85cwX+kx8Qnr1crBa
U7D+7Mrz34IxjVsOnnVmnvd6lez/xIivL36pkee1G+XvMZ7RlSudHzh2TTky
1srk76lE9lqMNoP9+QYfqqT+AHX/JL9ANX4Q6t6UQdek/MtydGPusd1rKwMq
C65F/fvVNTQjO6nTv72db8pv65K+zM/ah671eWt/ov6EtG+QbmjfouzOSvYi
ylzKXs8os1Peco/ifFLJ2qMMuDD5qVvZW+7mHNAN5l7s/U+99+k+8TfFyGiL
UH8v8g+THya/eE8fMXl/3sGzhoMxFGuoiVB8n8//UtLz9WfNPa0SW+cS6kuq
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
7rPUZtsOR6pYB6cu+Y9fa8W++i3lG1K+XyPclXJYvupcqo2a8R7DGI6uxb9Z
bp+2OgLqX9UNz6Vt1iV/gPqDYjADB7XjnyiXihwxcsVoWFXXJ0eLXC1iQrao
pU+xIstw7ImBYIzkA7y8nWf5uPhnns2S6sfIb06dsSi7sBGs+dXaPDrRKTTV
Sw1G16A/pHvhacifQr7UCF+WOv3TyJ/ejq5BTqrrG/EXXZCxXEZ/83TSp33r
g+/97fAM59MXrRD7ij6u+roOU35tM+PxWagj36HnH6lv4yTUP6kcncrO5Z6/
OudeoBNblvao98ifQH7L4XBEHaw+uZ1vTey9fGZy6NbIH1CP//xAI/qZ2Wl/
ptfbSFodjv2f3I7uRYz25Y3YOMR5ivfU9qH/8gJc72Tkj2vHP0Td9IQ+c/LH
KoMNxsf5xEb846ehvKO+pJ3952rF6ETOaYd/eFHGczDXNH0nmISza9H/+b3N
0AmXleXTkf6b67hyKBxr8qnpj3tmMTbR8VtZE10bpx6MbulIfuMMhrP6I8rn
pY/Lh8LJ9hplR7SD1Rmd32TKZ81wDVlnvk50VJuXo79Sd7U0v8cH8s757vn9
yKUlZ5DcQe904ivsO+W7pf15LsdGf7+1I+9r+9YGprytzkDdwXaD8W9xjz1q
rz0U29WV2tCGwzki3/iv7fTV4XzPtsKJoTw9Acf+oOz3dtL6UL1A2b/tcM1p
w9KW9af6tqH4zA77PrkHGYrOWC7viRqZ+9VZKE9+wLEZiqnzTzv8GldTPiP5
Uif9X0l+Bvcz5Kek/ZZD4Qsai3yxk7rT0v/ntJ2qEVuJNuDv2tmviDXwGxnu
ZH/k3mcW8v2dcPDpT7Mi+VYn/G8bl/IOKQ9e10iZnHrNTviV5A6SA3vadvRL
a1N3ZfUzlJ3dji+lPtk3u38iP/VQfJgr7dj4Ninnmrxf2gz1BX62kOchhuDv
Wp6pz1b+Etf+1fgt3Ix/g7ovdYZ+P9Pym64Qjhm5ZkY0MheIsdioE4zDb7Uc
E/sg393mtF+zmPll/kZ8qeSokKtCPg6xAOpA5E8QYy/WXs4n9+NibPQN3LYQ
7M17jGd6+ioNht9Ce/uJlL2n30E3/VvmPfBeyLEr164+k6PsUepHBvPO+O7c
0A1Pkcd2Jb9HO9zDQ+prSW/E77uBcBJ8UY+9a5Tv3UB0PRu0s3acTH+zMfYd
GllrHqHO5649rXDb28fG1F2pHWybGF7lx+0a4QYT47VKO/EI3Iu9Qn7lduJD
vFQMh5hcYp1OuPZX7ckbrjdyWUxB+YetYMqOq+QaxJpt2Y6vp3jHH7VBtoKf
lhNWbljx9WLn/ya/Szv8Y3KDyxFu7AU5D08thw9RLkQ5vKaqZ46SL2DbdnzB
xWPK9bBfO74PYir399yd6KfVrYnPeaMVLv0faLNZO5iRaavh61a+kA9BrrEP
h+Oveb02ZZ7PT9T/2v1gI9xT2tS1rYtx1PdSm5DYx03b6Vubmdwq+lTrWy3n
vLE3Hm2ED0AMpVhK+YKUneQUPZ6xPUybC0lP1xf7xo6V+D7PWAiXqDZEbYn6
lE7ZjE1S26Qy+Yed6LTVbevPtRd9v9qJvUhMovY3dZjqMuWvk5tJHay6WHVm
71H37UrsdWKi9Q15tBNbuTp5dfPawLWFGy9D7i052PXBEOMg1kF+cu3zYtDl
ItDmpe1LnenMXN9T7peLseXO1I2OWF2xMrmyufKgvob6SSvvKN/rs6SO9a9m
9s/6IGmT6mtFvyO2QJn22ka+f7FOrgnf0teHzfi2eD1ivR/j/IViuOKNX6G+
T2yMOrN3qD96I9gzfaXkP/b9EFskRm2MVvy55Uf+qBAuaDEIYhHkYxdL5Psp
15xz9nidcCTKleh8/UUr86HYh+UZw/mc64lO/DH03Ziassc70U1rk9Y2vSfn
+6gUjnK5ytUvifWQf2PpRvxzdu9dn74hzqdis1wDfujJy2KtlOd/6gTjINZB
f5L1WrFxa+t2jneu1794xWp0Lvr7GQ9AW7v+kO65X/X9KWcN0L4gns939ZtC
uLbk51DWnmsw64H2IDEG+t9f3Ik9SYyFPgkHN+NvoeymTUvb1tOd6Bb07Zml
G32G3Mwtjm1Jf+c1cu/kEJFLxJgYfs/6ToufFWMu1lx7r9xq+vAr9zsmx6bP
nb767vHc6+nzr01rA+9xM9+8vtonFDIX6DMrDls89r7t+NiKuxZ/vVc7Pub6
musvvEcj+s7NCuG8XKGT/ZHYSr95v33xafpZ+U5+0IwNW1u2OtXXmtFhqMvQ
R1QuS23g2sLFtDzZyZyxbSV7Lvv7thn/S/0wx+iGv1buEvkv5MHQB11fdHVK
UzfjU6qfizZjbcf6iGu3VaegP4c+ovqKquP5txO8klwd+icf3ghf87OV+CTq
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
yQ==
            "]], Polygon3DBox[CompressedData["
1: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
2X5rfg==
            "]], 
           Polygon3DBox[{{4764, 2269, 2209, 2208, 2374, 3718}, {3702, 2347, 
            2184, 2185, 2348, 3703}}]},
          Annotation[#, "Charting`Private`Tag$162666#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt1ElsTVEYAOC/dOKZWYgFESESYSeRIBIrYkhYCbEgNpq0Uq1qETU8VNVQ
osQUYtywEENIiLmmEkVrrHZTGkIQ8/hdsXjv/Pf7//+ce+857/WfPW9qQUZE
9PO1KjMiie+0j8gXbM6OuNg5ohtrYuvYXjWXWD/2nu1hmxQc5sPYL3acXe4e
cUz/aJaSe9Ul4go/I57IGrMiPrAGVqtuBptkngHyb9kNlseG93AfORE/2W25
NmuX8S2sd7uIOnVfWAUbIT+E3bN2Pd/G9qsbw46bu0X+EJtqHNU1YgpvU3eS
jTGOY3PYF/EVNt7a1/SXsO967rN84wLXv9Rk5UY8YNPEC9nrThF/xA9Zrb4y
9oZliBtYgd6BHSMW8fYsW38jvy4exJfwn2oesTzPdIMvZR2Mj1l5KqJQvpyl
WI7+cz5P5G66XsF/y59nT9ktlmaf3EN38TNWJL+anTNX2IPnhjq5Idav4Bms
ic33HENZJesp/4Kt1FOiv4plqWtmB829QO0GlsNaWKma9a6zXfeyx/VsLiti
F+zDV/FlNtM4m51m78Qn2GTjSPswmbea9yAbm5wtNoo1i2vYYnuckh/MHrM1
bK150uIj7JbcZ++wlFe7/2/Oz025l2wua3Vvb9g+PbV8OutqrE/Ombmv6p/A
KvS2eoaL/FRybtgPZ7yRHWNHk/fEPurpo3YnO8D6sj7OzxxWwXbr9QjxVO8a
1zvVFNunLslZdi+r2Q5WxNxizEr2jtV457v0es3xRO8KdtbFdrXJFs5UV9Uh
YlnSr86WxSrzVbKlbBsTRlpxmbjau6nRm5v85i00Xf9idVvlCqDLWK6/LPn9
s3ymPB5YuyT5rZtnU+a/oxPTFBezjWwjy0z2PnkWCxbyLRq1xV1faZb80VQq
cguR6xkK1eb9/9/5C/denqg=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzjkvhHEUxeGrorGbGTtjX2qJz0A31kQjgkpoJJZWx0zlExC1fYtdrBF6
34FoNErPFCfnnvO79/++6amFzHxBRMzRfXHERllEc3lEll+URCyVRqyb1yoj
EnKV+UiX4Mf8UvdQEdGPJ80Jc9p9O7XQlW4LW7abc5OSk3ZasTYqxL70s7pq
7JpO7M7o33U38opcwwfkX7rAdt1+u9vjtdg+v8z/Q/4bNO3mkW/az+ofzB12
OmkGW6UJfZ3bQTsH+kPqoz95B6vHUuZTu2d0K2/rn73VYH7iGXyIivQvcpf7
RbkR7zaf5/9dfsM/+J2+Rz9qbjKP8ALsk4bNP9gkb8ZevZfTj8njeSb34mms
Vv4H+u44ow==
        "]], Line3DBox[CompressedData["
1:eJwVzrcyhHEUhvGjYeTUrDxyzka4BSW9VFgaOgpp3cBqcAPGFajknHbdyg6D
C/BTPPOe8z7f+c/XvLQ+s5YXEat4KI04L49IVERcyPuyiC15VxlxWBUxVx1R
J/vsA+jHg29O9Nu+S7trsdfIS/sVnuzz/I651fyIQXdDKNQ/23e5Azdt5lp5
bb9BET8rz3zbzr1gSjdsH8GbfY/vkCl3+///J+uxrM/II/+b1r+bR92MIcml
cMwtcPtcAxrx7q2srp7rNCfkBjaR5U+5cW98ooufkLfeauLuZDGf0U/qu2VO
n3S7ghLuW79o7uG+zI+6nCzQ9ery5atu2vzhdor7RZ/9R/4BSng3hA==
        "]], Line3DBox[CompressedData["
1:eJwVzscuBGAYheHfBehr7Q6UIFGiDKNHYsMwLCwRLoBEL7egiz3WSNyBjVFH
H+0KCFYeizfn+845fykanugZTwshjOEjPYSOrBB20YmhzBDa6QraMJUbwrtO
i3kHrRjUidJlzMlTOSG86TTZt9GMuM4zPyZfskfwqtNAt9CIAZ0T+XF2CN26
R/RF58BcyP/NcD9SvH1eAe/HPotnXoI3yku655t3Q6/xJIvyL81X+JJd0HOM
8B/lM7x88547HuzT9k+c2SP8hO49f8M/T/1rk/bzJmX15kXU4U6nhq6jFnny
mF61eQFVuNWppGv/5+RP3ujTqbDPoxxJnbis1LyKMvTqlNBD7xfTLvwB0B5D
eg==
        "]], Line3DBox[CompressedData["
1:eJwV0EcyRGEUhuEjltQ6WIEVyHkDGAgtZ9VGNNoGmFCUsWwqmzG2ACNroIQq
q+DpwVtfOOe/97+3MVfIbpZERB6/iYihVMRLOmKYLiUjjnDF7zdENNVHrMkj
chaj+NO9ZiL6za/lZjlvZ4yfwDhCPqiJuOFbzNflSX4aU6h3tkx3y9+h1U6p
/OS5SbMKvk1XTp91Kd0y366rpAPyO/1ANY5xaS+nr+K/8YNanGBQ3+FsDb9L
03InrZP3aIKu6E5pl7xBV/2TPNaQMUvqznDvvt12NvkZfhbb5p/Fe+rO8aDr
sVPgv/Q75vO6OaR1F3jke+1s8QvmC8X/j0Vkit+DN+/us3Oo+wds+DJm
        "]], Line3DBox[CompressedData["
1:eJwNzskug3EYRvH3MyzVdAW9CJcg9vaUGhcdcCWGuzBFYk3iHmhLi0Qlvo5m
G0P8Fk/e75zzT9psvjxbSiIiZ18jEWfjEec2Z1u2PxnRn4j41DbwpjXGIsru
ntbTPrQiLlld63K7WgG/a5nRiDXfHf6YX/f9xp/iLE7wsA3ZK9/yvsTX9L9M
RIqf7EWrckXtEf9qTffBnrWKVtDu8Y92587gK76vN/CtfWt1d1q71HragN8e
tBv/f4c/4bt84t01t81dcB1u1bsj3MY1bQUvW1tbcg+1llbV8njRUi3lDrR5
XNEW3JxN8f8Pukag
        "]], Line3DBox[CompressedData["
1:eJwVz0cyg3EYx/HHRpQJiTeJbsQFOIDeNtg4ATkAC6KzIxewS3ICJdzEBZS1
MpaMMuNj8Z1fe975z1ssba5uNEVECR/piKtMxFY24prmOiMu6CWqXRGVJCLR
nXZEpN2866q6cTmvb9alcO++od/my24m7F98C1qR2B7clPkfTNq/aRvakbM/
2X/5Kdsjf65LeSOjm9YV+CXdGV/zxijfravIdXlM/vQ/Pbqsb+ryjK1X3pH3
sIt++cZWpQ3vzLrp45+xJr/QvH2Q1nDnmzk3A/wr3lCwr9M65m1DdFm37/YA
RXlBP0xX9Ee6Exxj5P9979xi0c2h7g8/zTHs
        "]], Line3DBox[CompressedData["
1:eJwVzrsuhGEUheGtYM7n6ZwiwbUYjTEJF6ASEqqRSDBqF6A0NM56EjLhOoRC
BoOW2vMXb9b+1lp755ta2WxtDEXEKurFiMdyxHsl4om2ShE1uoMq2jVvnbK5
hwoWdUp0WfZa1ZPfe/fdeKBN+Qt/Sb7tXUz2dK7lN5jEs2xdZw1lWV6ngFn+
gv2cOYuS7Cf5G/9Pd9T8jS8UZX3evqyju2Xvin+JguyOf26+QFu2p7OLDj8v
/+QP2x8k9/gf9FD2y8vJ07wM5u0e5CNO5NnkLsbMx7oTdBwZ3ojumzlFZ2QN
e13vOfeOaFqnZ56WVWkdNaT4Xd4tHdg90z1FQ/YPKrk0fw==
        "]], Line3DBox[CompressedData["
1:eJwVzzkzg3EUxeGrMRSx1kgiqPgAieUD2I0ZNY2ODq19a3R6ZnwPWcSMJHZ6
jdIoMFSeFGfOPb9z7zv/N7W0OrfSEBHL9NoScdwacUT9bRGzcr49olTPHRG1
zogXbAzrk0d5zd4M9qZrpCZ8SG7mn/oi9sV/6Juq9hPYuX5E/pCf7WfkXqrq
rvEnrEtO0QD2x9M0jRe955H/yjldkpfdPGCFREQWO8WusHtswryAzbs7pAPq
waZ0F/i7+c48SCU3ZV7Bu/Fb8779jHfu8T6+oTurv9dcwGp2dvkOLeqGfWMS
y/EK38bTdtd1xfo/1t9ESSyvuzGv6bbMWTebPKUbxy/NJ+Z/Jnw9Bw==
        "]], Line3DBox[CompressedData["
1:eJwVz7kuRHEcxfG/iNb6BCqMCHoSe+yFfQaNQmhslREasRR2FU/gBUQlERFE
w+jIiDVREwVCwmeKb86555z7y735Q+MdY2khhCm8ZobQlhNCO1rxmR3CoGw0
N4RJJPNCSMe7fMnzMubQbNuCAdsL+is7siunL7LtrBDK+C16oO+XHer3+Su3
vukXEnxMt6N74yN013sffFTeZPNMN90p0p3rRvg+WaPuif7IKnUxWooSPMpX
6QpmkaGvwAK/iAf9BL2X/dFuN+vdq0MDevXDusvUht/QR/l1Wkx7ZNf6CH9s
H6fTmEnd0iV0RXwh7jyvpb7fP8XlZ7J5vkteQM90ydT30mq39mxObWr5TnkN
vaGF8h35Ld+BKvmW90/oP7CKRS0=
        "]], Line3DBox[CompressedData["
1:eJwVzjkvxFEUhvEj0ZDYK6WKmEXiA6BTEUFtGcYYy+jVegkRXwDfQLQKzCpo
JRIFicLSIKj8/sXNc87znnPv7cttTZeaIiLvvLRHlDsihjoj5tT3zryT0W/3
RNx0R+yrK2ayuCAbwEUsyIflVdlFW8QgP9UV8SCb4I9beP2l7Eh/Y74fc/Ir
rmYvxS3pU3aXsc4dqG/NpWWtmOfTuILj7ivbHZO96if5NxzVV/h3dZb7wEeu
2anyDfcWuCKu4g5/6J2a+76wyH1iL39s/zvJ7J2od7k7/VryP+7Uzgj3pD9T
P+OevCG7M5+RrSd/5jZw2sy1d+t4LvvlZ9Sbsh91CWf1f8kd+A/C20CV
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvw3EYxfHHLO4bFm/AogOLhNiFRF0nEmFR9zuvQgSbSYsXYJF4A9pS
dXkFgoWSGFw/HU7Oc875/n9p2jKe6p+piIhJKlVH9NZFpPgjzdJObURXQ8Rl
VcSc/ETzlNYlsQOUtWVrIhLYBdszNdqP6iPadTlbDpPnHXJaP2V/wS1Sp+7K
lsdc80FvZjDTmD73Ema3zNi7de9ySf7g17pW3bJ7hXrcBd2qe42G5Bv5s8z6
pkm+8PY4FfWVfN1WsDXbjuU2+pJv7d98yG840e2X35I38MO6H/cd5o+PyKeY
A8yvvIkZ1QXdYzL6MXcCs2UrYrb5hPxgP7ef2V91Sf/BG9/DHNI/6sJEeA==

        "]], Line3DBox[CompressedData["
1:eJwVzrkuhGEYhuFXb1fQidj3aAQnQIUoqTBUjNBKGPvM2E5A7GtJOAc0YmkU
Cg4Arc41xZ37e5/3+b7/rxqbGUrmRUQSbUURV5gsjrjkduwWRiTMv86DZRGt
fIFx2TlP8I5OV2nEi/07t8jPsFkScco9skp+te92fpL3ufPGFbI7WbP9CY6R
kI15d1vnx9yEI+Tr3ds9cie27LPeaLQbkB/IXs0N5r+CiH7Zfu6/ZPWy4dy7
fIgDzOX+0RvTOh92v5xEnXyeM+5NcZq//E9Wd0+vyFyr02sudS6X3eotYgQp
FMrTvM4LvMY3ehtc4+4qz/I+OuQPOqO+kfHmst23vBrXdinzEhbxqZPWWXHO
xzP+AQfRPqA=
        "]], Line3DBox[CompressedData["
1:eJwV0ckuw3EUxfHb7iyMfQJvQFtTEIKNpe4kbNggVTyCJTG0ZlZszUM8ha1I
kIgEtW7t8enim3N/55x780/+rVMLuUIiIvLobYy4xXZzxA0tNEUcNUQspSJe
WyK6eaPePfSQlvTuZVVZF+8aeTtXdJ4e6CzK58w/vE5cYkj/go7QfZ1HneHa
DWTNJ/Td7T3ZoLlD9xwZ2YP3rHu7siovi19eTjZJB/BmN8PfMK9jGWPyY/oi
S8uevAPT5jOcYsbdHXcX+C+67bx+2ocne9uyXVlZL8lL4Ns8XhdRNG+hhC/e
Cl3FBJ7tJPHnxpYbvbx6tNW+kbeJO3mFlzKXdD7cKHun+Z/mNX6Rv04rtf/E
+wdsXkFG
        "]], Line3DBox[CompressedData["
1:eJwV0ckuA3AUxeHrAczDnndAIhTBC7AnEYkF0ShPwMaOiJ15HraqXQqJhQcQ
YyO18gClhhq+Lk5+955zz79t2jyaHJyqiIhJ6qyOKNBqVcR4TcQartRGZOoj
nuoibsyNNGBelzWYN/BK/lUZ8WsPWYu9iGP0za/CDF3zX727qXPutonu6Y6G
ZF0++9acwJLej04rP4lbOgncxjd5zt1F+Xtht/0RezDP+9Gdc7tIfbx57Mdh
fJAX8Nn9O2/He732XUzLlvi/+inegHymfMu/xBHKy1+oKJv2W7K8lHzCvOeN
FH7I0viJbbJ9/rLOAZ7y/7yf02uXzdgP+R1uj3DW/mU+wwX5d/n/0D2WJXkn
WOJlzf/PrUvE
        "]], Line3DBox[CompressedData["
1:eJwVz8kuA2AUxfHbSWKBloVhJ56ERSsxBPEEEokVktYQngBriiBiWJmnDopY
eQPxAl7D8Ovi5H+/c869ydc/szA1n4iIORruiOjJRRzSRXtEN17iR5cQU50R
aWpti5jFBC+LV9iBA3o1THpv262bq7wd8zXvx/1vcx8d07P8SN5rvmnepy/v
Cf6g7iQO4WLWXdqQLeEIr0ijdGK3zE/bPTWP8Uo0Tsu607I6/nrn3LvVy+Mn
v4FlOxneLt7hHtZkL7IVe3/2njHolVeUFfBed1+3BROyN15Jltd/4K3yktSg
TX4Kz/QfZQf4hOdYae7SVvMPuEYVWcGdKq57Z+id/gEbtjji
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz0srxGEYhvHHwplSrJUcViMrCmUxjezlsFSKxeTwARy+gYUJUSa7mWwx
ko3Dwg4LCUUsbbAe598srq77uZ/3/74zLZPzw3NlEZHGbFXEam3EUV1Ehrtq
IvLyTH1Ejo8bI171m+YtZKoj2vS9+lZeN7dzB7JyTt8pJ7Bj3nffhXzAOfO0
/aGcdGeBd3UnJZtPOWG/p+vzTcp7vfxud6ZL2vU5cy6v+N3N5h75Etf6K1zL
g/p7+QGP5n406AbMz/Kt+9bML/KP/Isb7/xxUZf37pP9nK5CnuUJ3xZxK39y
Oead+eYRZ764EmPyOLrtRnkRC0jZLfGdfpmn0KR78eaG7s29H6X/iiF9lgvY
RtrZf2q9QdU=
        "]], Line3DBox[CompressedData["
1:eJwV0DsvRFEUhuGlc638Aq1bJMxQEjIu02kkKpQKgyHuRCGh9gMo1QyNQhTi
UggJ45aMGEqFWhSeU7x51/q+nXN2dsNEbniqIiImMVUZ0VgTsYsmtFVHtPBB
bcRpfUSzeUjWwaeyFLfbO3kLm86kOSvb4zNn9jlln66LGNHPcA6Xuivc4Bpp
Z0r6ed0c8ihURXTLunQn5m33a+JWWQtf4E43ab/nW/sjP+De3C9/Nb8l37a/
86CsxGV7H76RlWV43/d/k3/qR2V/5qK7PeEFz+jRFXWL7reEBXzIy/jCue6T
e5074mX9IY8lb+AtjrGTvANnZHku6Gd53L7CG/of2ap5QLbOJ/a1pMM/wEZA
wA==
        "]], Line3DBox[CompressedData["
1:eJwVz7srhQEYx/HnbM457pfhGHDqjIyYFRFnOmJwWRik5JJiM2CQhfI3EGWT
UBxhEqVYzBbFhFwy+Ri+fd/n93ue9+3Njs0UphMRMYX5kohMaUQ9ntMRu2UR
K1jFMh5rIn50X/jFlfmbK3RVqEYlnuRnfIoiWu1scxvv8H4y4txOh+eTVESn
bx1zF1/wJVr0ec7ZvZN3u92T9fC17FZ3gzXdsrzA/f/I+uz04sG8pRvwPIgR
3bBsCEvyEX6RveLNO8ft5OVj/Gme5Tkk9PfyD37HhLvAARJIyw71i3ZH/dMC
l8uSuhTadRlz6f8uZlCLI6zr6jir33Q36X6Dc+ZBXYOuiEY0y7LchBX8Abky
OFM=
        "]], Line3DBox[CompressedData["
1:eJwV0EkrxnEUxfFrKONjowyxwd60wcbSUJREbB7KtCEiFNk+huRNGDaIkoWS
KCIlb8ArUCzMW5//4tu5/3POvf371YzN9c9mRcQCFvMjqoojqnFfFLGeitgp
jcjQV98pWoJiPPDzCiIe+Y36u7x97CXwW+izTittkJ8URrSZm8zNeLf3Ij/i
HWMTG/jgf+JZ50b+Zb50785+O++WLuudmK/kp/RJ3q3XhS0MYE02mMz6nfod
6NE95A/RYaRlIzppXpqO4o33jm83J3V6ZRN0Ct/8M50fmoM/9MmneL/mXIzZ
S9F5fg4/GzPJ2+Ecm/wSWqWz7ua4/8rQDZTxL7CtU07rdCrpCiqwilosya+T
HPU6+3ank3enB/gHFjI8xg==
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3ldP5lcFfoCiz0WYxEIPCIsMt1NWZ0N2kLhRSbuFKDC4/
MhwLhVKKDAaDgZKUQVFsRnl8h2evz72e78/7vt9ve3Z6OJ+KiDzSmYi/+ojP
5ogy6rDTFjHXEHHGfaGpJaIRt/qc/lj3gQldwXxrY8Qpl26KeE12yEP+Hc/O
3dyTLJtfR1X/himzJ9yk/LX3x54H52+5zb9gia+5+8WPyVFU9IvJTlkyO4Ih
9wZxpC/rH5HyX4PcgDvj+n65qn9AUX9p54Gul9uXC/p79DkX+Bpf5C6c93Tn
cp6/Q5e+mnyLZA5F3Q16zM1yeV2Fr/i9hU3M8NfJd+M7PduUmTUzVbnB78pc
8k78lezQZXUlMyvJs2MZGe/5D6BVQmE=
        "]], Line3DBox[CompressedData["
1:eJwVzz9LglEYhvGnJdSKAj9A2By0S+BSjUFBX8A5cmwJoi1B3SQyEBqChrYI
sgiMoj9LWNEQ5PCGi4OErS39HC7u576e9xzekyuW1rfGImIDN6mIH1xNRfxO
RgzRxCGO0MpGNEbpmwG+JyISVLkDu4o85/touSPhspmIM72HNf2SH+dO9ASr
3F864tjcxYI+0JfR0D9R5PadSbiu/MImV7f7wK7esXuXK/ybrPGvuOeXuHlZ
1l9Q0C/0PfMzrv3T4sjJU36He0Cea+rb5jvU9CfvfcSct+ZQ4tuo2N3ybczw
05h13z/tYDme
        "]], Line3DBox[CompressedData["
1:eJwV0L0rxXEUx/Fj8zjJaPAP4JaBbmITi5LhyiLLHbgYKAN1SYrFJmXxUAZl
ciOSUkp5SN3hqkvyEMogZSavO7z7nHPe5/v9ffs1DI/3jZVFxChOyyO+cVgd
sV4Z0Y25qogffVZmayOO+S+kayLW+HpMcf3cgZxEjv/ErHMzqLNT5N/VH3jD
Hv+GAfek0MeX27vnHlDEDv+CXu6vIuIXW/pHNJt16dfVPeqiXHL+1exZPiFj
vmpeQFaf5+5kASPcinkeSX1K38gv629L/0D9ZJbztn3Mm12iU92Bdm7XzrV3
3uAKs/wFEnwzknY2Sm/2T7axiWn+HEPcoj7j2y1oU5+4o1VO8IP8mcy4J80n
0MQd2WmUC/gHibZEyg==
        "]], Line3DBox[CompressedData["
1:eJwNzDsvAwAUxfGLpfWIweiRSNRMSDSRIKYOHomhCYNBJVIRFW1CUmNrZPAY
SBgQUgyNxcDoK/gCZWKxGQx+w8n/3nPOvf0rhYXNpojIUyUZcdEakWqL+ElE
VO05+6B9FdNdERv8M3uyPeLP3It5WR9eydfN5/IaDmHCj3HckRV4W1R2d83r
lI24u5UV+aPmEt7IXnAKu3XW5NMdEWPyNO27n8SU7E42ZS7r79G9mypvBl/l
c7xmty105O5BNq//LsvKKlSlDP/RTcM8IcvoL+ot0bns0u0sf1k+bD/AnP4h
1vEX87pZnRI+6WxjkWpuc/w3XsLfYzqhOv8Uk9RD3/ZnGtDb1W/4+0FHfnzi
F/4DBS02lA==
        "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/GPIs65UhZdSQiDv0EyCp0sN1AiDO4iytUNjHfCodykKIPJ
r+4GxaCE0cAiJRYDZbKYlMcNr57vz+v1en8+32/b1MLofFUIIU25SAiFaAg/
dSFEG0KYqQ8hhodNIcyat2RH2I1/Otv6KecJeRozvH1Zq52IbI8W+ZPyHt6S
+UBewl5slPdjVr7My5szeKd7W+nHvKdzY35wd57u5XH9Lv6w/orzKp2YE9Qi
u5YleNX2a6ho75Q/4p5nWVKWq7xHZ3Y+sI8/oDumc647jiXnHfqVXeAcr1z5
V0zRIw3yh+jJXMCk7ia+6K3jBh17fxfbebXYTJ+8MnVU7rPz6jveaFr2jl/u
i2OnfM2c1SniJe+Kvs3/GSI8fQ==
        "]], Line3DBox[CompressedData["
1:eJwV0D8oxGEcx/GvzfkzSDIonOUcJpTlZDJabpRBBsngMgjLcVgwoA7LYaAU
JQNRZzJIGTEZlMwsjMrrhnef53l/P8/z/PolJ3LZmaqImMZGIqJYG7EuN9Fe
H5HESWPEbHXEHtdhn0IaT3ynXDTrlj2o0+mqdMx6ZT/6kNe5qYkYcn+TzjnS
OvPcAlbNz8za+TX+VmbqIgZx6fwWWvgH/kfvWX8bbdwA94yCe1awz8/wH9YZ
/hNvXANXkl/233i3PuCO5Yt3St7I8s3ykd92fsR6R57q/Mmc3phOwrpPpyin
fM+uvNCZMx91ZlLnynyYz3PLWMK1TkGO67xW/qteq86B/REOUda5N/vRS5l1
ouyNO/xy/8qnOl8=
        "]], Line3DBox[CompressedData["
1:eJwV0DsoxXEYxvGXybVcSqkzOCm3xYIsJpRJLpNBroNS1BnYKJncCuWWMzil
znbOJIoSNtmU0SZlYJFMfM7w9Pye5/v+3v+vf3J6cWShKCLmaas0oroiooZ+
SiLuyiPuqVbO1EY8OKf02bKIxsqIYvOtWDOd4y38l27pDMtQp7knrIuvulun
+7CnTfcor9OnXC8nsSv6cz/Mb2LfWAJr1/frerE+2sUa9N36Z3qRjyip65HH
vHGDZuRNnsYm3BvAJvmWborn8W3nvO98FTo+WngD7cmz+Kxu3zlrx5A3DNM4
Psg78Dd9jt7ty+ledXXmd5wPCjv5Ib8wU2XXmrlLMyk7luRjbM7MCb82k9A1
4ct8pfCP9ae0Jqf5Df8HUuY6gg==
        "]], Line3DBox[CompressedData["
1:eJwVzr0vg3EUxfFr8NIXTbQJ8ZYweNkkNjRC7DSmGkQiJF3UKvoXmDBgkbCz
sBjbGIhJBwNpjPwDLBZ8nuHke+459/6eZ3Rzd7XaFhEVGktHDGYiTrMRtVTE
Ce7jZSGig2+nqvndzg7eyWvJDuWT2+6IDdrW9eMWPtkZ4Ftu6rgma2AZ29wF
HZj77K0kb/LL2Isvbn6ooFuUrdtdwA/famFZl9O9JV72ikfmprzBl2R1rMlK
shnzI03Kls0TWNE9yG74Jd8cxnvfGcJn3axsjm4pL2vKinwPP5Xkbs/5a5z3
5p4+Yy7yaZzGK90xP+LdlH7c3V+Xf5X94meyq+vUnem+ZVnzF+bwwv2hnX+R
hDO1
        "]], Line3DBox[CompressedData["
1:eJwVzr0rxWEYxvEbCwehY+TIIodS3gZEOWdQJi8bZVCUlOMPYPa2EKJILHRM
ZHYWKQODhVLinyBh8DFcfa/ne9/P8/s1TufGFooiYl6aEhF7FRH7slwWUV8Z
sYQbzutSZ15VHjHLL/JrXA6PkhElerFcSo29jIzz1fjOvcmk3V3uxRsT+jP+
yqh+yH/hiPxwT/IttXyWG/bNDE555xWr+F58kR7Zcn60362P+mYXPmCWv9EH
3WvBDKZxju/T7+xcORdwyP0G/UJazVOY5a7NzvR+/zAgtfqjecH9pH7O5eXW
uQ13uHvzA9yWBa7TOx3/70jCLG+3yKydD0zZOTVb1WfMT/S02WdpxAr3gc3O
x/wm/gEB7Db4
        "]], Line3DBox[CompressedData["
1:eJwV0b8vQ2EYxfFHiFarEqrRTbARwm41sIhiQZAuhCBRe/kHGLFhM2jMTdjE
j4iJjRGJGFiEzafDyfc85zzve+/N7SpuFNbrImKV+lIRx80RJ7TdFNFrLuNx
JuI5G3GECd0ubck79SUs6Yq61nREXpbAdVrWreESbtpZ4RspZWfW/hwt6B51
4/w8X8EzevGMvHxaFvan8Bu/8B1zujF+0X2j+CZ7x0nn2nRv/IzsFQuyimwC
b8xPdE2XsnPZsL1bGpKNmAfxUPfj7gf6oh5ZlbppT3df+1b+gP/kO/is977j
Pygjb5ENuC+D/bXv8owD/hTT+l5dg3mf6unCfOVs2W5S/5f0H/hf3MGcvp2q
9A8VIje4
        "]], Line3DBox[CompressedData["
1:eJwVzz0vg2EYxfGbhBS1KEoTCWK1kDBhkwiLB0NjoYmBJhiQLgYvq4GEoQZi
RH0Co6mNSPgSrZGBeCm/DifnXP9zXXeepy+zEa3XhRCyNNgcwkU8hP2mEC75
Hj/mPS0hLCRC6Ncn5Bzt6HrN23xL14alzAf2D2kNT5pHdKtyDovZiWN/lJWX
8c1aLy/JK7yqq6eoNYQ5esdf7Dy5f5MndBXqxGbMGTfTvIy98l08jVXkRazM
592e4M/4lFzCIl2Rz2Jp3VhtpmFs0s4Qz+Of+g+6Mz/ycawgF+zc0Kiba35L
KfxeX7LXLXf4/nb60T3gVf5Nv5TH41ijvXO5gQ/wpO5ILuquvN1Vu4n5X/7F
T719Rv93sTqj
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
/2TSH6VY/xeGtN+OtF9cyfv9wfbZQ/aBq2wfMXuCyJ5ehja7lxu/0lWOGdbz
2spGuDut+XQ/vQz4Psj0YGVbqG5P9LX5mdYAY8pyfptpZ8Me4b0N1xXdYyW+
v4tTjRL91KN1rwj2+fS704479LP0niuXwOoAqZvhnrG6+is7H1ozswYOqe2o
3HS3DOIs3TBudZJu0eatZvPSy2HaoUmXM4yqYb9VbUKXdWm6Nj2V5H5MyIVV
nfYKbm9pgA7CfzJ06W90KP1thr0834nm43KeH8PyS0k+TmL5K1mf2aQPHmB9
zP7WH6VZ/91/7xcH8X6/sn16kX1wFNtHzJ4osudesj/4sT+fY/ufofMCNfbn
LD6vXBPh+eLon+TPZny+vfcL/QHd2J8/7id/KCD/wQT25yXsPwnkbyjP/izN
/hZN/onu7M+72D8XkD/jO/ZnPfbnKJ7vw/4smv+O5Q8S8+esv/XBpayPBOt/
gP35C+tvxvuNbSV/Fu33EttnNPtzCttHzJ4gsqcLxROYwPG57D3Fk00UfyCI
4/NTjj9fKV7BZ47PoRyv1lN8g/84Pq/g+FYhIYyHsI3jczXHw28UP3Esx+c3
HD853uJajs+/ON5+pfiMPTg+Z3F8TuH5uzg+t/H8QpY/jOOzKP53oPgM7hyf
C1kfkf7BHJ+XsP5feL9fOT6/4f1u/Ns+8ILtI2ZPENnTkfIjBjHecOL8mEv5
FDMZb2zjfOp5j/LuOfqLHf7GGzCT8YYb52tbyu9wkvHGZc7vXxKFeABasglv
aP2NN/CIGN7I4Htrx3hDhe+vIs/3YLyxneePIbwBoxlvKLH8PazPOcYbZ1kf
E9Z/NuONE6y/Eu93KP+V4f3ms30Yj6EF20fMniiyZz3hPdjO+Fmf8d4Bwof4
kfHzTcaHXwlPIuNJSGI8OY7wJ9YqEH6WzfsLP4MN4+e5jFd9Cd9CJONnbca3
/Qk/Yx/Gz81/42csYvxsxPi5lfAzStB87Mn4+TrLj2f8PITl27M+Oxk/m7M+
Lqy/EuPn74yfv/B+Wxk/f+D92rF96hk/h7F9xOwJInveIv4CY5gPNiUQf1lJ
fAeY76Aj850S4keov4H4IDA/siM+hdrMB92ZT7UQHwS5FcQHQ5h/PSW+BjeZ
D/ZmvraB+CAqSxMf3Mn8zoD4ID5mPjic+aAt8UE07kl88PDffBAeMR/sxfKN
WZ9bzAeLWB971n8S80EX1j+Q9ytJ+8VdvF+RfS4yH9wj4st/2xNE9rQiPo4/
uL4hxXzcYKeQv2PMTKpvPPm7vgHM93EI8/1BVB/AAVzfsOf6gC3VE3Av1zf8
/q5vQB3XNzpy/eEL1TdgOdc3tvxd38BWrm9Ycn1Dg+obcIbrG6N5vjrL/8z1
jZ4s3571Ocj1DU/Wpx/r35frG9dYfyXerxrXNwbxfh2o/oOGVP9BUf1HzJ4o
sifXl+Af9Tr8R70O/lGvg3/U6/Af9Tr4R70O/lGvw3/U6+Af9Tr4R70O/1Gv
g3/U6+Af9Tr8R70OxOt1kb/Pn/lcWwv6l06pnRteAr/81Uco5MbCtqB97g33
E9Fx5bEerweHYVNa8vGblY3we1e2kl92PZoe6aM3sCUbgz8prHIUfABdqeHe
VrsboNF9ZaKJZDqohJU/tFyUAmlqXwYnTK2G+WmzXvpbvoOPJ97/kB1aDlJD
afwojWMgj09hOR9JDuqwnF+8rjmtC1d43cWBpKflCqGeMCCd9Izgfc2kfaHk
A9pXN6uDKUcnxeEZ5S4mJwURaOyo4XykVxNIf103/Gl8LWaumWY4uV8Jdvy9
I136/gd4LLW1OUW6EhaZ+noP88+EPR5P+z1wLocnxfN8fn+uh1vN72NkBmfB
sLFKWmdKkuGXin/Nm6N1OKzI48TPTkkoNzg9tLZ7IbzQ8psUMbYRFfSjlF0i
onC/9mfrt+lp0MjzlWg+GPL8pyz/HsnHgSzfi/WZQPrgNdZHbw3ty1hJuC/Y
xfuKVNwsm2NVhWa3w+e8mVWOuskdMn+at99ra78tDl3LoC1/SFJydT6stzz0
Qu1aBTj7rFnge6QW3g/MXfU6qRiOrpy3Y9TpFGi5ImuzrTQDDuxYXvD7YBRY
DjMfuS2vAXrobmrrvqUWr8WZXcpUiUFpXUHGvbkCkOfxYBqHlmk0ftWX5Aza
KZSD01iOJetTTPrgEdYngvU3J/1Bh/WPn5xQOnhiOdzR/HRnl1sl4KTRT2RT
MmB9eF7I0QmV0Dm6W8qN5nJIlrhwdMXEdHjbcqqzw94UsLDfcC/Puj1eD846
aTOrEZpkH0sON6vBwwvSM9ZaFeGAGzO/RPyXA5EvDjmfHF+HNfvUhl41y8ag
tDDFJYtywPihU5iv+gvMHazy7VvKRZR79cxZu6AJjAJo/LOScBz68LhITjPJ
gXssp47XPUrrggqv2+Eb6RlNeuJE1lO0ry60L4zjfcX9bQeMYTsELj3abbBT
FuwP6zf7l4cA5vQYEKnSzh/trL0OONwpxkLLgzompeUYNdEtasWaUhjzbb3n
eflK9E3+JunuVYrzo3xmfvLPhxGDbPfs2VOMc2SK2v9JwxO3p583mFILVqPj
J/x2LoVx3991SfeLh6Kar0NHQA2Y8fhwGscaHjdkOWtIDhxgOaJ1b9K6MIvX
3cp65pKekMR6RvO+TtG+UJP39eG91oD4iExcoHi/5tW8elz06H62klcGOPWt
/DqpORsVBPNXdl9Si8tnXjdWXZsP48c+n2LqnIWWLWpVa6EcN9SeVFnRvxIW
m/npPC3zQ5seRvOsch7hpMi8b/81NEH8598dzSuyIYL/WtuPkS0eXQdTVnzc
bVVYCUcd1Vc+M4yEof5mOmtrK2Ayj1+lcRSNv+b//wX9xW0sR8Wc1vXqKVwX
JvC6k1nPdaQnrGI9D/C+FGlfsJj3Zbd8NybPTYQZnXyS879WQLe3F18Mka8E
OS2LwLPyaaA4OrXadH4JPHnRFLBaohZKN8fv0mjHfyZywxd/0I8DvY6Pjp87
3QACHt9N46jL4/1ZzhCSg0EsZwevO4vWxS68rgGN4xzWpyuP/9IUykFV1uc5
ywmnddGc9ZnF6yKP27M++jz+neUMZ31E+5rJ685lfSR4XRuyGwxkf7Bju8mQ
nWEe+4Mz29nQVHgu4NeN/GEan0sWn18en+dqPkcdOnf0YH/Q4HPX5vFb7A+i
8TiWk8F/17McuYW0bowU+cMUXrc/67mA/WE/67mV98V+Dtt5X+F0L2Ah3QtY
zvdiId0jnMTx4Tjfo+N07+ATxwc/vncj6J7CdY4PK/metioI7zVocnzw5Xu9
keIAzuD4kMtxYAWPT+H4UMbjgyg+wHyOD6dYjjqve4vjgxmve4j1bOD48B/r
uYX3ZcTxwUEUHyhO4kPOF/c5Tq6huIocV6GA42ofyhe4zI7yhc3f+QLcOV/0
5LgdRnEe6jhfvOE4b/FAmBegchDlCwXOC9qPaDxbkfKFLI+L5HzifPH473wB
xzlfyPK6i1jPCNITV7Geq3lfkpwvMnlfsWyHB5wvgtkOYZRnQYQT5nGevUR5
GScVEE7Q5Ly8l/AASjEe2M95vAvlfbjKeECe8UBfHn/MeKAjjysRHkB/koPL
WM4BwiGYRDgEXRmHHGF95EkfNGV9RPovYpwwg/UPWS/ERbBPlfCePOOiJMJR
uIdxnSHjqGDCXXiHcZ0O464OqkKcBmMY13VhnPaKcB2MIFwHtozrPhGug+GM
6ybzfJF8f8Z1ItwYyPosYVwnwpm9CJdCDuFS6My4tJZwLExQIbynK8J7hHvx
H3ge/oHn4R94Hv+B5/EfeB7/gefxH3ge/oHn4R94HsXxfFs/i10vLCtgT8az
F+lJ2fA1rOqS3e1y0GgdNi54Vh0Url/SsEKnCNouSmxolEgEh33Xs43610KF
9eknFz+XQGi4XPzovknwfdOpJyV65XBm4/eL50fkgcLHg2N29KqADlvX9g7t
WQ8dTCJGbbbNg133Nn3K9UmGi44uw3WW1WP/iZ2PDdLIw+XnzvVTHJ8AygG5
b9uU6tBj186tRpmFuHHT8J5P9VJgWVBb/MxFDSi92Cl24Y0srJkasPZI11g4
otTX+m5QPhoMX6X7ZXc0jjtSt7x1Qz3IVHwofxZZg+omrta649rzw8ibLjP7
FMEXi4aL59JrYWTKF/WT8ilw6kKv+R++FIF51tE7y1QboaZ629yOj1Ogecan
DUcNP0B8p+wR0hHt/Nfo5Zmqw3FQ3Hm3o09iOkSFNtX4/2zEm6V6S+tGROCV
hc2ZWyQ/QM8D79dZqBaipPDvW1zu9djPZmY9BFkrfJVUbUJ9I6cVKzuFo4nm
XHeF77Fg5+4ZmvW6AfopaieZfrkLCw8q9h7lmg3XdUttFxxpgGaJ9yabp90B
/y0J1TPv5sBWnj+a5qMTz49hfR6SPnCB9fmP151H64IZrzt1atlG+Q6NKLX1
sKOd+jv4srrm4lmzdEjh/Z6j/eIb3q+KE+1LTfj3LVzkfeWyPZXInljP9jRV
pnMR0LnAl8N0Lkv5HPvQOUITn6Min9cEOi+4xufVkf2nM/kPLmL/CWO/HU1+
i/OR/FbMD1HkhzfD411j02tQ9lCO7fOqEnT9nFBiXJwCi5ZvPdF/TzV6hMwb
Ktu3DHcPTlhndysZWp/vnJ5iXw3XQt5cwcBSsFx/5JaMeyq8+5w4tqquBrVV
n4SNnFuAMZ62b98/auc1j9ebzN1fjVndjB1k1dvv1/bMB0tv5ELOT0/Xr+vr
wUj+mPandzlw7VeIoopMCkge04+a+qMWxiYpFt5VLYS56a/tJFalgdK8U8U3
faqhW6PWrL1yKTCo2MnvaFYpfFhz+hIOqoNzmUMPr4/JArNJ02XMZuZCD5Mu
FyYZNeKqlQ1HNXfFY/wH9csJd5PBVblKvqhDAy7e2rSxZkk6rt173G9pVRrU
ho8LsWzPD6tO5R172ushWEwtteqYmgVf5yrkmMk24IqWmkW3mqNxq4VB9VHP
HKjg+QdpPtrxfI7bOJzj9jaO2z9YjjXJgYUsZxrvS5n2hU1FtK9k3pcv7Qt1
eF9i9keR/WUnGWlnWFSg/bnbng6yAnzYKWVLybUSmOo3vf5MSCqqFR8fOHV2
KhZd6LLumEsDNPmFr7wVW4lXtBUS42ZV4Btt3+d7uydCWvBU18aNNVDyIbXT
jcYS6Heo5avuhHTwK0w4cfROFdzpXCNvfqQMZp0N3XplQxo4jFKS+7OqFvD8
sZYGpQLY8FbPdGdtFsyWnG+Ycr4a0g4O1b53sQROZO9VvSuVA8d7dtORmFeL
KVk2kVskM/HQ/pshHfMK4USFzRtBYCV2+PhBYkxKNtqu1zMeNbYMDiw79iNl
cwOevlUeE7o6GSv/yCk+jEiHYdPtukbdaID6305nll8OgvP3vveaXJINJZW3
fwd0L8NREwMMJ6hF4NnUmtYPK2tgCM+XaxPOx7s8/3jJ79yj0SXg32dRSGBp
MNp+VHVN06gDySqSs5TkgC3LOcr+s4L8Bzay/zjzvpJoX3CL9zWIz+UAnQv4
8rmI2R9E9r/L5+VJ5wXI56XvHtRjw74KMAmrmrRDthJSD+q2ta1MhXmNO6fr
BpeC+uBRZknG1SA/eqmZy7I02PPjeacJjiWwZJT9xNyYMlC8tHSwd+cyCHbf
7LogqALURx3aPfNCKXjNqjq8tbAAFMbG9F9tWAzD7t0IezpBANtqw5X2tVbA
+IT9in38yrE8qc14xYIC1Fo5953xpzKIm1ubPU27HIeFDZqWl1yBSQVDYoKC
2/nnzGDzM8nVWFW39d7Kzqno+l514J/FpTBFz3LjrCnVqC38m4O2X5d1t+4h
gPUKjkFWDfVw69GW7B+ZT+HsUOmrh2ryILzLd9cC7Rx4mL7KJlPqLewcISUZ
sqkB1vL8UJqPvjw/WDmu174V1WB9+ejntU/C8bpTn31JS8shgvX5QvqALesT
wnYYQ3bAfWyH97wvddoXpPC+xrJ9tMk+aMH2EbMziuy8Zm+E9OtXcXhIfrnG
K7c0dH2m3vPmpwaY8Fbjwk2LPLxv1Gl0S3ANrne+4xfhnQ+jT1v+aTxVCCNl
1pudTKsGHYfdP3M98sFIzaZ8wsVSbIw6sq+XaSX2zQytuFWaB28zlDctGlCM
RgV7rK/frcGHHm2LChdlQU6Xtotlq9vv/+LfucZ7qvD0cM28nfp5MD99Iijb
VKD8o+0RQ3KL0FylcrLXgFLQ8ah7d2NfCa4PKTxjZyRA4zGbPCYYV0CnNym5
902ewK/3Y501vW9Brk2tz7jKJnij4jior2kguFzyPb/g513IGbTVuENdE1wf
/KbcdUY7LhrnsNRe4zUMniVo2rGnBK7xeEdN4Tgq8fjcnxcUlTOrIaqgVDMr
6z0O9ixYaj2vDCRe07rStC4W8rpGrP8Q0h8MWX9NtrMl2RlOsp3F7Ikie4rq
OabMW82ZtyqUv9sQ/DkLn/RZUpxxog7HDPJZEqKSDX/muZ2aA29grsXm5LIz
tdCWiwdqjwpA78PEcYs8MvDI4Kf5eWH1WBxk9Lm8nQfps39PY3/fzn5elLcj
PmNKOGSHdDZJi6mF5YoS9+b0EsA017GDrDKSUT0lTPaZQy5aBb+TX96OH3Ji
161osm3H/V+L6rz0a8HT+1nCjtsCkILDaRL94iDhkM6FtAFJoLtN/5D03kZQ
XGoy6Myj9/B6Rl+XE3nV0OrseiB8dhkYwNbExp5lUGZkHGVWkAWWSgo5DV2r
YJNLf7+VI3Lg6DrT17OVSkE6KkYixbYKTks51SZuqIITyncONhu+CZ02cKHW
6cx2P/+0dvKscaVwp6nXw4VpMfDC+GiNQ2QNzGL5tSQfV7P83Tw/kubjc54/
9Wto7/E9i6Gs90jpdR/zUer+gjMPpldDwXTa13XaFwLvay3r6UJ6okhPc7ab
LtkNVrLdFNgOoWQH/MF2mMXnAnQusInPJZvtvIfsjCI7i/zhKfkDjGB/KPz7
HFF0jmL+ACJ/aGP/mUf+g3/YfwIr1iz4Vf4SSg7udr2tVgtn+i4a1aBVChpG
s70XmqWAa7iS3PvzZRB0slO39V+rwEm5ts0gNh1kTj1pU32bDR7rDcryu9SD
53xT58y0FN1az2IsXSCAx/by2k21tbDi9u1aj2OZYBBq2/oiMzJUqlXxGw5p
hANdx2mu8EzXjR2/Znhuajy09pBfMMKwCfaxfEWSj24s34nnN9B8/M7zh7Oe
7qQnBrCep1ifZtIHA1mfbqOVc33mxcOZ+xNkXt+vQi3VeZEGx8rF7YAiO1SS
3dCS710h201Ud+L7ixZ8f2+QHPzN9tzEcuLpvLCC791sPq/Vyx0fJ+U8hTdL
Prg+XJOC/Q4N88/PbIS35A/oxPfOhf3B72xAcdDicLwb/XV7Q48s6CQbfGRG
VAO0LhH6G0bwvfvK/lYxSrhfPE/7BU3eb++l8mXuqqmoqb7nv6RfAjAt8L50
t3sN9CF7ItsTHrM9V5L/4wm+p93Z/1fReWF/9ofTfF4z6T5ivdh9n0z+gIbs
DzLsD1vonmIA32vke2rB8tXYH06y/M08P47vdRjPl2b9T7I/BLL+y1j/k3x/
Rfq3sN0i+Z5+ZrtJsX3GkH3QjO0TyudykO+p6Fx8+Fx86FxQks8l9u9zxzl8
7o587hl07iDN5172t7+hyN92OT29XjsyFi59eGMx/UwVLHFW8rKLL4deFB8g
mPPFNI4PEym/wxPO71M5v+tQfABXzhdFHB9GU1wCbc4XzhyXYl2E8Q3ykikv
OHJ8W0HxH6c7U/wfx3HyZ+KC86dWVeC4Hj0Kswakwofp4zbH6FXCMYrneI7j
+UyO59PZTz5x3F7DfiI14/ak87+K8b/LJj8KLuSiru0G88kXqmEMrytD6+J4
XneiqhAP4EfCAyjCA8WsfxPpD3asvzrhDVhHeAOWMd4Q2WEix2cntkM04TEY
xXgsgfFYT7a/KD5PZvs/IVwECwkXwX3GRWL2B5H9Nfm8HtN5gT6f15V9QlwB
mwcSfjNhXCFLuAJVGKfZMq7IHiPEh9iF8fMNxofvWP+RjJPjWX+NNkGMg3w5
rGgrPyQxoBQfV833cVYSwHTCOdCXcdpaxjlFhMcwK5bwWDbjoquEr7CccZcy
46srPN6NcdcQHjcg3NWuB+EuRcZdAsJdWM24K5/l3yIcjr6Ew3Ef43B91lOZ
8dgy1lN0fnp8nvZ8jvMIx0IL4ViQYBw7lO2wnOwAr0R2YPurk/3Bku1fw3bu
wzj8NNtZ7FxQdC6ziR/hSOJHqML8yOq2kGfBoiLixYoXiWedIjyPe5k3lV8k
PH+P+AKqMW96yXzhP+IXUM58x4v5xTriKXiPeY0P85QU4qegwvz0GvNK5jUY
zrzmBs9/RrwGdzCvucK8hnkWNDOvOczrtrB8I+atzix/KvE4aCEeB8OYx7kS
74bOxLvBkXm3P++XeSLe5/3OIF6PmcTr8Szzej3ip2hO/BSTmZ/eoroBPqC6
Aepz3UDMziiycwKfy1s6F2hj/tuBeDRYc30jk3l0I/FouMp1jGfMo12Ip8My
rvOsZp4eTXUVPMv1oi1cV+F6An7ieoIP1wf4+wpQ4u8rDnM9R4XnK4jVEy5Q
PQFfcT1hK9cTuG4Aq7husIH1+U51IdjCdaHlXBdyoXoCZHI9wZvrCX7Ky464
tdRDQnHi4edrU6HTyR9zl3zMgD1Uh8EYqsPgRq7DxPN+r3AdyYj3m0J1Hiyj
Og/24TpPF6q/oQ7V33A+1996sv33cB3jJdt/HtX3IJvqeyDP9T2xcwHRuZhR
XRFOUF0RtnBdsYXqWiiqKzpwXasT1T9BkevVPUdR/VOG6mbYkeuBY7keaE11
ZtjIdWbgeizX93CNWH2P63h4mOt49jwePHy/rE1xLridHfFp1/l7EPvxzuQe
ug0gRXVF2Ex1RUjjuuJY1mcg1/E6sT6HqD4MLlwfdmZ9sqj+iaZU/8TrXP+M
pjoqTKY6KrzjOmpvtsMorgNncR34BtVvQY7qt+DG9VtF6hfAKeoXwCbuF4jZ
GUV2tqf+BVZT/wLDuH/BfRAU74NwPRn/0ddA8b4G9yNAvB/B/QsQ719wPwLF
+xHcXwDx/gL3I1C8H8F9BBTvI3DfAcT7DtxfwH/0F/Af/QUQ7y+cYTkSXYRy
sIzlcH8BxPsL3I8A8X6EGfVfsJ76Lyjg/gv3I1C8H8H9BRDvL3A/AsX7ET7U
bwI56jfBZu43cT8CxPsR3P/CUup/YS33v7gfgeL9CDE/+V/fgfsUKN6nmMH9
FwmyD2axfaT7qkn30qzHn4K8oHcpz1Aj/VfjqpxCkZ1B3M6qPF++VDgfCtJo
/j2Kn/ie4id+O0Hx8+sw4X3HxDPC+46f+L6XURzAQI4DoTz+juvGhRTnwYjj
/BDCM2jKuC6G8QxyfXIT5XE4zXlckecbM/5J4vnGXB97QTgNBjBO0+L64V3G
q9sYrz4gnoKviafgaOYpy1cI+Q46LSWe23KQ+M4y4k0wivnsYOZNPYh/wWDm
p6uZf/UjXgDXiReAHvOCNuIdoEO8A2OZd3RhOQOZx61lOSa87hDma0q8rgPr
eYH0hE+sZwDvC5l/DeN9bWNedo73a8HjY6i+hKVUXwJpri+J1QdQVB9Ipnop
BFC9FC5wvdSIcXKYmP0jGY/Z8Dme4HM89Xe+xl2crzMYDzSxn8xiP/nEed+C
+0q2nPedqN8B16jfARXc70gi/4Qg9s9W9kO+L/CP+wLi94XvBYjfi8mvOz5d
l9UAIVYdV4UU3QfdPcojTJuyQIvH02kc1/I4FuapBsc2gMtn+/nPLgZA+Td3
ueB2/vWGx+/TOP7g8cNcz9/KPOIQ84h5f9e3YSDzgtBgp4dhoW+hSFl3076o
Whj5fPL0p0MFMOBk1YT80Ag4sTA/ZZ5vLShaGp32nCSAOtUBSQ82x0AnL4Xo
D49r4CoaZ/w2LQVprjt5ch1mPNdhqnl+Z5qPV3i+7N/yUST/1d/6oEgfXxrH
ZtazD4//OSGUgz6spzTLSaB1UYr19OZ1BVwv8uH62FjWM5bnd2c9z/H8X3/L
x14s/xLr08R6ivQx+pt/4e8MsnMN87sy7rNY87nw+eIxPt8KPsfXPB7I5/uT
x9l/8Pn/338wk/1nDY9HPN7nGPiiFuxS/juQ1LUEsq/VL0senQh9/b7P6hZe
h4/yc80Lv+fjNJO5ffueSoLFI/tmnrlehXMujtv0Z046zp5q/qrMrAyUKzL6
d7Kqw9bdC+xi77/HY7OTh877VAQ2eaO7Op8sgRLXTv6Gvf3Q6e2aMfaWdWB5
ylZrqEYNnmi5EpLyXYDNubuO2x1Igf80Rkv/WVaDnbQ37720pQgXfTq7c4tH
DjwJs9o2/XkdHDPKlztdlwf2yyIv7jJJhQt+9022h9TCjFVh+tOy2/Pu2YBh
VUMK4ZnfV5dDFe04fMSX4iFvw9DbFPp8a8dlpUZnbva7UAObH88Z7XQyGN8m
TFoYIVcGO8JiGhanCvDXDP8nm3cX488xsWvjd1RAtYyG1i7Papib6KS5SqcU
fhalvwr5mAavhp47q9YuR39N0H8jnxXB77cLhigpZ8OY21EB79txnc/K49cV
bLMwUiHLc9JCAejo/DoqoReDn38tHhL/8xpOXdW8ovREEyx1Uz3lqVOJCbrb
rOVHVIDc+nLr3QZpUCeptbDTtjIYuD1EWjqtFOQ62h/6NUgAeQsWfGlaUY73
Lg/vdampGAfI5+Svbce3fxbu0iovqMYoNX+XiPsZ2NbJ+PF3IwG8s2vcMnx2
NpbJT342pk8YjJM9tuzauQYYePp9zLDoG+A/o+js7HxfNL7kpyH5ownk7FYI
Hl3Lxd4T7StfLa/AOgnLXmaDysHVtKrv+JlluD1RMSH7cQlOqQLf2RZlkDb+
iSDD5BZYgq79n+jzMGdN/9Bb7XLM9Wa49d32Cr93bthrWfIOfHP7n/lq3gS2
hYt72k1KQ1Vj575jF9XhbKUfp/aU5oPm4hOvb9ekYM+tOnOXmVbgl22XZnZf
VAm/Dpstvqz5AHPe1KufC36FN1uPKDxMaIKDFdOuV09MAZ1dlqVbjXJh3DWD
lBH69aCq9fp2mlQYtH3vNTq72wcMuzzT1KhXE8T0CZimdzwWLS4fybn6PR+k
ou9dqVWqh81lHVffNEpDP8vvJ62hBrIGDM7WsxbAqMuK9Qcyo8Bt4+h108IL
QU3qy+UhFXUQLPh96tiad2CUv76ga+5reL0uZ1rHxU3wNOrg2a/bYkB3/dCJ
Z+am48O61qUTujfChDoZv6Y/EZDXIjF5SWUp6qefm2G9vQaMI1wCNmwLxofB
d7L13mWC9rPO2QqdG+FItmT8orJIVB7n3iqXWQZeMR7rFz2sho391Vp7m8fj
2OtbrSzWVMLlKzFWT2oqYI7tqI9pPYtQdcRxi5ndX8J5j4WGKXL1IHgVojY2
ugC1pbbLHp2Ziqr77h7bPKMOkhomDLMako533Br9J/WsQLmS6h5PlCvBaPH9
XOkOSTjXWU+tx+FK7Np12hEnpwowmb0jtjnkHZ606LR8uncFCm7YaaQ1V4KW
VLD3g6xQXLxRubqrTwkq2KfYzVNt5zmXwrNkerlj4hXFJbuUgvCqy8vYJc1N
oLt/eN9oDEOz32etPv8ORZnDnxouezWB1BaN7FlBuaBUPTriy9ESsO4aO2rP
pGrQW38tb7igEPYWN5hfWlwNnT2j5nysLACNwJa3+Y75EBKxYP5gx2Is114X
OFCvGhzrPL64NlRgsMHkgqy69/DwXd++549Vgt7lrAM2f96jZ3CN87JFT/CO
4caXy1Y0wczkHf3eylTB0DV1j4MC8+FadJfX+5cIYKy1xRXF02Uw/WdDoNKs
cujnd9egdXMRPLTaUrkuORF791lY/vVJGg4YVK769L8G6LJc+8WPnyU46/zt
BKvONfhYat28lJYMcKNzxQl0zjCFz3fOB+Opq45WwY9oI/0zi+PhUnx3B9nH
7fiT7hto0P2DHL53wfP7uh9YWIVpEt4ve74U4OhqQ6lhSblg26XHs0K/FDy3
wDby/vdULP0wYb/1mQaoGjZk5N3x93HrGyVZn17e0Nrrl71GSxNMrSi3dTcr
B/PT82dYPHyFiq8Gmk9xqYb+ak/kB6TWwa7fqc1zF6XD6D7+51x7tp/HvsGr
elfW4nznXlG3nXJxSl3h41FHsmHsutMNHXRqMcvewcV6VzH2GXAh5JZkOsSe
yCpZrlcFhyST0xUEJWAX4i7zYWIBxJ5csmfgwyqwmh8fuGhMOZR+vNypYmQS
9Ku6MqEsoRI7dciyTDgVgMdix+lnWFWCVXjvtpADhWiQqxC6oD4cv3zbYHZe
th4qz0hpqKvXwh656pFN9blwotjM6dbUPLhiWK/Z27EWPqJJxqOYYuj4n1qt
VVIK1AkCFHyW1uBPqcxtyTkCfPfjZYRHYTsPerBj+9XLaeDxwLDUOzIQ1T4P
29Do1QhZ7nca5+S+QseB81/bnHPC1mq/FZ8ym8B3fcFIe+1G1BlbuOfRsUQc
5Vt0s2R1EtR2if6kc7kAr/131DhRJgoD+um+XDq1Hnb4hhc7vKjDt6r/jR26
pABVpHu+Mg5OBBedu0YzP5fhtuw1X0Kas7HK5Ieb3fcK0TjwOIjGt5MceEly
YCLL0XUNqRiUJ2hft2H1zgcpuPtMcKX3pBp4ueBgubvUlfb1Z/wKCzsFp48a
mZz81QRNkkI9YX6QUE+wYj0v075gNO0LZvO+2D4obp+DLhNSQr3rweFuv6nb
xiRBxwuSnV+654C1P82XuS+cDxt5fg/GAx8JD8AHxgNsNxC32x7GFVaEK2Ag
4wox+/zPbg10vsDnC9f5fNeq9Xnu9OUi9DygOqx8uhfsHBVVn9huhw3Kr37t
aCxAD+ULqR5mWZi7+ky/63NqwZf8B+vJf7Ab+081+RvuIH/D4+xviUuCL1t9
a49HxQE+JUOzQDp++hjZwBIIXWiw7dPIMki4WZR3IjkDvo/b/NVnaxX0In8G
GfJn6PWd/NlnZsyVHZWVWH7svmptXAJuFei5amtUwBuev4/9P4/9/zbjHFPC
OTiIcU4c3S9cTfernS/T/RLDFSjCFUl0T9GZ7imu5nuqd87LsP8LAWwIyDr4
6VA2bHV5ru1UVwXPE6Wj3dt5lXxknL5je3y21LSp7G9VCpoUByCF4gD04zig
THEDZlHcAD2OG0YawrgE48IoLrVwXGp6MHDcyR/5cHbFPN/k64kwPe2tYV1y
HcyjeIVrOV715XjlxOP/0ThUvaRxz/GEr5rbhPgKRjK+CtOidYfGCNfFRl73
OOO9cfpCvAcpjPe2SQjjKuw2FsZVmJhAcdXwjKPlzIJymMt/7TvgDfMPOfCc
4jOkUHxuz2MUn8PNn/xaJpkLT+0DTBdKpMLZVyeCzLXrYa8H4a7zukLcBSaM
uwYx3lJk/FXA8R8oX2A55Qu8yfliKeOG7pxf9Dm/ODDe20V4D/UZ75U/pvmv
wwl3LOP55iy/YwzlIw+W38z4U5nwJ/Zk/ClmHxTZpwflQZhNeRAuch4cWuje
Y8WGEqi+NUZgaFEJadvkb55qLRbHhyjCh47rhHkWTlCeha8KlGebAoR5H7dw
3u+lQ3lf9W3X9PfGxfgiYf0b1T9V2OfupuqJLgUwj/I7Dqb8jpc4v//wW62V
u7EEH17MUzw2MAXjX+7TlzWoheL1WzqtvJqP14OeNttDBjrN0RwpK1UHVoQf
4CrhB7jN+MGG8Ab4E97AV4w3MllPE9ITlFjPAt5XPOOHct6XDJ93D87/H/nc
Rbj0JuFSzGdcakq4CBkX4efThIuKV1q7Sj4txEEtSQXL/Srw9Ru95cfb+elL
xr3zCPdib8a9Iwh3oTrhLlzOuMvsfOUgmZw4TJvebcK4hATUWdlH7s3hRpjL
uFrxhxBXQyjj6tx9QlwHJb+EuA76M67bwfh8COFzHM/4fPsRwvMmoUI8DyI8
r834vw/hf2hm/F9CeBV8Ca/CYMarkxhXZxCuhtmMq38T7gUlwr2gyLjXinAy
DGac7Mk4OYRx+yjC7RDAuH0tz7ei+XiK5/9k+WMZVw9i+Y+ZF1wiXoAvmRdo
MI/wJh6BKswjftYK9ccc1t+A9a+5JJyPJ5h3DOf5NqQnjmE9H7OeG2hdXMB8
JJTXLWf8P5TtMJT1FM33ZT1F87ex/OnMX/5j+SJ+Yc12EPGLStbzAu9LlfX8
zvsqZL4zk/e1kPwZzrE/f2V/7kHnDvVbiPcp2NC5zyG/hZxL5Lda7LefDwn9
B7JeER98yP4joy30Tyxn/wxi//QmP8RNzBNV2A9deHwJ++dQHs8jP8eXJAeD
WU43uhdwie4FTBXdC2fSZ9xr8md/1mcZ699M+oMG6x9L9xTk6Z5CDN/T3myH
z2QH6Mt2MGe7XWB+2sx2W0s8GgYTj4YNzKPrQBhXYYUkxdV9HFcnM6/Q4Tzz
huOMAfOaFBmKt8OY17QRr8cbxOtxFvP6KIqT4ENxElw5TrZQXIVgiquQyHH1
ANUNYDfVDQC4bqBEcRvCKW7DtzsUt3szv/Pl+PmF+d0o1l+D42Qs6y+2XxDt
V57yDhZT3kEJG8o7YrwJRLypgPIdSnO9ZTznu8IDwnyNO7QpXy/mfG1AeRam
cJ414jw7kfldEefrAM6nPjz/EddhpvL8HswTCzkvm3Je5noOJFE9B35xPYfr
P/CU6j/Ql+s/yS6kp8dkqucsZD2vEw7B24RD0JdxSDnvV47zuxrvl3EOmvDf
VYxzzAlPgghPjmI8qU84Cp5y3WzqWMJRadpCPAa7uN6lx3hsLOE02M44bSyP
b2d+eptx3WfGdUOpngYXqJ4GyVxPSyTciPaEG3E+40aLscR/10QS3vvEeO8F
1evQgOp1+IfrdZVU30Mjqu+hqL73lnAvqhLuRVPGvWaEk9GNcDIuZpxsyXao
JDtAb7aDmN1AZDcvwvPtdqG6pS3j+WAk/luUQ3xhGPOFCKpnQi3VM+EQ1zNP
EI+AIuIRYMc84irLN2G+oMPyg6iOiieojoqiOuo74i9YQPwFG5i/vCO+gxLE
d1CO+c4DqtNCZ6rTwnqu066iui54Ul0X6riuq64i5F+gqiLkX+DK/MuS+Br2
Jr6GIr4mxpf/x4tnE0+EqVx/tmCeyDwXxXmuCvFQ+M116f3MQ3vzeAvz0zAe
P0o8F12I52Ktz188F8R57nrWZwnz1rGsjwzVzyGQ6ucwh+vnt5YKeToa3hXy
dDzJPP2ji5DXwwri9fCEeT3X59GB6vOYzPX5M6a3LF0u1sC3auucZU6FMGlW
W9ddfjkwZsTCkO4FNQDRGhnb9+RDTF5y9e6sXPA2fnLk4+8q2HF2eMfsOSWw
3+uykfbAfJB0Spy0N70Kr7yTmWp7rxBn22qM3xFZBG+Gqc8cfasK1DNDd+jP
zgT37qGjat6VwjR/N1x1sgbmDKjp3qM1B3p7wC3PVYXwc6JR0oMO//edZZZB
VHgBGm/N6Nn0Kh9MTmSf8vlUg7cfyvid3ZSP56TDy6Yfz4Uel3esiE9Lwflz
jvkZXEY8Mb2DRMv1RrhYP8nY074IGs5Kluk7v4Da+3nPrH/XgaaL3E6plfWQ
0qlAw3F8HGjV3zSTysuDH0oS8+0mpcNu3Yq+gbZPQOHrlFWPdjZCi6ewngPf
VIT1HCjjek4F9yNWuAn7EaDJ/Qiu/4B4/cfKsq37qB/tcbD73GWTvsXD7AVb
Rl+cUAUB3Yok1q6rxgfymGs2qQAaAg8EDVpZBB3Cdxls7FCNr2KbzFdZlqCD
IKfkRHYevF68qO64bRUOa56xU7qtFNNCDMdnmmSCivOL1I2LamDrNZ8/T5xL
YdujDd1O2sRBn0WPzBqtK9vj/kSVN84lsKuf7auDvsXQZa3RibPyAjQ5p1UV
fzwdFUbNXeY5pQZ6zLVVl7Yqwqg+nfblOyWjXtGx1M496kDhm+NXhTd5WHbT
Y/6Ic2k4/PqoQw6n62DTuFk6qj+zwW/LQ8vHu8NBY6uUU5VVA5SWZUUs8UlH
2z4TjnY4/AL7mHUsf23eCD3VJJ2drlbBi7utppdKMmBCkZf2/epSkKP6IW6j
+iEO5fqhAdX3YBjV92AR1/fauP+ylfovcJH7L714/o8/mcJ6oCfPf8d9HFHc
c+C4d/fN7heOnSqgl8X8yInrU7C1S8151WeVMF5F6/GUWZFg+KXXG6vmMAjx
+pTrurMJHjzVUT/vFY9zzl2418kyGosdTJ53LGuEPmEd3Ieol2HWcDkvmw1l
2K1T0I0R0SXwRKfExyugAnskFBReLyvDFxMSHyho5YJH6tX7vy1LwUfVsXtf
hTJQPRFZJt8sgAuBzZbnP1bies39Ck7zyzFtUofqyFNpMMAh5+AWiWqwUw7e
XZZcAkvmreyy6H4uRC99unlOSvt9zOg7X6ciD6KldM+fvVYC7RQoK2ZENVQK
/+bAnHFpL7xGCEBRbkrOs5UV4LA428g5ogi8I4rGfdQphccftU10vEvR5/N3
h9HtfPb4pUnrVsVWw/21ctfN7TPwpXHex1+d36PC+XB3tZgGKO87JtdsQD52
d5AzfRvdjk/GVyn+N6Ee1Mess7+QnY0JsPrl7rLn+HLvOsVvng3gzeMwQzgO
N3n8VdbtmpkDK3FSnue5Z1kVcNJr58fEe0nwjO0mTXaD+2y3R1UJnWJ656LE
u3d7HvQpwNKnrfZ2pTUg4zjUIyuuEHpeqhyr65wPOUvA/3dkNdzaYVe25ke7
nb3Sc85XFsGE3jHGcKMcEt0+ODdJReOwqV+063vE4oSq9S8NujbB+QfHxra8
zkJJ/Uf73b1SMHnMg+jgsHpRPR8nUD0f1bieH9hbcGWdcQV2vRZWHm6XjAeC
5At+n6qE+ZPdl0wbVIHzS7oa7JTMxseqAb5zlSpAn/WcRnriG9Zzy6Vs74sG
CZA+eqen2+NEXLlGS2LdwkawYD2vTxHq2Y57Sc/bl0Z77+9diKUGb+3PQxVG
N9snSR8pgV6T0yoHuiF0eai4Pd3vPYyWSh13V6cJTvV68sDuVi46V5w9bh0k
QNOml7OXr6+C0DkDCyxjS6BkmYfeq1v/9z2HkuRcxzSwXqZz5k51PvSuFgzR
8K2EI8YBvnlZAhhhVxdwSSMak2HmCLPb4bja++X+tYuaYO+P/ZLZbxPx+s+f
/5WnR+HoorkBcq8bYeQKt5PD26LBYMO2kOKL6dizs0erdKfG//Xv1Jh3TGfe
0XhG2PeBdWeEfR/w577PbcK1EMb1p9WMbyXGjulRhNkoZ576ttirEq8J5H7Z
Li2D4m7CvhLIUF8J5nBfaQf1xeDLWOqLBXNfTH/WUY+d3TNwWf2txKJuApwW
6RDTMLIGEng/D3h/w3lfC6mfBbbUz4JW7mftoP4aDOL+2iPur8lXOHhsMwoB
q6jEizn/vYFrpvc3WD9tgrXUL4Op1C+DftwvW/n3OIrGt7B8BZKPgSzfkPXZ
wf21X6zPZt5vE+0Xn/N+09k+PbjvNo/t48N2DiQ7oxXbWexcUHQus7t7Vymk
eGOInfXeT6Fv8IdAZfHUpCbx/h2I+ndWzDcVuG+7mc99GvcBV/B5ybE+93ft
UpHpgNBx7PmQvNA8HB8wte/OlHow537iabZ/Ce/3xpPWWzX3nuGF6V1e525P
hJo5EjkKUk1gyn1JA7azqC+5eviBCcNtkvBqpuyhzMECcBhS4hDxqQbWcJ90
NNtZ1CfN8U3wGe8bg+qBWrbzT+Xj9VFDhqauqYeD3G8dTP1WPMt2PlKj2wpO
V0Bl1KxY/7xn8OTErjWSpU2gx31bX1F/j+08pbngcfO+d6CvmnzXqk8FFCoG
/mjdVgVe5D/YP1roP3iZ/ceY/BK8yE9hHPunNf+7Ov93HR4fSH4Os8jPYSH7
ucA5vcRYUABKnX0j9o4ogPfLLujOzamGmjHC+wXSdL8giO9X6zLhvUat9cJ7
DbP5Xiu5C+MVhE+juNqP49XQHj0Oe7h/gKmLO0h7S76EQRf6Kc4a1O4/FCfB
nOIkPOE4qRIZ/rpucQFU7+9eevh4Npy32H5x0ahaOGq+YnnD7gIc3+yqaXG9
FIduHtkl4UMFvKL4BvcovsFwjm+fJgjjITr5C+MhGnA8lLwojLe4aRTF22Mc
bx8eI/0nk/6gyPq/pDiJAoqTuIrj5AyKk/itShgnMYjj5O+3QjwA7xgP6DAe
eEB5DSQZD9RwXqsaLcyPcJ7z5jvOj6sob0JvzpsBPB6rJDfjlH46VE7z1Eu7
GwuGG1IbDpW1j1P+Ah3KX4Ccv8IoX0OTvTBfw3PO116UH9GF8iOacH7M1t1u
uE1QiRscD12aMLoQe94bcnJ5Swn0JfyAuwk/4E3GD18qhXkZpscI8zLMeUZ5
WVspIuNZO45f1NPe/cGXPGyY4Lxr3cQa8Cb8g/cI/2Bnxj//sX16ct6PY/u8
IJwAUwgnoC/jhCDms1H8fY4v47r0FaucXyyqgnKZhneNgakwpb58RGP3crhI
OAfcCefADcY5VYSXsJ7wEhowXnInfIjfVhA+HCxJ+LA34ViMIByLYxnHyhJO
w/2E09CEcVrDEyFuhFdnhbgRmhk3ZnR98K2TTQlc9r/a2is4A/oomMPA3TXw
uUWItyGR8DZoM96+SPgQrAkfwhvGhx2NhXgYdzAe9mE8PJ/746MZP5syHi4n
/Iw2/P3SG57vQLgdfsgIcTsMY9w+WkXIj/C6npAfYdUX4kdSxBcgjvgCAPMF
/2dL33W9Hoc/nC9sXvQuBA9Hfnf7Oq0JpIivwQLiayDia3cfO+UOs6iGw101
w3UPFcGh+ceV8scUQBsKeRC8IR4E+5gHGREfhFvEB8Gf+aAS8SBkHoT2zINa
zYU8CBuIB2EK86Di/vp3i75X4yCLsyYDJhWj1qWvR4f3yIXTxHNxO/FcPMs8
l/kaMF9DEV/rRvwOyqWE/A5vML+rJZ6Ia5knjmGeyLwSxXnl7n7LZy0TvAPn
KHn3YA937JC0ofGoU/s4y6ni79/2sZzsBiHPxfpzQp6LZ5nnTieeixXEc7G+
jnjuROL1aEy8Hi8xr68hno6LiKfjDObp84mn42Li6ZjmTjyd+T4w3wcR39eQ
E+qPW94L9YfMRNK/7O07y6S5EVgauyp7+mUvHHDpd5zEsyboFU7jTQnCcZDg
8d250eZuriX4cuIDF811xTjNKzXaZV8lyFBewHTKC3iV88Lp3UKcgMGMEyQZ
JwiChXgAtusRHvjFeMCI8j4c5bx/nPP+DcrvEBtA+f0F53f/BmEex0VjKY8/
5DzuRvka7TlfP+B8rSspxEWgtVOIi6BXKeEiMb7/P/95n9rSwXlvHWyd3rfj
O9ci8LfXulyuFwvRV1wi0iLbx1uHnbh6tRBMDkysvrvqPZSQ34I8+S1ost8O
8dUwXrSkFpq+KvxaKyOAnzZvH74bGAdfjxs2HZtSDy191w83ScuHy5pnBxoY
vIenPwb0eV9Ujwbn60oGWuXgsEO3AtUr48BtU6ligFwDPpk4Yonqz0z8cu7I
p9/qSWD7bHPklQF1WDPwylSDWel4paxG5b5CAYwIEd53WHtYeN/Bge873wsU
vxd9LIYZOTs2QohqdJVfaAKEv753IsgyHrKio350SGlEp8yMVXKjo/DhivGC
1Pb/fuec1ZfEqEY89/HmOSf7SJyolKi6ry0R4vYfk91f1YjlA1be2rbvDQZc
UHNx1U2CAaHdvn+b1oC/4mbXNMY9wzbb18uLDueK7heK3694ltNCcuAsy4kZ
a1q1rHcTKo/Iqt154zVc6bJIPjDmA6SznkdJT3jLelY9HaTs5taAxpqV7rrt
vOeNk7thgkWW6J6C+D11Zzs/JztDBtt5QMCGPwWHGtD93Z2iZQczYePazW9j
s2LF62z/u3e3KX6iA8VP9OH4mTLtQWnNhmr0sc2q1ppZhkNvqFhd3ZcEeisX
rH86owzer5ZNq0ssAq8Z0Yd7bSqHx8+vXymwqcNYzRw1m55FiLJbmkNHfgBz
X+dpjVvrMODwgp8DrxZgy9ZPS4ttUyCL8hdeoPyFovxlz3WVUsqboMl5c+ml
m/Yf11Zjk+D46tb9pVjUaa6F+oc06E44AYYTToDOEwkniNUHUFQfqFp1o+zq
3Doo6+sh0DIshOphv3aGjkwBQw3Vs0Eb60A26e0Vl6B8eFwx50O2bBrkEZ6B
1YRnoDvjmQLCCcg4ATUZJ7zbMOK2SXktWO4MdDtv9Qy6zXm+V6IdDzzn8Q00
jio8rj9+sMnXg9lwDSSWzXp7H6UUO8YHv24QrwuBqC60cqt8soROGURMCPAt
qm/H98OnHfNv50Vl9Ta/9zlXwRaJudP+hJZBztT0syvU0mDEpZbzC++355OA
UXtn1JdCv4MmFWq3MyCUcCwoUN0AdotwLOFDfE74EM0YH478u44BmlzHEKur
gKiu8orwNiwkvA2t1oS3t1wekLbufC46NbiFqmyuw4salw28qjPE+T6I+P4P
4heoRvwCw5lfyBAvwIHEC1CReUG/hTYb51TmwB8LFUej/3uv6mH1hdyiOii8
RN9RAH+H6c/fUXxIibP9Wp2NHRfol6Q9rIPZoVHrSg9nwmGOzzsoPuNjjs+r
94ZFrryQij+17sqlHazHadqdirKnZoMyx/mKMcI4j6I4H8B5IZPyAjzjvLDL
c6jbju8pcER5fklk70qYcDJZvve5CpjJ+cWZ8gue5PwSxfloNuUjbON8dJ3z
VyTlL+jM+etgaY+hK3tmo+UDu9Xb/evg1SzNPa77ssT1B5H+60xtPx/vE4ce
aob9Iq1qoEH1akzUnlJxng4inj6e+eYUtk/5/z9/oSh/tVYTn302kuzzjO1T
xrxYm3gx+LJ9NpB98CTbZyzbxzfk+V7VT2l4cJnbrZJ9pXBedcfEae34bwnz
8ctst/1sN2fm9TbE67GO7faW6wPybLcxbDczsg/8YPssYfusJb8FZ/bbc+y3
ifJHE1qf54PBt1fKJ3/WYPP58Q9yeuZCJPkVSJJf4Xj2q5I9wjoY3KA6GGzg
Olh+T8Pj1lqpMD3Issuq0vZzySpcG+KWKS4HRHKiCsaubH6QAyeh/mtBez5/
NkFNTs21GM5dIH5aO5LutQ/f64OEi6CQcBGoMS66R/VA+ET1QAjkemDwgV2X
tF+Uo86ZBotTvyuwsFZ1zMiBmeL8HUX8XYzHoYjHxe4X1i0x+SLVV/9w3dKu
eWCux5dS7DrQc/os5whQv1DvsXtzDVjw+Hd54ThO4/FgqpeCMtVLwYHrpX5U
Z4ZQqjODqM5cw+t+pHWxjte9KNP7yZibNZjw1O/pmHEC9B8XsXvsjxSwoLiK
MRRX8RjHVTE+DiI+voT5XQLnKTPOUxFUV8c9VFfHGFFdnfoC6PZV2BfAh9wX
sCk1+PSqfy28Vy4ackZNAAdzJNLeGCWI81YQ8da31MeBUdTHgSDu4xwnnAyz
GScrMB5+gjRuwjhZkscjqP+CVdR/wf7cf+lE/R1YSP0dEPV3fsZn2T61r4eS
5cvGeH3JhY/LFv48KvEB9i1WjuyCNXBd26XO874AlOKmDGlVSYBW6scBUD8O
FnA/rjfhBzxC+AEzGD+oEv5Exp/4jfGnGF/4X3+QcSaI40zu36F4/47xHojj
PeYdIM47GKeBOE5j/IlvCH/iM8af3KcD8T7d08SdM2fProeeHtfLUobkg9nM
Xt5aPnEi/AyGhJ9Bi/GzN/VV8Q/1VXEo91UZh+M3wuF4hnH4WMXdVs1Xa3Bz
SM2iWRMFmPff6+0SzSnifPN//cFHeQO8V8xrgvOBgvWaOTdDVQ4k3zj8OR7a
8uzXVUs0QVf1D7+vpV2EbRlJe1xMkkW/Owbx3x278vfYbtynzuY+9V7ZR67r
nRogc2UfmdF+GTgivM1iafKH/72XK/57YYkU6d45nZrAP2pJ97Y3fqG9phyX
0fROht96Z/22vWoEl8lrs/XkrkKg/965BYmponcPMJ7fPejG7x6Y8zul7vye
wGF+T2Avvyf5sZnetTjF71rwexRwl9+jmMfvUQzndw4z+X2MOfw+RqR80ycP
x2psGGkn4z1EAJ1evW2ZUZ0FSx/m7rUYXA7VT2RuuA5MQ9Uyq4xf46rAVJne
x3O8SO/h5PF7OFkGnbeUb6hAs1/3uqUeLwf18d9//ZTKgYn8/t42fg9nNr+H
E/r3+34get9PutcGn31d3+jetemiP1upEXJ2PX/ofSMTpO9fn+owHXU910mV
Wts3wHTlJz+j23JgwZ47LXe3ROpqdT0y5MDmepjntn1Zln0h2GQP2q6q+U53
+OQXBeo3a+FEcdBbhXABnBG+E/RB14PfgZvB7wUZsxwdkoMGLKcHr+tF66Iu
r5vCv6t9wO8QXuHf1Q7h938s+L3BdbzfvvzuUCD/vngq/77Ybgi9L5Rzmd4b
zGJ7it510eB3L4fyuy78jhKI3pk8xO/PTOf3Scz4/UzR+ySi743M+PtqQ/7u
aCa/l/Kb372UZ3/AnH6qjxNrYfmcD/tDz+bj8h7dmkqdM8GH31GR4fdL17K/
2fK7CqJ3oYv4XQV+/xZN+P3bS/z+Qw5/9yLD3/l/j6PvXiSXq0jIhTRC8viS
zfdtInHn/GsVCz8mie4RPuR71Ifv0WM1+3PdyxvxYFtu0qG4y9AWIPt+7c0U
0fvSIP6+NP++A8R/37Gf73U63WtQ43vN7wag+LsB/DsUEP8dSlfSHxNZf2vW
n9/BAGN+B+MO24Hfo4Aqfo/iPttN7PcXKPr9xSD+/eMJ/l6riL/X4vPCZXRe
sITPawa/p7qQ36sRvadqyfe6ku41DOZ7PZ3f55rO7xptZr+SvkPfdUfx94ev
+ftDI/4OfBj/zusMfwc+WYd+t+igR983in636MG/c7Tn7xXH8veKovdd2c9R
lv1cnb9vb+DvDMP4+3ax7+FR9D08v+sFN/hdrxl8v/bxd9Qn6TtqHMDfUZ/i
77EVgb47HcXfnWrz99ua/Ls5U/5+O4vfHX3Ev6P34Ptewt+HK/N3p0/5u9MF
/D25I//Orp6/Jz/F8ecUv1umx/FndHcZqyqtcJxjd3vV94IKyPu28fCGzlUw
ksfn0zhm87jod3z2/L16d/4dX9v/o+u6o3r+v78ZZY/sshqSPbLiyt6bJIqs
EDLK3jN7JCGhQpkhouKm0N577/V+tyQiqV+/no/355ze53z903HP6zzf93lf
z9edj3ufpqLvryPw5+bg3w59go9EnyC1hhzk+uxI1mf3FnPG5mH+qmzOWB/g
Sz+jL6AE+NJoof9psdD/PAT6fw9wqpvQ3zoL790FeNcj6Au4BLzrLR2Bjz2t
J/peZfhYQl9hd/QdPMR5MxLnmYtxnrvhPHtPrRpd2iKNv0pNTDtUBtPSsLXP
lzaTkj6e/w671hPPfxZ2kIqFHeSmsIOGYYscj47IpwNLxuRlfk5nvdZ/1l5S
TpDNi2ZnzIseBzsbCHxjf/T1jAa+cRjwlvboX36P73dJ/XlBvBb2XQ7XxzJc
n1z/Hcn67zD3gwIw9+M75n44Asf4B/1Q+sAxQl9RvNBXZAR9JZt/Ij//H31z
LN83B7+Io+X0552AjF0W5wvZ8eGCUKOL0dQzKURrjmG0bN4+y8/bl60TL+df
WSzOCl42R0q9p6+5doxS6FN7r2X9VMNJT31qTV83Cd1qHTLvXFIqqS8p7XOq
fQRNrX7Zr1hBQg5Blob7r2ZQxrCtrn8d/WkiLShxdZHQ0xUdRo5zTKfO2oe3
VHX2p5t7vttMVpNQ5YB+N4NmppPLmDuGXWr15D8RF3CqiAv4L+IC3XZbrC6o
SFnnUkW2a880Nij4vShmThB1Rn7ypMhP8jbkJ28LOdADyEEbchjdK6DCWrmQ
fw04faC1Yiy3dQsoiNOPoa3NBz7o/kpCfcu2/rHbH0l9hm22Ve6YSh80G6bd
S5FycRe9/d/3JnKJdbMTDxpGkMYCp2Vb+xbypmCFSJ/58exiEj/97ppI+nsr
4K5us2JKuJruecIggp7p5XT8sT2IBk+f4JdTVEht7ZsMU2kQSaOmbjR2vhVN
F7JHD1u9rYg99U9U+DgG8c7gxSWr/kaTL/K9rUS+l18g3/v1/WEPa9XaOK/B
9dCevW3IbclRde3a88DJSuctHIpozM2cj+HtH9I9Nz3LQQ3jqQp++Gzhh/NR
+OGOyGPfEnlsWow8NvpDSb4/FHUckq/jbBL1OIpDPS4F9bhKyCFZyIF9IId+
kEMbIQc2ghxs8L4cxPtiPbyvqpW3G/+5l03jfuay4osw1rs73nakRh4Z432p
iPfFK/G+xuH9Von3S+VvxPuV1Rfk4yNP9D9WpAo88ADggWXnUBafFuIc9sN7
3y7eO13Ce5fVNeTjKeBgWR4Hi3oWydezvqH+YibqL+yK+gvV/+54NL47uToL
y+osct8Xy76vbSI/wF9EfoD3Ij+QOKnl0l0WEi7WiqwJtk3n0Ub2OtcSgqhl
6TwX8zgJ/2xv3K3wUyq3vOq7e/b6cNJuMqrTrFp9qOlU1O/cgQyOnRlT3vRA
BPXbeSrIWEPCuVfm7Mjens5xv/SfJnmGk2t0m5e/siRkNdY0uPJqKnkbDFpI
G8PpZLVk56/jhbTdLKB8onk8NfLee/6F+X9+Jh2An1kFP7Ph/intv04o5htr
wvVGDfPnXeuN1j9qEUERx1udu3W8iA3i9OYkdQ7kyqlqqpbNY2iFssHn1DaF
fKIsuIX9lK/ceYJFk+fJyfQC638R63PT52J9WZwYLeJEfos4UeZnxkJv60Nv
Tz2258k7wyI+2HJq1AGHT+R5RMHu/Yx42oV+2E/AsV+F/p8zROBUp24WeZIf
m0SepBVwqntR7x6FevcJyGeXkA//YyGf76sWPU1bUUhGh5OWdn0Zyz/f5vZ6
rhIl3xdMsr5gOfwty/C3qhVW6p46eVw0d8a9acuz+MjlzIG+bWLolshrUaDI
a9Fj5LVSM9ub+Eflk6Jz+tfDrhn019Rs/yjLKGp3ssOVC9EFVG6imFJgmk62
5WnHPd9GUpN3kkjjWv1ps2OD3y6rIJ4S5DLRc3YyWQDnuRH4By/gH56gP7cN
+hQsYMd79RQ42P1lIt/lh3yXrK5kI+pKpIq6kqyvdSrisDOIvw4B73oeeA8d
4D26Nnd4dqpTFrVq9Gv/xk65NHylZ39PncTa+OXilYjJtf/vP2dkrGI2bd36
6HXhiVh6J/KZNFTkMykK+cxHWjH2lZRJL71a3/1WlU3BQQuvKjxOI/3PE4Zb
XM6m3wb6vbanZ9Oe5A8HTT8k0FaRn6S/Ij9Jg5GfjHQ50vxvxjfS1lnRKm65
C53ZUHw7ckcJ7UWf5iPMhXiOPs0lWKcEec6JWKfpQjFHJQx9N2Xou8lAfWeL
qO9wFOo7b7EvWZ42BPtaDv7/Cv55M/iXqx+xrH4kJ0+WyVOuPsKy+sjT48P3
pY/N4AUqMyaP7ZnPLfb9OvelWzx1tTfWa3kgk93oTk8X0zwutC1XejM0jia3
CusUaZHFeYZO56YNzuVLLZafqOR4eib8T3KG/7kS/ufT7ju7SbUjSDd36cDk
7SH0xKKXwu6SIrqM52+K53kDnt82dMucsQ8jqWavtcmOLF9uvn7Zv+sjikkF
/bnv0OfVA/25d+vjYMkfeW9L4F13Ag+2GniwTOBjHwl8LPcCHkwO78oyvKtc
/YVl9Zefy7P97ngnc3SPvOEX0gt4qUWjR6bz4um5s11o5uh4PtD5k3rxtlr6
0ZY3eWUqjW9UqPQwy5XaSByPzOxTRIp9e6ge75NI/aXz/+2LeEPuB7R13cYX
kuvrH4kHX6aQpOrnmQ9xsWT+qbtajUYqJQ/a/SczrIASPXtZeryPpE13Ps5r
YBtNUxNNHsWFF1IWnt8qnucUPO+WLXCneT4CN/gAuEEpcK1JwAf2AT5wGnCw
xsAHjgA+sClwtt2AA7QFDrAccogVcqDFkIOk0abLexzfUunMlkqRNlJOi53T
3Oh3Gr2rupYeQ6/pQbdjrdU+FXJu489vjvokUb6om/BE1E36oW7Son5+jGOR
H1Me1/GS1qLntGWG3rR/L4vowJT8G1G340hrrsm0UW08KNbDsv8dEwl5rutq
sDcsQ/55/h/Ps+z5mSUmfu82vuQz3oUrxu0oosolDVTIN55ej61bh7fjdzdg
nY5iHS7B79pgncbivXN7vPc/fcR73y/kwE5CDpQEOeRK6s4Df8B5cMJ5cBTy
5DIhT0qAPDch79dP5P34DPJ+oWOm3vwzzoN/HM4y6GBdwHuHHkvfUZZJq1GP
uyjqcTwQ9Thr1OMOiHoc26Ae9wC/+wPvMQ6/mwM+PQSf7Ag+99bfF8djX43q
y4F/Qw7T68uZ/0DOcnUxltXF5Op6LKvrFYhzSDH4Hk1wDmX4VSXgw9/i3H5D
/2xH9LkHI48xA7jZn78F3nsUvouQ66Jvdx762fWQPykV3x1fwHcahe+uAPRz
+B6jQc8X3y+fFd8vT8D3qyzq3dzOsK7ezfdR71baqLRn8tNw/h7XbXro0W/8
om2SieKaYnIXepVNhV7lR9CruZCD7Hs0hhxuCb1Ee4VeIjPopb1Cv9E61Jcd
oN9W1a+TkqxOGli/Tkq/UCdVRp9sIuYzdEOfrDnwuprAD4wEXtcKuFwtgcul
OdDDX4DjfYY+BVXobTmcLclwtrL6pswfyIbdXCDsJv+E3beB3RyKuUyEPo5m
wD9Yoa5aDLxZR9RVb/zQSZz2OofMrRYvXKKazcV+FVfOG8fTyL4V3+b5Z5Pb
Dta6vjGbB7Xe+WrfiUTKQV8tY65aQ/TVZqCv2RbzIlKQV4zAXKkKzIWwA55h
G+ZQvcZcCDf4G+uEf8K+I+v8Ez4P/6SDsNf0QdhrksJek7DXVCjsNZ2FvX4s
7D7pC7tPjWH3F0Ju8JfYCnKzB17XFf1KxVbCf5Ort5Ks3tpT+CHcFX7db0Ph
h6QJ/4fh/1Aa/J+Rwt/jYfD3TsPfayb8WHIRfiyNgh+binXM4EclYx0drDNC
rMOHsU5r4SdzhfCT+Rb8ZDk+WcZnqPBvCf4t68C/7Sr8dpLCb7eH3454gXcg
nmqJeKpYxAtsIOIFavNOxAvuAkfEpsARqQJHtFrgiJiBI2oCHBHiLNoo4iwq
Q5xlJOIsuiHiLGqAOAvxGjmKeI12IF6brDa0yULbIlrwTuOZVWQ43S+ZPqqr
bQQ9Oty0/P/ntgZO77iizC6UZnS/qzExPoJab164J/VyIe3/ofh35KJwUh6d
dPN3cBzlCPwVSwT+iiXAXx2DHHYjbmoCObwQcShfEXEof0YcGgI52yKO0IKc
u0POxULOZAU5a4g4l/JFnEspiHNbTDSJbPo7n1q4Bqxq4pFJqckhzddSsHyd
mmR1ajk8MMnwwLL6eAryYDXIPyDvRJuRd3qC/MNpJR0q1i3i868PzfOKjqJB
ah5dvkSH05rfiQbrFAu50QTV/KcXI+iup/XwMKMEmp0t8NU/0BdZs0DEmwfQ
L2yBuVgtMRfLS/Sl8mj0paqjLxXxMp9BXfUl4uUq0OMRR7uDjrib/RB3N0Pc
PVnE0XQEcfQXxNFnsa+rYl+sin1ZibwZfRF5MzqBvNlLgRukEIEbJB/gBluI
PAZVijwGtUIeQxPylOVzbCHPeJEPoe8iH0I6yIeMFXlIGifykLQCeUgSeU5+
JvKc3Al5TuBpWR5Pizwqy+dR5XALVFE/n8Py+VJZHV8eT4u+ZpbvawZuluRx
s8iL0v/Ii7J8XlSGN5DH6yL/yf8j/8ny+U/MbWP5uW3oj2b5/mjgDfh/4A1Y
EXiDrchzAsdL8jhe5FH5f+RRWT6P+g/rz0Ue9TjW98E6LmIdDsA6blhnoViH
I7EOcLkkj8sF7pfkcb/A5ZI8Lvcm8vyyfKku8qXIi/L/yIuSfF4UeVr+H3la
ls/TAg9M8nhg5C1ZPm8pd27/y0PuFPUFRn2BQ1FfoPrfxX95zj3j4qIv+Bez
UZu9wR4vv/Cbu4vUtg4KrvUn+5t33FDM/oHBpUGDPnKzyvVHMuwiab3VPomh
Ve06vlO85tTateUDchS3vsmQvS/6H++L5N+XHdZPEevT9z9ifWdhp/ijsFOs
BzvVTtgpthB2ihVgp6YKe8czhb1jO9i7KMy/vYf5J73hp8HfYzPh79Ef+HvR
n0XfwUP0o7mj72C48AP5hfADaRr8QNP6+Fiygf8sh89kGT7TDDjSE4jLRiAu
Gyqep214vlMf8bxcHMr/Iw5lWRzarf58Tu6K/vpv6Id6hr7vPcgH+sM/MQH+
uSn8k/GwFxuEvWAJ7MWsJtorlayy6O6DE53957nyqQkLWiyYXECl9b87vozv
Dvh8ksfn9wW9Y2AdnXxABz6KNgp8FGUCH1UjdRrj8KGQWxV23PtzbRw39DYc
53EyTPa7LP+7ocPeJJ9sX0IZsY6ju5fZcPwk28UTLUNpaL+2O2dpldDYoL1b
1IxucE/Tl5WX/wXL+GF5fmb/ezLuiLSItvS0UdleG5+Zr72ZuzUslE6gP+K3
0PM0B3oe/TUk31+zs36977/vsZXwZ7i58GdY5s/ALtM5+BtqsMvrhb9BjeFv
nIO/MQF58nV4X2l4X4bifbEL3tcevK8noFcIOo0B3Qq/ewX+QCf87nb8bivx
u6yP35WbR8GyeRTewG8sAt5Ght+w6x8tyTOWcFjnbtv/bk3iQeuHThnkGkfq
D68lWDaT8Ho/z+fpqxPY0yorwFM3if4Cbz9tYp2fTDk9hJ/cAXMkzDCHVgfn
3Ac4/xj0Ay4Czl+Why+Bn7kLfqbcPEySzcOUm89AsvkM/zq3Dt5/PpOUkk1X
jKjIoxEvZq4KvxJN8cCJzQdOQAs4ARvomS2IK39Cz+z4/GXF0swcHrljhfff
W5kcqWewTDIqmRzSjCa4WhbyW02/QU0MYnjSOn294f9q/U2FWZdLw6Wcqmd0
u0OzaF4xMFBt5eF4ylg6d8XKZAlzY5Wy1CERbKE+98O+8am07vYKjZErish6
pc6s03avKKzD+Tlm3Wvl82Wdj5K9lKZUbj4z/oQHGVzQHTjFKY1+jJVc3ncs
jxrkJPQz6vSJLjUeet7ZJIfWYJ1nYh1OwjpeWGe5WIfNsU461qnOrluHHbHO
A+zLQ+yLCPsagn3lin3RPOwrF/vyE/uiVdiXrF6gg7hvA+K+9egjewi89CzE
9c6oF7wR9QJ2R70gUuQ3eCJw4C1uiPxGI5GHoRiRhyFX5GHuo3/hHvqaO6B/
IQB9E0boU85H34TcvAWWzVv4IPJdvAc48Erku+TyoizLiwI/T2bAz99Dvm5j
jxHr5hg/oy2STXaWgUU0zO/1goddau1gYvTVw0te8Nizg0PXXCtil7i+D9z7
xVNz8Tybi+e5B56Xszskszty+SKW5YsigYdZAjzkQJxztyWrOr1UzqYP+KvV
/NjN1H0pdLO6f1Uv0wwyN3Ltrn4ji07vSFUYaVxrh4Bj/4m5Fg+Rz5frvyZZ
//Uu8b2QLr6Xj/heDNE/3nm/6BPcB3v9UdQXePG+uvoC/V4n6gv3gZ95g3rE
atQjruH5geJ5boh6xG1xftgF5+cHzs9u9DtfQh9TIPqdKzGHTTZXv1ljUQ+6
Dzx8pZ2YH2IFPHzPRdPW5U4tZEqKKFho/47KCj52q96eQmb8I6KRqZRX/w2N
tzb8RL4rZkUWdEinYZZHfj2PzeeC52MLHPV9yK5frOK7h1nUA+usEuvwH6yz
EevsFetwENbph3VKxTr8BOt8Al7oO3CzTYAXWg680EGBF6IZwAs5Jfg8N0/K
paMlc/TaZqRToyFuLxXMUyhZ1DG5lahjcg3qmNCf3FroT1aF/qzuLfD2yyrE
HB5b1B/l5oGzbB64XH80y/qjoWfIHfpzKvRMv7sflMInFtKa6Cl/2pbG1Pot
ndrusYqmK+uOvFEfKCX3ZOPCHk3jOOjprVEmXvEy/ck3oT/DofdO22y32bVP
yosNR0zjqe60zlWnYLV6OlX9VZi4vWU2qz2PCHjg9I66RZ4KfuyXL9Of/BL6
MwXrHMQ6JmIdtsA6EVinsViHx2Od+9jXR+jPydiXBva1TuyLzmNfF7Cv92Jf
lIh99RO4AtISuAKKA65Arp+aZP3UD9+J/u5Hx0S/52r0eyYMEv0IUzEPaib6
Ed4LPA/9EHgeKgWeZ7LALzHwS1wA/BL6Xlm+79WifvzyHz4qaapR6EIPKStq
L3rPTil0e0WzPN8oP9n8MZafPzZrVR2+hV8JfAuV2gl8C3BNJI9rOp6verTx
gmI+0+TW2Wf9w2mP/9bAaN0Amif8QN4o/ECaDj/wTrZKaPn4Yl7c/I995uFw
ev3dZu0orwBZPEXGcvFUVDPPvpKxxTQup+TUwVF+vDWm3Qf3gxGyOIsCEWcp
Ic4yEXEWyeIsI8RZwC+RPH6psvv6yzOXlrD+sPvfBtN9r+/vNsS9rg6gYcLv
5X+BdX4vNYXfW3V09Lxx80v4nObrgE7JpyhlQerG9ZsCZXEZpSEu+4m47Bj4
8Rb80CDwY4H9bhT7pQ/YbwT2O0nsl45hv8BHkTw+qhPe13rgkTSAR6oW/j+1
Ef4/9YD/3/qnicabQAnHGY+bNbpWr/2r2hbV+nGQ7B49tsI9ejtwj557q1u9
zOwk3NpqQeawKxGkXTR0+s/cVAoS9/fxeNzf54T7+w7dMJ5755iEgromrPQI
TeOjhjO2aV8MpybivkUahPsWF+G+Rbl+W5b128rNcyPZPLc94v5H8sX9j4tx
/+O8J2LO+V/Mq+yFeZUGQg/zXujhBdDDPzCP+jXmrO4A7tRD2GN+D7vcEXb5
lajH0XHUPZWWinqce/26LeWjrleEOm8J6pJZqA8OGFtXf6QSUX+kQ6g/rhX4
Xposh/vthzr4e9QTX6KeOK5+3Zybo26ekbB37jzzZEow3/Nq5NEsDridVD6q
cQ79mzJuc7ORj0l/9Irgr6mPeeXawlSX4hIKwnybRug/jUH/qSbqbl1F3Y1u
o+52Q0nMq3m7WPSlqsGv+zWyJvDOpxz6ktXlbtnV2jjI8UTaGP0cOizOAweL
80CncR4I96tGiPtV6T7uV70r4h2KQ7yjiXgnEvd4Zop7PEkR93i2EeeZcJ5Z
8Z84z5NwX2eEuK+Tx+K+zge4R7KTuEeS9+EeyZ/txZzMRxvEvQYWmJNZvXr0
lbOVRfSn7u9H/nhO87ZSlxhSO33Ixdy0kEtVJg+89u8Thx7xSDlnlkyluNdg
H+7RWIN7DXB/JXfE/ZVX8Lv+w8V9CruvivmcW/C7fTDnfzbuB9HAnP/5Yl+c
iHtIy83EvnDPKaXjntMekE933DswBvNUL2KeagzuKTiN+0RG4J6CW4g3o4T8
SRfynybeF8XiPtwDeF+dF4s5/KWYf7sb82/fY25/FO5VaYG5/RNPShxP/ap9
n+u07Wt6faHFDXxL204oopr5oq+5QvQ1swvO2xp8F9PlcO9v8H2+w/c6FN/p
ILE+Y31ehvVf4p6XUNwjQODnM+5V2YP7Guwhh524Z/aT0DO0C3pmO+bitsJ9
CpugZ7rjPhfZvQzz8b6a4Z7ZYULv0XjoPcb9p0OE/uQC6M8CzImtwT0XAZgT
m477WTbhvow3OFcDxTmktqp155Ce4Rz2wr2oF4U+Z0Po88xxYj4qnxH3mFzH
fNSaQPNpDi+K2Phf9HCrvqG0YufbpueuRtJb0d/HiqK/jxegv2+osDt0Fn5C
C9gd2H2St/tXdsQunnM5n6d8OO3qfD+Aj15coZpwMEtmZ0nezloiv7oB9tGz
vn1kPdjH47CPsrkZ8n2LLcQ9trwB99hG4x7bs8A5e6Necw71mq3gU0PwSS/B
J+wpy9vTF6/FfI/ph8U8H3v4e2WYv1o9TczzWYt5PnL5Opbl6/aJPlO2E32m
LOszleEq9VEnbYw66Zc3zdcHfizi6lVmlzLXfeHOq2w735kbQ42AR72P+qYZ
6pt+eF7JqO55aoLnD4l7GPkO7mFMxz2MUcCvrkddVYq6qgnwq9aoq/4aL+qq
vTC/NARzn5Qx92n1S4PJ/ho55HB0W/SZcbV66b6u5a9XGbL4go0QX5yBH35Z
+OH8CvFFFPxwvQ6WuxQz8/nvomFV5qlJXC5VfLKhWQrdoSZTbz/KY12bBl9v
N//C5/d65A2pyKYDIl4gI8QLlogXAkW8QL+fiXhBD/GCEnChzqina6Ge/hrr
G4j1aTvWRxzBiI/oEvg/B/7fII7IBv/ebmI+qsp1MecqAHOujHwmzDgmzWJN
1TuXbnimk8/Ys4eHO2SSv4qY+yFtIeaDaWDuhy/6NKXoT5H1aa6An2OJ/pSZ
8HNiRz/YZBaVxyOvrXmm4pDK2r/3mv/yS6E91b1+rF8s4VadDoZ19EzkY631
rtW8iKezLb1aHGwj4aJhp1Vnt47n9n/GqinOSabrRySztDXSKajQL6KB2lfa
7uzo8lxFSioijqbliKN/II42FXE07UQcHYg4WlPE0SRBHP0UcbQX5oVqof99
M+L9p5hT6ow5bJqYw9bWcOEDC5dsmli2Q2lmVCZbBm3vPrJfmny+kWX5Rrk8
EsvySKbzz09z3pfBzbMn5Ic2yeXBWgljr1unkifsisy+9IR9cRD5Gd4h8jN8
EPmZW8BnqiN/UoP8SShwiauBa5oFXNMz4CEPAXc0F7gjV/iZJ4H7kvmZcvkr
luWv5PJUJMtTyc1bYNm8BRneyRI4zD343XaYfzgGcz4NgG/8gfmKl8V8RboJ
nGQ58FrXgLcch33ZIv/jBLxxs2CR/0l7VKGyoiyVkk/dN295IImf2Vz8Y2ua
T+lHD6ubTsgmM/+lvqMbZnAr45hTc5pl0llx3jhEnDe2xHn7hL7UVehzlPWl
7hbnmTqJ80yncZ5PifNMv8R5Jtl53ijeO7UX75064r1fB65pB+pcZcg/b6+f
TyM/5NOG18c70UjUueTyNiTL2/QV82pYink1fTGv5hTmDZpjHq8Rzrm2yPdS
BvLYG5DvTRH5XpLlsc8i37sf9+peFfqci6DPGwIvZAvc+yLot6tCv9Fo6M+b
0G+eIl/Nq+Ty1VkiX83NRN6b7yFfPQB85iMvLZdvpwDkpbeDTxf87lLo1f34
Xegrmij0FfWEvoJfSonwS3Xgl/YSdRDaIuog9BV1EBL2ghQW19kLKoG9kMm/
SMifVSD/xWL+EsnmLxVj/lLCKzGfMPuKmGvdfI/Q23/7iDmHTzCvex7s3Vdh
Z6kF7GwL2Nn2e1QPF7YrogNfml7XqvX/fvT/brnHIoqmi7lM3EPMZeLXmMtU
AnyUrJ+iAey+jM/vgk/KBZ/uyCOVoi+sBnkkNVsxV/D2ZDEH3hV+SEvhF9Ea
4RdxMPyiS8CxwC/iLfCL7gq/iJbAf9sGv+gu6pvFqItNRl1sE3A+LVH/2oX6
136sMwr+1V2ss0DM0SJXMUeLKjBHS27+AyXWr2+SfH1TNr9Cfn4a5qSR/Jw0
1DdZvr6J+WYkP98MdUySr2Oi7snydU9f5OvMRL6OZyJfh7wWj0Veazv82JPA
CXxGvkgL+aKO4vywhTg/tfZfnJ9T8HPmI7+6Hn7OD/g5nZBf7QU/B/hMfgl8
5kToq16w42ORVy+qn1enFcir+8COb0M9Tgf6MAn6MAx1IgIOti3qRDdQl9kC
HLUD6jKor/EsufraL+iZFqivWUHPFGJ+aTnmknVBvbLLSIEP3Ii6ZzrqnmHA
BxqiD6vhNOHHLgM+8CT6sDTl8IG26OfaA//5M77rGvjbvfBdP0gOmdLVrZgq
830z1F/eZzv/9jVrCyJohV+Zo31qEX06d+vuIcdaOznRxi4vIpAKkgZ/m15T
RD9PFFherYngVQpOgZozA+nAkCfKzb8UUev296/MGBbJfvPOvrr4IYTa4Z5o
2T0X83HPBeausBLmrixCXOaB/lBZPjkTesAX91DL7rnwxD0XZaeuhG0dL6VB
uzzuT96WxiddNl/q+dSPtvyZOnj5MCndXrfymtXGNN6n9j5+rI0/VZV9HttF
JZ+TXfxObA/Oonktnv0zNA+mYF+1SN+8PN4RZNNY52sW9Xj15dHqTWHU5cl+
j3xXCdsWlBZ3vRnNE651rdn0PJncrfrtHHVJStKR6xp80ffijXnBR5v4pNHP
490Hmd7LJaVxW/p3Cc/mUeUNXFL9IujiZk//Pb3zyOP0hFnZK7LZ0vGl17bp
EZTiljKvR3oumSYUTZcaZLP1M7dHje9E0nbtCd8j+tfaMaUR97tOzeNO5sv0
Nm6KoAPpLwwkJ7MpUVttyF2PXP62Oqh98Y1I8mk/PCY7OYu0Jj5x8NmYy8kv
QrpbW8dScmj7P91vp9NH38K8BobZbOOdF/plWia9FHVDGiXqhsSoGz5dZz7/
oNNbmniq9Tu154V03/iR18eMJDoq6DxL0Hk/6JubdlcIUMqjd907mUxPzORH
XQZM/GgZR2MPaJvO2Z5LS7lszlLrLJ7iVfayYnschbrvnNJtdS79ntR0mMbk
LN5/e8HFV7V+znTcQ7Qe9yG6Iw+j8kTMPd6Guf1OmHu8yGiQm/6eWn3cVu3C
rdAo9lyQ79zAUUqPUZ86JupTXDZY1KdM121t2npNLtW06rBg04cMnv1q0noD
yX/vkcvk3uOnwo67YkjK8X33+DwJfst9tCo7FF5Mp+RW5kc8dQrp3bX3D566
RpNW7pSzXWtiKPLZ4pEKXlJu3SbopELPFBo17ub7Sf0D6ZzHPuPHtfHsSJ2G
TxKGh9NXT3/bHVsCyeLATsOUJSX8s7HV0aYHT9HqYfGvf/8LIOfjqq0WVRXS
9sD1yiNr7ebMuwrv1d1D6KKxuL+190txL4wV8h636t9PSh1xP+lt3Dfqgvt6
egwReZiBuJczAvfzquJezkGlj687++aS4c4VNSscsrjbhCnt9UtiKN9r45Dz
hRk04+DB+xOPx/Bdi7s3vo3Np+dZYZWJo5I45NsJqwXRErrwzfuzd3gMJbwP
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
zOvkw0qQz6d5dXKmN83E+dGFnG2E/Gmm3LlqcKXu/HAqzs8/TXF+LMX75ec4
b/3wfruLc8JNlopz4o9zsrief+ikOxb+YSr8t9s4h69wfvphnd/wez9jnUpx
nvmT4Idl53kH9jVC7Itk+2q9UNB9xb5Iti89yOcezs9gyGegOG/UDufNCOdt
hviuSUV81zwC37Wa0AP0AHrJCHpAC3R70BeB3l7oJVoHvRQKvTRZ6B86BT02
FvrnBfpzX6A/VzZfdCLWsRTr0Ces0wu/exd6aRd+dwDoMn01D/QMhaELGm3J
4vZb37ZuHZlJAxtaHK7qnkFNgR8YD/xAHPADxUL/00XYo9bQ/7BfdBx0LdBP
iTiLmmXVxVn8E3GWJvxe2B2+AbuzfXfxJo0pcWTZZbTbwHafaLLyaf2714qo
wa86u0Yawq7ROtg1GT8XYI/a4ndL6/NDHUFfuLbOHpFeoLBHGbBHtsIuc0fY
r7uwXxki3uR0EW/yK8Sbv09P+xe3LZeHliambnJJp0FXiu++HpxGp4Q/wN3h
V1jCH/ACfTboW2R+CHCbt4FLnwbc5kk83wV+hWydQtD3gr4a9OJnurPvKkt4
mZ2yZt+5aXyh6ETbKylRZCb8Ip4t/CKW+UVvhH9FV4V/xZ3gX+2uKI74+TuP
RyVmWdqviaPNhZ4GF19k0Cvh17EL/Mnh8OtcQX8I+jTQzYU/SR/hT0rhT04X
/idZwP/sAv9TDpdFFsBl7cQ6b8Q6JME6L/C7TvAzLfG7b0CHP8zaoC8Qfibv
g585E37mMeGXsjn80mD4pTvN0z+NORrDxacndmkfEkDHP1Tb96j17zUfd7y9
2yubFKT7Xl0OieZn92rcbyjl0iXhz5Oj8Of57wLhzyMuYPl4BPELy8cvsSIe
YRvEI00RjyB+Yfn4JQXPXxPP8x9l8bzsd+XjEcQvLItftEE/Af7vIB7RRjyC
+IXk45cvxfEfKgdJabtz1FNLz1TacWCG4aG/QeSDusxg9B0fRF3mwd2Lq8wz
stnMY2GXq8+ieNWwp30KtXLpwvBmsVs2FXGDxR7TbrWO5fu9d+zYsd2f2Lxp
UIWuhLJdX41/4hhAPf+FmTTRyqAzqAd1FPUgNkZ+LBr30h7GfWcemLv1EHUr
a/TVzkDdqpna58dLzxbzo6l5z4te+JL97Bm7mpiH05Id0WGjtYrJusuJRR21
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
hL/NNxAXmMDfrl9ntNGdDz8Q/jzVCH+e8+DPn/Yt75nwIJd7udwf6bDRjSe3
2bbecn8uHQI/CoIfsgY/Y4XfzvDb+QL89k/g5yL8/wvgp6tl/KFNTfJ5f89X
O7LC0nniDMOmix8n/IffAL6OTwO/IScfMoF85gD/cP6HiO9k+Icbbt47mjV3
pwE1139+CL5NKqFk8iuphNREfETbRXxEIxEfvZTLA8jqUJUiLmM9EZexHuIy
RczrLse87l6Y171GxH3UHHHfesR9d0TcRxdF3EfNEPcBP0kJAh9Cx4APSVpR
dPNalIS7hpdrnu8STlKbVjODylNl8SbfEvEmqSDexHwMWo35GO6Yj4G4leTj
1nARL3OhiJe5EeJlWR6gGPH+YMT7OeCnj+CHfcHPbRGn02oRp9P6+nE61Syq
i9PJEXE68gC8TeQBeAvyALL4+pngk++Bz3d2n6b8GZHLBvp600bHu/GoOeaj
LLNzaSvoWwWdDoPeR+BzeILA53Ax8Dnb39adB/aorjsP3APnYRnop3BOZPS1
iPtyRNxHKYj7QhAflQt9QrehT6oM6/QeZ0LvBULvQd/SMKFvSaZvmwt7Td3g
z6yGvT4v7CApCztIZrCDlcLOkoWws7wEdrYF1ukOu2+MdWI619lxugQ7bgM7
3kXgCVlH4AlJHXhCHYGfpNYCP0lVwE82gL0YDf6DwP/PtolRm1wKOG/Qx8EP
hn+icYa3Lz/9mCmL02k14vRCxL9mQp5cBnnGQJ7IM1As8gypyDNsFvE7zRHx
OyUjfo/Bd70X71EV70t2zv/H+aH/cX5I/vzoNxN44xSBv+Ig4K+qgOP1ETgx
ugOcWIXC5uWq0zN4wvTgTV9f5lB+VNiul2VpFJg2Kuiyykdq9q6Td/U7CU3a
Oll1lW4G7Q68m7LzrzcNsNvt7+4qoZ1WBSNO9cmgKyPLvseV+tLLnucfVqtI
aHOQwX4KzaDu8MM95fzkofDbb8BPjoaffA3rvBDrsGwd2e/2F7/Lst+V8akg
+GQ98PlE0Lkr+NcEfZVYh0eB/9VYZ5f4XXYH/8b43d/wY33Afzn4bw4/3xZx
RxT4r8Tz3vBvf+J5y/rr82qsL8cPy/h5Wp9/1gD/f8X7otniffFHvK8/Ap9M
+siHfEA+pLuSwAc2chfv3RrvfZw4JxSFcxKFc5L69VPfp9USWllxIuNunzRq
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
mKHyd1HVI+Lv+s9K5td9Vjbf7bjYxdQ0QOzieMyfvMrpfpclb9jK3/3Ch+6v
+cOhg38vTSmiuhIvo7USL6NliJd1QZ7RA+CEJwHfO+f8mCnRy1LpsP7p57OO
xNJzs0m+DknZdKpu57iJDRLYe73O+Gf+QezbI7vprZ4FZAT7JRP2ixvkSDL0
eRPYF40gT5teMVuk2+w6N9mZEzXqvgtb90p2afG+mK7APvKD/Oql2EeTrw2e
3CaLx/sUNwqzjOMxQw3qNR6Z/s//Vh9ypDnkSLFTzFGn4cE0rdPKA3Z3QniZ
WTfN+ROKqMqk4ROnWyRwYKJ946gZWdxp0MvUpTPSqNYjbZfW66L4qtmReW83
vOEhXZ/Q/Y6FtBT5swbQT9KQP3sWfrYa0E9WQj+JtFXlq7K5vuSrFiFfNaaB
yn9FW+C/Ku8s/isT4KzeAWcVAD+V498ZR1pMjuJbOw5VPX8njeM0P3ta3c6m
Z5JfwDWqS95EL+QXJIn/iibCf7UG/ivoe9QKeuB06HvlD8v4bTKep2D8WKwn
VNbD4VjPYtAriD+Nr4D+eLfs16iHar+UhP3+wX7vy345Cv66RdD3uiIfORPn
uQ36nhb8ludxnohPcR+sfxTW31TWz25Yf3+sfz78fr+w/htY5xbQu2D9u0Av
l2v4gzafomcdhry6En+f7u1bZVYprZja20necZH8RyrAvnrBD/kB+3LDvnJR
j+KQ1KOgk6hHMW+85INEV5Z8kH74X94PVfeNDOW+0Qzct7ny3+mg/Hf6hf/e
EPqnG95RMfRPQ3kXNFTeBZnhXTwrt+8/x22l8mX+3Yf7mibS2YXPzzu8zaLa
Z+fnZr5N5mtuWi07nctgg2pHP/popNP+E6r3wrkd5L2cwHvRh36YhHd9F++6
yx3V+6Wu9qr3S6vwfrW0VfyBumxQ8Qe6AP7QUfgJGws/4W/gJ7qoIzFC6kiw
BupIHEPeQRfkHawFX8pFneTz6AuwBPz5gtbVrxUsU2jOlTM/anhEklHjSdRo
daldLPyWO4HfaoLfJgm/5aqmwm+1wG/HnJD84vFq/NxI+DmHgJ/ngd9aY34j
1B/4gPoDmg9kfg/EL1IQvyCRO2QjcofqQ+40EHnK3w1U8pRbQJ7+ylLJZd6p
oZLLvAly+ahrYbh7rURavmjH2MsOYfR5X8qNuwvyaYDUWWJrqbPEcaizpCdy
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
n38+qPewEDguF8PuVWY6JfnHkOdZiwbV7TLo1ONit357M/mdjU+8pVMMtUOd
ZBf4vU3g914h87AyT1/Mk1Q/JaDrASVueMqw/+HzTnoaEbR9XPOmg2Yqfq2j
hl9fnt95aF+g2nouGfbAPNll6+NxOdTNywV9GOiaoFfvE1yhuE8OtbA81cdQ
O52z17abWdwyjI5Cv9JG3aT50K9gX9Ae2BcNoJceCjfNPHEzl5Lv9J/rfjaV
oiu3mv7TOoS6zxy34N7AdHo4p354fkgyuQz031FjUQaFrNBYvXlNEV2/PsHf
8NwVL6/iy72CPCLIfFHsEauYFK44/E7aieB0fph0c5XmtTRKPL7u4MLQTF48
6GbFrhUzeG29ZM3Xw2OpTeP0jrrrsjjoyH+9wkOT+aV1cuLoNyn0/mDjxo0z
cujtm/oDT2W8oFu7QoxWjkinyD8OzSNrFNAHkxq1qhvd8zJuk5ZxIzCZ8jA+
QcbzA4xvh/kjZH7ywfwJWM8yWQ+tw3pmY/3lZP3ki/V/q7PnYMLXOK5Q8DnV
NSyPO9tqbV0yLYYi2iZOsYpI5Ny629w3X8vhTUfH5jlHJVJLzVMGmx/Es6Zn
dj/HW6lssbrvmRENsumob+6c2YPu8fuPT82PWrjySz2DhlvSi+nr0/fdG5Ta
N7H1Mpef/xtJncvZDTwzPY8+p+r8se6RRS1HF7YzC3lLdtuvttnlkknzasaO
P5OUQ2ctGu1Z3vmJV8akei4mrTKoV4ztt0aHs4galZR7PvMtl+h0TZs6OpMy
MX+kzM8GmL/ic1lP4ifVeigA62mH9VeV9dNcrF/Zb77sl1Zhv19xPhpyPtQR
51OpzrVHj0d48TvNjO9jU0M59MmdQ8VXi2jM64jl5ercpt3xK4zjYsPpdmZw
q/e2RbT3YL0BLdYHUt5oj7Fa+9JoWKRf3tgxpe98xvCjk7NK9fLZLS7//ZFO
PRpe9fuil019HfwP38mIpZvORX2OL0yl1fPdd24Jyabz7V0/fnmcTA3c8i0q
L4uirD2fbxSV6oujttzzC3ieQo07rAvcUcXX62vikysWg0vtE4zXk/GcifE9
MP9tmZ9XYv7/sB4DWQ93x3pssf5cWT+PwPrbYr+bZL98D/vVxfl8kfOhYJxP
vaJVD3+1ZW60vOEBikmhkKxJzWoW5VEv3VkJn2e6GFbl05Y/wwupZ3rs74kG
MVRFxpOWjOc4jDcI6e33+88FQ/SfJz3UV7/SdVi3ezcuGjqnbjqufTGf6g6K
HvCwWQpVXtk3+qvrFcOBMzW2mQ3Ope16K7IWXUqn8pc6P+ra+JZh8uKlE0dG
ZJDhtt7OkWNyKO7VBw/dVncNLav/p/O9ZxzNqrAx1XVJISVV86+zw/Me6jf5
eyl1nKIwfrOM5+kYr8yfJvNzH8yvrGeIrIe3Yj1Xsf5Tsn6ug/V3x36VuvJK
PfkeOLdqcm7cHef2JcX2aSuf44bNAlpXPzuziK/1f++oPSCSNqVVazWzekyp
0rhuzvIr+fx4iP5a203R9EHeI/eW98j2eI/gS6zwpQngS1tXDclJ7JXLGS+X
TXArlXuWvavOmfwynKybzq14dHIOa8169XLZmnha3PeGZXrVFFrh1aRBR91C
yrQ5aPT311uu0+xrrWH9omjSnRlbD24q4sVO5d7WXHnFq3BYSGy1/RG0EuM/
yvhSm17Gb8Z3M+W7vBrf/WifU6nV4Vxad67xBK1DqbzncLU/9hvfkuGxm1Pz
9YMpodmN2nMnPub5tmvsk2oXU9fPaRVOdyrgz0ljPbPfxNGiEg/v3QVvaVnQ
B8cl7Yoo+5vu2HYXXvMZd8c+c6eHUkW32zkj8op4ZNq44fPcL3pF7Fy9LNsu
9N/4DzKezmJ8F8xfIvPzEswf8/KtW+c9Udyow71H9xe8oj+J2vvSS+2ivY6D
n3fRLqC8VVPnXLJP4BG3Jtw/1vc1dXZNvuYxLYeHv+ndbW3LCNL2yimqt7rU
vtO/PWr/9tL/3X/8vMQZYTQ68lKvAs8w+vnFZGXQiCJKnPLJ59Szl/yzZ41z
tp9DyaRuTIBl6b13Xec6U//VPT778sS+aVvTKezjzOYnuhWzQ9HBVctiL3hd
29ro/ibHYNqJ8REynswx/jvmT5f5qVovmd8Q6+kj6+G+WE9drL+7rJ/7Y/1T
nIbYGjUvoJ6nJ3e0OZhAif5JGdYDgujEs5wRLXxSuGmyQU7Rggj+Walhm/jN
uYocZ8hxToIc94T9NVzsL3KH/dV75iyfo8n53HXBhTp/fyRwgM3030ueBNNW
k/x2duee0oW4scM1m7tRpb/fPq0IKqbejqF3Jp0spGNDfx+73DScQr/FxU4e
HEq7G6T7O9Qt5P7r9+RWavWKh3ld/9g0KYaatzjccJR/Pk/8eDLn1b3HbHGv
b2ztnu8o77zUmfE6LXno1ZCHHtP/tvXuQ0Vs28/24H+bX9B+6z9rLezeUFyD
U73nfiqg6S8bvGxrEsp/coIHekZEUSWXUWs+v8uncb9da+u0i+LRHwI8vxrF
UK6ugTb3LeBGtSebNv8eT6NP7F6Y+SWIhvh1W9kx6A7NcYyb5RnlxiEtzVt1
zymm5PtVWptXyqP0LY5V5+5J5bZjkge90A4kd+QX/IB9ZA376K73vGVGD/Np
95gEHcf8eFpn8txpVame7Ojmbrz8QR71m+U9qH9MBG08fKN1dsskurKt4ueB
foXsNaKe6cczb3hgk7NtBsaG0TW3LzbbMvP4SbvP71o+8+aL46nO1+yUf/58
N/ipLGHXLx8ccGpFVhY/2u3eIi8wmE6mDrA1aJ9JNn/y1pTsKqD1loGfB66K
5d+8yeHWqrfkPGH4so8dSvmlS3L8vreR3FR/8ZfjS7OpvtPLxy618rjL/m3j
77VNpUvOO7rfXRFMK5o9+bWiKJEPNzsRtmdiNEXPOaR9blgerSjokNEstIBN
dp2tPvdZOKcdrRgY5BRJtiOn1XtaK49evVkT4nEwhfXuWze+/zqUmkndFYru
InVXSlCvY7WR/9Wupx7x76+r6nd3LdWzdxvUWulUSHUcxmf8tgniiVtTvRb0
S6dTB/q83XI/h2ot3nimY1o4W2sONIowz6BqfZ2qprzIIq9aA94/c4hl3xZa
HwdVS6Nbkdn7rlhkk+G8qgEbFiezcdtU3eNPYiilmt6yuXtz6bvUOeRBqHPo
jTqBK9/v7z7dOI7PFRa8+uqQwntMu/V/ObpU7vDjrOL3EbytdZcrcYnp7BhU
7JxVapcP+Zzc67R5MK+KamtjPD6daz5aGmy3K4fO22xe9vz7U05Y9fX71+A4
1tZaVVVfu5DuNJlxtFIPZ/q7bYHNjv3HKXFC03b3fxbTtVfNPDvX96KxWZc6
tfyZSCcLH/+0mlBAxWVxxf/w0m9nWthWupdE9UreJE53y+SgpwOm7x2fRllH
s5rUjg2k2UaVe3YNDmaaWUfn6Y4i6jjB0nxYViw3mNncekzPCDp9LedEXHI+
vVo2wHrvzkyeGxKZV9k9nP40Nrhp/yqT6pTti8St0BfJdVObuv7szf6/Ds/7
9NuL6+/4WOh8sJgaLWkfM+R2HLXJ6eT7eVcKzdF61XFt7xwatOBsfJvUJNr0
rnDSySk59NPRb9iHrEQymW7nP3V9PF0Jb13hWM88OhcTv/Tj+jjyDQ1c8yUn
hiqMG5QSfi2fxnr5zU/bEUXV69aLDcrLos4FA7UXeKVyXd1nuTdaJ9DhA7er
R0/JIivn15t62qdR5+AFvw79jKc5PvEPdvXM4kr+lUPPv8/gZM0Tu2b0iqA2
2g67HPLTuPqO+46xHRLo1r0brjYfMqlKpTDr98FZPHuqwbWPjzJ4/J9v15aU
vt8NiWvX7PNMp68WWl199iRTfv0O7tFVM2jxOk+3zLp5NNt0RwuH/Snk0rty
4Qb/Unnx2yHLvms+v3vauUW3ua/49DNb98DN7+jA1vStcVNT+fMVvz2e+k+p
UeZC07O38ig2ov/LZVOzyNv+tWFV6xTuPXPscpuEd1Tnp/mTEwaZ/Nhz3fgE
mzTa6pfeRWddMgX2CU7T7ZVBl/U/Xlxll0VPe3e6Wz80kubLfqmi7JcisN9r
Jfs1NmwMpQHrF16Otwik0brRDpZDiv7lddqq9ZH3fbRtu0OPfC7apNfqzMQY
vhPu3XTq5FJ999pm79NtH/G8ps2/fg114gZP7m83SCwms+tC1/lPRad6oPtg
nkKZhx5gHqVfvNKHtwW+64F1jpR18kiscy72pYH/+A77Us7hkpwD++Acnocs
D3cekETdVoY86lk1i1xnW3ps1kijx7ZWbneqltolh1s2GzYggw452kccW5VB
o5o0zChvFsCf3od+cFkXwl/1nTcU3yw9n/Mz77kFJ3Hnz/GFa9en8dqJJg86
WWdSLbmHrI97qIV72Bf94lejX/Mo1OW22q7j9qN2Co8OjHm0bWsYz/Wb4+4y
KI8WnRj6sF/7OOpwYsUVm/nPySzuxbTMWoX08Nf4y/pDMmjola5b5psEUie9
L1UPfcimK6APFDr3Br075qku8/AyzOOA786X79IEfPe4vBfegPfSFu8lEftt
JfulXdhvZZyPq5wPlesm5/MS56lxRHWevB3nGYzz7yvnzydw/q/kXTPeNQ/B
uzZ3bhA+/1gcby2082q+OJ9PtncefjAnkmYLf+BLwh/YBfwB/JCVvBJT8MMR
wmd4rfAZrnpA+EzPYyp+yPfBD3uBH9YVfkiVwA9dwQ9nz3iZfn1CNpmNfzH7
xqKXFPHjwUjrZplEVvtev7+RQxU/VxzuuPAubbmrXXGfUQYZgd5X6LwVdFPM
s0Hm4SjM82e8fPePqeq7fAXfbSz8k5uDf84H/xyGfW0A/9TAvgpxDjHINzHB
OVxNf/sjvncCh7yw2TshsvR/v/Dx9QmNoqciH+k55ONNyEcjkY80A/IxCfKx
L+iLhM7xoD/CPAEyD9/APBjPphifXHY8+2G88t3p4P/u+L8K/8e5Mc6NlHPD
OXMVnPM2nLOn3DfujPd+E/ctoLHq3tIIvGst3Fsj1M/fjnc6CO90gLwjboD3
uATv6JG8Ox6Bd9cB726DvC8agfc1D++rRN4RGeAdWeIdXZP3wvnCf9gF78VP
+Bi7gp9ng48p8ksT/DwDfG+w8Em+sE74+VzwSW/ht1QAvu0Jfjta+DaV6Arf
1gF/Pg26ifBzalCWbxP4P3lgHvX4tdI/fS7W80bWw6ZYzzysH/KII8vybXYH
336E/WqJ/KVZkL+mkL/lRQ7SdZGDHAQ5eEjkMjdZLHI5AHJ5aNtnxoPeZXA3
nZEZLSOSaf77ec0zPNOocFzmgDb1w8nm92WTqHk+/F9rz2Yly4povMhrCoe8
fgJ5vUPkNWWIvOYWkNe3Qe9+VeR4edCnY550mYeOYR6T2cm/n2yP5UG8+5uh
yyt+7z/tum5ewT88myn6s68Hng16BUOv4AvQK+JFT2Af6AmdoSdsxTloyDlw
Cs6hGs7tIfSHYzi3yjjnOXLOZIJz1m6u0vOpdnOVns+O0PMXib5ES0RfYlPo
S4ViR3C5Cyo7ggK6ih1xROwdHgh7Zy7snQlR1nNTS/c96+zRtT2PhPCUM5sc
VmvH0Euxd+ir2Du0HvbORbGPKEjsI5oB+wh2Da+BXVPJR+yaIKwnCXZNLtZz
A/GsSpIPTlNhry1PG/7xSb08etEsueUhvVTaEqsZ/nRMME3ev6Zbq/a5ZF9y
6kHot1TqFb9q77otoernQ8r5OKMvfFN76Qtvhb7wkTXq7ds+vpDH+5ecblAY
RsOm921Wc2E49c1oaG4wL4+SBnlcDA1OIbMVAeEmOq9pke+GvHZn8zhsfuTx
rHuJ7L9Zr8uuT5H0e9icKY3q5/OlVa+TtiTF8OcmFfS0pscqfgxS/Bij4Dew
Hxfaa+3eB6X2+7mb73s48aYnRxNjU0rtrJFCHzRHRSd70DWHy/y3ZH56jfnv
vrLfp5WXyjV0O09Ks0xg7xyDs2EeWdRujd1rszZ5nH1o7OqMlSmcXGJyPeFp
qOIXok9qfqHJg/e1sNDKJbffnxr/KoijSwecxj0am0zvy+ahkxZwFJbiF2J1
P9IW4LUqo0+igtfyv1fZPOhZIf+ZbXkgbaE/N5p9Uuf0uCh6CXrVOSo6VQJd
+e4c4De+A193vbtFyuUVkfw84OTa4/VDuZHfiS/TBhTSFvGbkeKvWwm/2d2g
55Ftj5bqn0s8076MeEeJr3v12ZucRqtmLc+p2i2X6nbeNqHi+QSyc648ZJp+
Iuk5j3t2wDePdxxI89hVLZpnT9ywbeKkBMVfxxnw79WCvy61rZ6m+YUCWnpr
rNlKp3tkO6tVbnH7RPpAGtWaBBZShMkiXYuH7rxj/84nzj1iqNl/9uc6rEkj
A82nDpON7/MnI82ZSyvl0XLY6bPFTqdU2Om6WM9OWQ9twnq+4Bw0XqjOgTRw
DtNS9d3Prc7ihw9SkzIcM2lHxoNhe+JCaKD97WoLN2XSeO/s3ivqZ1HMVsM/
f2aGUZCaneINPl/h/NFE4yoJ1PF3am2vqHT6szq03M72pfLRfrHtuNuZ1LLj
ttWDT6TRnSHZO5YmJVLvYKumddwyOP/Nn7EzxiWW8r0RL8Z+TKcNVjXGrM1J
57+379q/qJvJjfzdqo9olEB3B3tMOvQ2hzPzl16eqRHG+162aPR3ShrNb2x9
e15hAXlcXxLzPeoeObeqeWZbbjzNA/2O0Pk06HebBdbYNCOHljjv+jT3rg+f
3Vxn05tpGfQM83+S+ckK89/C+tvJ+tkZ67dFn/QI9KX9hXzbdWXXT82x/o3f
H1boaZ1Cszqu7xUXkM51T07TPaqRTqYpdzYdaB7LQSffNSqqk88Xt6ZEv9aL
pdT6FyOD3N/R1LhTn+sb55Jzz+gdz0v5asGb1+8MjiXwVONONybWyOPiKuXM
RuXG0veRmye5ayfx7HZO3t4GWVy/d7TB4bRUamJa1XuhXgSvaNHh+N1DkWw9
12nqGZ8CijfePTTmWR7t/WnaIv7OM6rY66BBcOdSuWj7pbG3dz75mozynnX1
HrXcl7jGe+c7Sgc9XejcCvTzw25ssqqST+NsHJ69c/XmSzbvx364lUILy+r/
5AT9X81eIMVesBY/PM+DH/4B/PDN0K88F32cm8BfESD+DTKHf6NcE/FvJLRw
bTE/IYq845dmvGmdTv227plp0y2bHh+zbmcxL4XCRvRfHhH1gjb9971cQXoe
+WKe5TIPV8A8jzD+vYznjRjf4FzqV/P3CbS1gtPoqYZJ3DC+fXnrkByKwnd9
5LvcF999UPJWs5XLHcO8A+84bVwqeaxvaFCcl0d1+1r57x19z/BlD7M2cWFB
9L1aw3HtRhf/oxcInb+C/gTzvJd5+Cbm6bfVpe8xl/N0nrf7nrl6jKraNhxt
+aOYFnserf7Vy5cP2rQaMsMnmU6VOzqg+cPS/2q8pkv/z7cNB6vFfVpLnIt7
IO6mjzjXFp/PLYOT3/LymhcGtUxKJ4eqGkWtg7Kpj8TLWInHrUK8LF7OgXEO
1AfncEbibqyDOF024m6N4Y8qxP9tiv87XOJ33ATxu2+I3z2U/8Lq//Ek5leP
6ynj1f+jAdZ/Ry3eF431++I/KusfFfDlxcHbZ5Q42r841Lqy58OOOJ/ZOH87
OX8+h/O/iP/VyVv1v1j5X2fbVeqeMc+fdGzmtjyzP5me/77afqJ7PpVIvJUQ
b2Ul3jpT+Aa9Bt84C74RLnFbykGcehvitn0kXsxdJV5MXxAvnivxZT6H+HIm
4st4X2yBd/EX/sMciS9zDOLL3RBf/i7xbgpSiy9farKmcX7HMB6ZNbVz4soQ
vr6+eaV1xYXUQuLOVBFxZ3PEndsLvyIb4Ve0HvwqFPvKQzzaCvuyQ92DCLX+
4F9wbppqceps4Z8E/knvwT+nlz1POo/zXF7P9LvX8+fc/vY00357XlDG7OCl
+m2KFT5PFe6InGoMPq8nOAR6BZxDCHAI4RqTjS6cvkvug28U2ySeY1NjnyXO
WcUUKXyYL4IPVwMfBr9lf/BbPfBb4B84UQ3/kK4p818aqpqfTDA/cBcUDlyE
P9YzU/AP9HeY4B/8gH94hP0el/1yEvabJPKIJ4k84suQR/nnVHKfG4vcZ501
ZeQ+t4LcvwW5CTlOihzfDzkLec2Q13S2rBznu5Djp0C/L3Kcl0OOn4Ecf4r5
P0COb8X8XUTfoAzRN6gX9I0bWKci389inUai//BE0X84DvrPXDX/cxTs3/ui
N/JN0Rs5Fnqjtch9Xgi5XwVyf6roXQS9ixW9S61PNx+CPgx9j2YhLpMIfS9L
9EmeA31yDfTJT6JPcojok7QJ+qSCLz0CHKkV4k0PYK+FIj51BPbaqA6fl7gV
FnJ5/3Opd6ddYV2nh86Ra6LpHb67Wr7LDvhu9aB7B+ZULKRuO/qxcUY43Sup
F/F6QASNFXuBXcReYF/YC7fFHqHKYo+QL+yRRoJH4oPAI70EHgl2E12E3fQd
ds1/Yh/R6/liH1nDDqo89pCL9olcXnJnWKfNDh7kENx7gq9OOv0acNht2ZMi
vtpnbswAnTP08MrGEYkhYfQT9B9CZ2/Q88fIPBYyD3tgnlpif1HKbLG/9uC7
GmJ/0U3YX5FY51yxBylY7EFKgz0I+5Hfif3Ik2E/1lk6cWPywQLe8KnKz56T
QlmzT4LTt+AYmgy7YKbYBfQWdoFPWf2WHPEuTKBnBoK/uYO/3RK5w+m7VHKH
30DujNquklMc+LSsXmEkco3mQ6+4Arm2VuQgLYaecAhycCnoiyAfj4DeG/PM
gny8hnke47vTPMvKx/tY5wdZJwVjncchN6uK3OQA0HVET+MNoqdRE+hpX0RP
JujJpAM9GTg0DgMO7Sb4qi/4zFKcpwPO09d574ajb0vlWK2bmzoudKdn8wYt
P14vhp6AbiR0Tgc91eiVybGwQpppe5B50nWamDOvW/q3aEoCfavQeQno3xF/
OYr4S1348ZoERt4YWz6VrKhgOfu+ZHrftEXJmjxyra3CF9Eb4K8igC8aH6zC
I3Ew8FeXgEe6IPgl/gr8VX/gl5pDD+wJvJOiBzph/GfgnQZgfCPM/xR4pyuY
/wHWkwa8UxjWswByRxO4wSeQO51lX7xP9kUG2FeanA//j3Pj7Ti3paDjv3Bz
tf/iCfoA/Jc00A840bbaFnm0xtvewmxbCjm9fe10zyWE3qEfaD30M9qBPkT1
dG79NUrN5NcJgw6Ue+/HIyy+P2sYmkXHP4WvrmWTQ8euhQ34dPsyOxZnmLvZ
ZdBs8Tuxg/id+H2c+J1uAW+godav2QN4gz3AG2wA3sAJeIMh8L+Ng//tIXAF
IeDbh8C3s4RfkcKvnoBfaSH+eAt+17vwH+qr9Xf+hv5WwzZrt6nwK4eG9IzI
GHYklfKcSuKS6kXQR/Rxnoy83V3wc3qf3Hh/2c9cmlTtjtWlZUlk0upxk2WV
YmihscpPy/nw01aBnzapz/nC9YtyefKdNy+8nkexbnjc4KV6KTQHcdWL8NP2
hT9Ww6j5fVebV0T+F2uv7HeCosfXvb1wUfG/OK8Z/J9j4P9c8Pmaf9iOLL4w
dEIbmz6Z9Nh+96wIi1C6XdauJyfI/R7wS+TCL9EVegIj7pkJP/wz+M8fwW9Q
AH3GBvrGfdDzoYfsBr0I8dAriIcawq/ujvW0gB7yDOvp2ck/zS/mLr1ffOLL
xuw3fDC20nouKaIv4/MPlrucwpM6fbdr9NWHarn+3mT0t1TPHZF9Zea0Uvto
QetLU4cE8/WzgZH3nfLIEn2Q0deSlb6WXR6Uv1S1ZShvtt7bpfOUDL7X6f6v
mrOyqei7a4c2eX7sNsdzdLBLCj8K7De8XVoeXfxu3vvopaP8pPxCO83pz7nr
F9+teVeLqfbk3F/O5k/Id9eW+J3tYmlw8fTIcRsKqY2V4Ar6/BZcQR3gCuoB
V6DExRYiLjYUuAIlLvYXuAJ3jZdn/tuXQsNyLv4I2pDOHcu5JSUOL9VbEccZ
jbhqc8Rx8h9edui9MptNXvdsvqf4Je1/8W1z3qcMmmswOsvytA9/3DtkTeMO
17nd4Jkdmt0upmGIHzmi/3IvxI9maF+KXTs4i8bVqxp7b2QSrdy8fEqfJ6m0
uqz+Ty2g/48MHjqtTuk7q+JRd+NB40yq7xXYtdPNRNqGuNWXYom31kLc6oT+
9+gtew6zUcDKii+HTefr/dyGBP0pJj/Ev3oi3uqC+NekE6N/a4e/Y506qdX6
f83htV33zwkYE0v+VyTuY9FE4kG6kBeKnrwQ8kvRkx9CT8a9JVvczxy1eFAX
xIP6Q3/+CP25Nd6FLeJE1XGfJ+I+X4de3Rb3+SLusy/iRBcQJ/oA/6Et9GRL
6MlfnURPLvYWHNe8PSocF8UBxxW5VuPwpZAUjj5YvHnE5nBuceNlh/rncikK
+LGJgh+jprmCH9sG3NoAwa3RauDWYhoIPz8u/JzswM+HTxNc3N1YFS6OqwIX
p4abYgU3tQn0k6CHg+4FXFaIxC/oB+IXfqBHgf4B9APAfSUK7otXAfd1CvRc
0BeA7gy5MFLkAg+GXHADfRLojUBX44es8MOjjev4D/A6y6tjunTcEnSIK/kl
7V/9s5hWj/hz5NjyTPJreKuZWXA0Tbm1UvdmfAYFGQof5ucqPsyZ4MMzkDfd
GvnUr5FPfRH8TRf8Nhr3wUTuM+nKfaYZuM/nDVTvguZ+Ur0LUt7FVeEDrM4H
Zso7ZbxTXoZ3umxIlfC230K4+vO77m/tn/HRa4NjK2cUKfyBpgp/YEfwh+o9
5btZbVap3uM1fFfBIWwEDuEH+FKo4LW4rhpeqwni/nrC39gM/K02cAv2wC30
B27hi+CvqIbwSdIGn6wj+DSyEnwaHQQ+rSL6C7dGP1wGzq2T8H96I/yfroH/
1+hv3O5uUgp5h39dlt30Cv1OrXNfu20+fRU5QvqQIzUhR2pi/OgI1XhWHw+5
wzXKyh0qhNy5iu8mGdYq1s28Y1gI/+dt+C1nObuObfbXw3AN8OSmwIevX2vZ
ycvW3TAH4+9i/JTp3bsbG901jIW/9Bv8ovtNtC67tbtt+AD0H6D/Ag6wu9r5
KPLxHs7nBtYZ4TiibqGph6H9xituB80j/uHYbTF/PPyxyncnYT2/QS8BvZqc
G7+Sc+ZyaXJunyGvV+PclHM2wznsAk7eBOewDueAc+NbOAe7i09S79+6aJgC
/Hw/4OdbyL0id7lX1Af3ajjoMaD3AD0MOMOGcm/JD/cW95l0QWfQ53QWOXVo
R9n3OHKo6n3RN3lfZIP35Yq6pudQt3806pqq8XlS+PxlyKlF8OfcgJzSg9yJ
gdwZAbkzX/gYuarxMV1S8SU+EiD6YSD4UuoAodcSvZFjQI8T/ZOgf1JL6J+7
he9xqvA97gO+B/2WJ4t+yzOg3yZ0UvFP2p2l4p9UHvyzE/rG9kPf2L/Qq9XW
/08v3Y84ex/o+dvAt+/DPxODePpR6PkrRS6QJ3DCx8vKBR4F/k+YB/YFw75g
Bc98A3F2Rpy9KvDD1xBnL2dQtp8s7BpyRDy9AHbNe5GD9BW44jOQg4cmquQp
p0YKzvw/yNNg9HvVgJ11DnbWTpHXBHnNcyCvh4r9RV9gfzWAvLbCeCPId3uM
r4zxDPk+BeOhJzD0BG4APaEH6og6SB1Rvo46olsnyPpLIkQfaIH1n/xMca9X
5VOu3d1hK3IS6eHj+0Y97d7SO1bpLbxkr+DPo6G3WIreQktEbyFr6C1x6D+7
HHnTdsDtO4p9yrBP+RDs01mSF0BxSaq8AOqiJXkBa8IOjusRk8jTo7v8rnE6
lLUmtzw1a2o+LQEOf4vg8Lk2cPiBsFsfiN1KE2C3boA+4wR9JgL/scRszL7D
DVPZ8Ei37KC9EaX63QiTA31zaWTXId1b/Cy1p5dcm31ntQ91XVplc/a8QvoE
O3Qh/G+XYIdWEL8cKX65o6B7wZ5Nxj23xz1/BfpH0NeC7gI9xxj3vB3u+ZjT
Ry/OfxpKrmlmVbZmvqbbk3f/SmtQRLobh/Qa4pTFfxbU1PndopR/VvI6EvP/
4tfxzSvfnJxD7UdazdXYm0qNNz/0L5waTecLZntcdU+nyb3dCvTrRdLND6NL
/Dpm09DYevWmBWZy7241U8baRLB12M1vF8Zn0t1Gt1Jvj7nOLd+lPDpRwYWf
Nt9xddr7YmqK75ZbqPoudcZ3D69Yl272PY2sD0bEHstKpvG1AsbS+QxKWXS0
oHy/aA5alx/gfDeR9a9UDflumkceV3d3KfGM5maDrlvZHwzlgM5X/T28CxS7
g7XE7uAmsDs0lvLIco5pvMt1fUZ+oyhOMJ7h3SY2m3wwv7vMT4Mwf86v3OSJ
+tHUd1WPDn9ikunVgMtndHxyqTgof0n28ifcLrtk6Dg/P879+aLq83XFdCvi
V7uv3d+RdlbMl+kaOUTtOi/rcSiRjgrunYcK7p3PAPf+n9iJnCd2IveDnbga
/VvPdZU8go/II/jVUWX/sj3sXyfYvyPK4ie5AvCTuxqrcPhsaq3C4XMScPjm
YreSm9itZAC71UjyFCgOeQr6yFMIh17XAHpdAORgA+h1TaHXmUOvuyl5AZQu
eQFUB3kB6WJH0ymxo8kLdrSG5EHQSORBXEAexA/0k12NfrKz0V8V8p1PQW/s
Czk+VvIUaLnkKVAt5CnArqdNYtfTQ9j1IzHeEnkNdTC+A8ZvhB/gEcb/3ifr
HC7rZDes8wz2G408iHrYbxL2ewJ+A8Z+B+oNqZ3e+yKN+VRyMGJIEGvsyHdp
O6aYwvC/Fm+WvAnlf1XE/7KGn6E7/lcg7sk09Ictxj2pLH4Svij3hI7jnqjd
Q1LuYSvcw4/wV/TBPVTLx2QlH1Mtj4OVPI7K8Ht44j4PxTwbkA/ycavcQyUf
5Af8Jym4h12wL/81mSkTfNbShvnFo77PvEktf1d+Z/mx1H5Hvkmu2r36Bv/M
Fdyr+zjnBavn3LZr4ssT25VUSi1JIkpfWHH+p3wag3yW1bgn1fHfDeD/2YJ7
chf/3cD9bVX/hW/Yrpv5U63CdNpVt641J2RTZeTvGOM+nMV9yNrQPrzfhFcc
+t544qRpadxuw/lMv125pCP/nZviv1fCfz/i2Fmjb+Qd7lZxzpMPp8O5MKIg
0d6hiDYin8hW+AB9wv8dBj9Y7SXyfw/g/84YOml4w/Z3yNtjibNHzkuK8rtl
rW9WTL2h9z6H3tsT7+Wr8D3KBF/VA9+rLnySjgufpFDwyT7C9+h6lorv0Xvw
vULhk2wofJJfgk9GY34f8NUemP+K8EmuJXySJ4NPNha5QL8hj0ZALvhcFX/O
cOB7G8Gfc1LiAtQbcQFt0I+IXKAaIhfoDeRCXD2VPKKoRJU8Ih/IoxMid9hB
5A4PhdzZCn/OT+B+p8Cf8wJ+GyUv4yX8NpCnpMg1A6zfDfqqB/zSHpDXbURu
kp7ITToDuXlT5CwvFDnLZyFn/8Sp5DJ3FLnMrSCXv59SyXduJvKdfSHf3yFO
Nwl6hS/0Cj/QJ8IfngP6FujPr6E/20F/vgZ92FtNH17f+172tfWRdOKH8c/b
K31ogMukmrZVi2immj78A/pwAfThEujDZ6FHaRQ2OK3zIZcHrhk/56nvO77S
Yv6KN+kRtOWs9O39T/r2ckvoaTdFT+Nb0NNWQ0/bBPp+xB1ug/762YvZb0b4
8oNXs2KMnA9yw5O/AzXvF9MXFrpvsIpOFUG3h19aA/lEih9vhPAlfqrGl6YL
n6FB4DNDwWf0hW/QLvANO/CNZOEPFAj+0AX8YaPwAWoGPvAefGCAvGs+h3cd
g3etlv9OSv57OTlP6ifnST44T7V8T1LyPY3Ln9mv1yuPKm1d9Su2QiqFDXt7
yszpNV3rpfq/nP9d9X/ZHP8XdhD/Rn6oBeygY9A/CfbaLOifarjKf/F9K+AA
Z8P+rQM8wLCy+hu1hv42X/AY1AL4kyzgMZT8ms3IrzkFfN0HwZlwohrOpBny
YqogL8YF+Slvu6n84VQe/vDO8Ie/AE5PAzi9QcDp6eO/WMt/4Vj8l0P4jz3k
P5LCzyEXKFj+O3XAf68h+Z5khXzPGsj3zFt4qPMU3TD69qekwviGGRQwxthr
yoJs6oB7tUPuFdvjXhnjHnaXe8gjcQ9nrJV7O0zuLSv3Vg1nSArOcLh1YfLD
mk95sZtVF9/oeHJp/PzVmPgCGgX5chr7Ve6hO+TXQOw3D/sthByMxH5bY7/Z
si/+hX35YV/7TSxobflwDjuvZ1NjUgb1n9l81v2K2dQJ8tcW+7XBfmdAvg/D
fgdjv7myX8qaV3a/8+SekJKHdRr3ZIEaXcnPUsvTZCVPE/eBNEE3Aj0BeaO/
kTeq+C3VxpMy3h90DXX8Z1mcDCk4mWpzKu9sZZvLa0Yn7HCplcpFNZ43/akT
TmsFj82NBY/Nq4DH/iY4Z6qohnO2RF7AS+QF2CEvQA2H8w//7Cn8k5zU+Ge6
8E9yVeOfOWL/crmlKvuXq8H+rTtXZS/TPLGXqSbsZeStUwPkrU9C3vqFkD5V
tczyaXtOnyfr38TStPvlT2z4G0WbpjR7XpFz6ayBTf4B91RqE9i35Y/mwXQ3
VGXvU3GUyt6nUbD31fAzrOBnwA9ZyX9vXpYfchXhh/wS/BD1EGifWj2EN1e+
LmqzpYg0tSK67S24QONnVLlvPSVCqXtASt2DPshf2IJ+wUHoFxwMv8qv1Npr
ZliX2g0H+4d8MYzkmTXPDnOpFEI9AlV1IehlR1VdCL6CuhCoO0FK3Ylw1J0A
noecgOfxAG7n7ZrmDkONC7h5+IhLvfuH0s/cpprPasSRHfIgwpoI7ugjcEe1
st9p3hl1n35+rr3LeZ0zzx4c/dkjvZjckBdwBPiuEuC72iFenAD/5ED4J/OR
D6vE0ZT6rjbNh2zo+jiLZ7f6dvhv3zSKrOHfT3tnPBmXPNkXdjKdVo/T7DFq
eyRHTBybnNY8m76tbLxt5MJg0gg+XP/pmtdc13XZgHmriqgjcN17gZNcC5xk
fll8OBUA31jOoUbafxHnDd0sKw4aWnruqaseXjt6PooqLtsb1q3mBcMD86uk
WawvpOHN7v70/xNL5lM7+h/p5maor7Wz5ZbFBTTObrlJ9PokKvfTc7631WXD
1uhrrPQpq9hl+Y7NXa8b7qmyOS9kYTYNajShm2NUJs3HPN1kHh6NedS+y0Pw
3RLgc0yBY28CfI4OcKEWwLFvwX5/AI+agHpKnYBHHbBKdW7cQ86NquHc4oFX
rI48hXbAK7bvOqn25WZp5P1qzjg/20hOt2n/6O6YHCLgACcgD0LBAQZDH76C
PIib0If7wF9dCPxABwU/EKvd4k5IHk0b9trK63ACz6hWuThte9S//DsbtXzt
5HTVPWTjYtU9pMW4h4crvP4aPSaPe3r9Ldjjm0J5483cSwKC6WzNE3qOL4to
YWiQd3fd53x2bPSABV9D6JmJUdBQ20JKMzzpYk2RpHfd4NqsWf/GszL+FMaj
Tgt9QZ2Wpcj3wXept3yXX+K7b4HfGAf/eXf4z71lvzxD9kvTsV+cJym4ygic
52Tc/+Vy/ykU91/JN/+AvMWbwF30l//FcfK/6C3+VzzifdsQj9iHeMQcxAen
I45vjvjgK7V8cz/8R23ks/QDrrUA+SwzJK5BqxDXmIq4hlock5U45jHE9R6r
1VUYC39OhFpcpg38S52AizCBf+kn8jvmAbdWB+9CzU9F/vBTKfnF1sBRfEK8
shzeqYO8Ux6Ad1p+3eFlDYJuKXElUuJK+purL/SwdjXcjXc9GOP/rJXxGYhD
9cb4dhi/D/MTxg8qi+v4569T8B7rQK8Eek3gQ3ThZ7PAOVQBvQHoy0GvAJxJ
I7X46W7QHUGvBboajoIUHEUu8OFTkF/zGfyze7891vb5mRR9QbvdgtoZfLL/
43X23jE0FfiQwYg7b8K9wn3mFWr3eRzoa9X4/C6RCzRd5AK/g1yYq5YvnAC8
sT/wxj7IU/OGPGrYQeJQf9Mljq/EoTIR5zIBzqoG3mkC8LeDkA+4H3JQLY7D
ShwnVuQpQZ5yFOTpHtjRUcAnbIIdrfCl5cJnyBF85rfIfY4TuU9TIPe1pc4P
T5Q6P1QJdX5+nLbffbNGIZ/YUhS4/3wk1RnjeGZv2zDyEv7GmcLfuCv4m8+R
O4stu+SRm98Uz2YTS+07uyd127979a9eEPQungK964zoXbxB9C62ht5VHXWH
xmM9bbCeX7IeOob1VMF6Zru08X3SqYAdDA+0P9U3nke/8XfqYf+Gvt2YvLJD
w2KqvN3RdHiEPTeavHp6xe5vKAh6VCvRo3gR9KjvmB/75XqYv7bUjyID1I8a
gPpRrlj/VuiNpli/YudWVtPrVog+zMiTZWvowwrdH/S9avQA0LeBbot6RKsl
b5cqIG9XqVO0AvRaoCv1jk79j37Kx9Vw6b+h1/kAj/0Aep2i7+WA/gR0Ra6p
3zcr4Gf84edxwP3U15e4VTfo7T+WiN6urH8t8pGrYf1qOB9ScD7JXLfJxqIM
tjN6MWdteir//uCxkYxTqIbYL7RK7BfKhf2S0Wpn57Od8uivxeuJDdqnULXb
T5ZucQ2jZogr6cI/dgn+sYWoV/NO6tVwpQaSDx6pK7idSnESd1ZwO40qu96w
a5BOtSuUWFs0yKJ2s552eNornvqiDq0B+mZuQx1aJd/TGHpONOSyUn9G4T9x
4D9zxT/Jv4E3aww/5BPgzxcDb3YccfxCjF8Df2ZDjP8EHM444PRsgcO5rpan
eVnBXQNX+R24tdVK/gjW+f8VduZRPWf/H2fssg5mqiHLWBrrxJCIFzMYgzEY
Y81urGMrEg2Tr8i+R7KvyTb2seVismeppBJKKUoL2Wasv77u43ZO73O+59df
nXvuuZ/33V73tT6fpi4jjO8clBc/R0XQfjFvHas6w7tv8c8o45+xrKcy62nx
kyjjJwl6tXvjhjlJqtn2HgfftEpW9W9dGhOwPk4O63oo6anroSSIeqjOxNfO
WPzMBd/peNwQ/MxH8DNb4m7KxN2e5OVNVkPBD4HfVhl+3gG02+n3UerxPn7K
++iGfpKMfuKEflIF/cTgQbnx/t5ED7FHDzmFHsL7rgxOlMmbyrLwPg/ie8ov
3f+0o9Mq163aTlG3sVPClh7z21t/hWmXO7QH/OQTW9l2uauDxnUUg+u4oPeA
kRsLBub2j6P/0Pyrin493N/gQ4oT+JD76kW9G/vr+lw7qBX2yJNzj+7Lko2u
t8DVrAzO5Mn3kSV/6hlg8CelGu2nUmz7xTluNvaOtMfeGXuw0O4SRXNxLKUM
9YP5sacc4X2eiz1V4nCPF+3O73BtAx6mN3WaxcFJ89Z+M2Vw0u7jX3qj/UvK
+Jf88C9FaP+ScsW/NJLvWUM9Y2m+Z1/eeanc+TKvRthx7ZjXErfZ25ZcWJlr
x5l1c2OdS4DD2YB13sE6L6Z/S/pfzLu/uftu8Rfl4gtdJU/pc0t81oa4z0JL
fp0tOGkltf9TGf/na43bo96C2xNMezH6gyOkttJu4bmW/pzbNNqjLfzRFnxR
Mfiig/P632Ql/rf+lnbjrxtoaTf+urXgz8SDf7Uf/Jnz5F8dh1e6DXbKXeJW
1YjvRyBPFHGufMT3HyN/LHErMXGrjnnznJUN/mo/6jHD4aF+ST3mulqdbTYE
J8uZ+fn8jv/2QHnWXZBdcVK0zOr355qiPg/k60e13RY7JCv3uwe7vaoUK0PA
4akPvtYEcHiGDKhWroL3dYlfHL81YsUpVb9y2JDoHP3yAfneA8jn9Ocd2abl
sLhqOSxOyGGDV2NwDEKQ/59rOa9K825+jZw39Yw1yV/dSf5qU3ioG/GezuA9
reW1ctiEI+lSc2Zp7/d+V8XOIfDrzM9icvsbHHgv+idpfUDlH/FRH1BF0Qcs
36PM90RpfUOmoW+Uzdb6hsFRMfpYSfQWw0PdC1wOG3A5DK9EEPiT49G7gsBp
CQWnpS04LSV1PZp46Xo0qUg9mvldT/SlIvxuIt85V3+nPEMvqqXxRgS8EYkF
b8QSL1MmXmb8peXQ293Q29fhL52C3u6J3uuPPZKCPTICfS+cvK+O5Ic3JO/r
PXV/g/Af7smrZ6r96JmHaDf4MwXJi+v9/+DPWPyuYvW7FiEOFYN+jr2goqd/
tBekAvbCDW0vqPTC2u8q2Aum/zjsiyr0v0r/ktgXPemPXaM6g6fqiF3zD3bW
KuyOytgdJ05PbrlKZarrf9xYs3fR3yrlUvCptUuuimvcgpKpS3L09novgyNm
5uhpR9ff3FAiXHppvFy1BXzdNeDlNgYn1l3jxIo9OLEtGWeDHkdWMY7BUz0D
nmobzmFN/K638bt+h5/ty5cd/C/OT1ae/d6ob7s/kLt1FhV6902MXCG+OY46
he+Ib87U8kchf2Qq8sfE135H3pr4miVOpEycqBjxLPBLlYlnpeSNZ6nzvMud
9DjSi3G2Mo5Fn8nFqfbJq8+oWN7H74inW/PQrHVnmcSj8UOq7vghjV8uDftl
Kfc0kXtqwS0Rg1tSnXWeqNdZxbHOW7PnTRsen67y7/+6z9joSHXw07A/Z9WL
lEJts18eXZQhTSYNzI5stU+8Hhdp27lBjOSnvaNuV7Np38w4hfU4coRxmlp4
NDyRnwUK6bhnvKX+fTnx0zHUs98nfmrBV1EGX2Wh1pfkOvG4FuhLlv0Ss1+x
ml9ADL+AJ/wCtvipyP+XQejJljp6MXX0Y3Z26LLa97GqNND7VIMfjskP63au
rV04QUbR3lK3q060++AvciOOEIO/aDPxr6PgHX1B/Iv6NUmjfu0oftQtep3F
7Nc+1nnYy9bZ0/o8Fpv4TpmbFkSpLwJ2za3WLtbgHckMC97REOr0t1G/70+d
PvuunNn3yezvLPhwj8EP9Rh+wB66rlkNpK45jLrmgYx/ChyA9Yxfjf6NwUd6
auqgmW82fuO9zHcQ8yql5yVOzKtS3nmJJ/O6pPMBpLDO91D9yQfIR7yvP/mu
rYj34f+Rxdr/I03x/+CPUvijVBT+KOSqRCFXHyBXv9JyUoaCp/0tcrK5lpOy
GHm7DznZiv5+yNXsA7o/8lkCkKub6B+j8bflD/C3p4O/vRs+3HHw4XrChzuu
8f4/wrY+UtUHhNraZd2WPy9nlG2995544lc5i19lIe9sI40zr2yqfMSZl0Hg
zDvDe1sG3tur8N62BU9sNfgAceADWHhJlOElseQni8lP9tV4+1JB4+2rX8Db
T9F4fTl6k8bruwxe3yzqm+LI83chzz+N+J0f8btqxGXq8u7c5d1x5d3JiPX6
sfP4Ozl26eT9jX2S1N+Bcc+dCyTLjbbNRxVpHCRlXfqEnbsXpPoOSb8XnJkl
78BznoKd0gI7pQR2R0HyNLZgd8zW+NsqVONviyP423XJ15oKbuQw3rXtRX6v
Nqdsmko7u3VUZ/sEmfhJke1fTYyQJ5Z4kw3zIl4jvXgX+vIufKbxw6Wuxg9X
h8APr9Bvbfaws6myOOVdfT+nBNWx8N6KAyMipczog12znDIlPbPUnm9XhqjZ
VW/WnhMXafgIFHwEshQ+gs/1OGq5HkecGMc7Lz6bmgw+G/OSdD0vNY55jSmb
uLbeZxEyuHLhqNOeITLm0uZNnaZkSnHyXvJjx21jPZvp/qqS7q886R+Mnv8l
ev5h9Hx36kEuUAf3M+ekD7gWO8HBm8+5vU7+WCL1fSnU94WSF/eYPHZv8uLc
9f0S7pfayf0ae1zXETSaqesfU6gjCKWO4CL1jw2oI/hF8wioRppHQN2FRwDe
BGlr4U2Av0BZ+QvgcVCGx2E9eH3uOv9NWfPfLLxCyvAKTdV5C4q8BVWFvAXj
792A3eGB3WFw857Cc1EI3LyRWm6rYrxHpZHbZWu+7utnm6p2nRm/beLmUGVz
p22DBnWTJA6cvengk2wAn6SmtstUReyyathlXzJOqB5HnsbpcaaCT1gCPtm1
4LEM5XuK847U4HuydV6i2JOXGEpeYnPqIotTF1kIPllf8gF6E/eJ5R1vhpxJ
J47siJyJbrpp5G+RD5XLskG7K22+p6r/4zX+5YW7chq9rhv3tw/318RPzbtv
8Lp3tZw+6UOv+7LLt/qAcukXJN+HccfdnNNycfOU5Z0drfUQaYEe0gE9ZAD9
w+i/hf6B1DUsJL+0FfmlB6gDrU9d8HTul+38zgcXnoxXLk5fnNjulKQe+R4Z
3cj2gRwlfhpD/LQ8/snMvP5M6Yu/xcLzkusPXKPnqzbp+Sob5mvkXl/i1CYu
X1p/T45e/fF7JJ3vqaL1XvGy2BfYEeKEHTEZO2IBebZe1Hd0Zx2MPpbCvpxg
X8ANkFTwBPzwb5fS51PMOS/FOe+PXnSJ9d/O+oNnKC/wk3sxThXGMef8Oef8
pj5X0kyfK2nAuQphffqxPuZdAO9dzPtYiXekm667UVuou9nD+T+vcTvF4HYW
zYvbqfqB2/kW3E439CgTR+uMHmXhPRHDewLPi7LyvMDbogxvyzDsUH/4SU+g
f95G/8QfpRrgj/JkH9HPxR79vD3nfy72wg38qy2xF4xfZS3xLE/k29+swwdw
TR1Yh6bwrazWfCsqFL6VaSu6T66yN0M8Zq8qWG5rpAqqeGtGUNcrskrXnSlT
d3aRujMj/5tYeGT6E5dcgl7ahPVMhy9mJnVn46k7M7goHtSdTafu7LOdU48/
2pemVqc+ybRbdVN9v8zuw8g9d+SvuY7uzoseS2bjoflCe55UIx6G+RQ8Gy+9
utfw/dAyRXw+X1m9+qEklTC3sW/+kGh5RL76D9QxHSZfnXFUFuMMZ5xRJd7M
iXN7rLwKe3UfPPeIsgnZ3f9C7wQJDXDosdI1Xcpvvnb6TZcoyfZoPCy5TZQE
gA8QQJ1dd97HTdTdHyCvuwJ53SnweP4Ej+cGeDyDwF2/Bu76InDXT1IH+iM4
JyOoA92BX8jwyHjgF5rOPo7X+yhmHy14L8qbesw/aZ9L+zTa44dfGhCS/kD8
Z5xr0G90ipp2sppHu+8jxEWfH7WO83Mq7/lREzg/2/jdN+3KF52aESNpsTPU
lQ6X1MzIQvZDLqXLZPQid/So39CLSuxY9CLl91Nq9aFf5qZV3SkT7o/e9fR4
lrTOVH2+GpwuJxsWWXmg9RVVrksF18s55yuE8xCr91F+YR8TLN/vzfdPfl/l
ZlazDJnY7/NF2WXDpf/1kmeL7s7RG88nOXZ5mC7uJ3ZXnRgVKS6Jbp0PfoiQ
203vbRgemp6z3+/Kba4RpZpsLRi2bViEXCMuUIG4wAXiAvgz1Tn8mT/gR9pO
+yXaO9H+xMLPXg75ZvwnRk/uiTzMor/Rqw2O+vP+2l89Cn91U/zV4+GFnH7F
6V35I3tOOsELWX34iRHHHybL321G1Fi/KlkFbU5qX3xHeM57udahfLtkmb+w
7sOR+x+owTGbdk7NipYFW3yvd3JPkWd3Xw5s822S+k+q/fui42KkB/duBvcu
nnsHH6Xy4XcNP2ZIUJe7L4dkqmWX9mX9UmapWhL4ymFsgZuSz25U75lLMlRG
hKN3oeb71NUeXYterhkjQ3n3/bH3l/Lu4AeQLbQvp93kfXWx5H2Z+YYy3y3M
dwPxgtPECzyIF9Qjvy4BvagZepHtTi1PRiBPgpAnhn9z1IL5Q759EXKyIfNt
f2vN38/mZEjr8za1glptVYeajlk3zicmd31WOMcl/vXNyZPf5O2vrP3X1szs
ZNchU/k/9ygftXGjKjy0RvGa824aPc28p6oa72kbvv8132/P90fS35n+Den/
L3kjE/ADl8Sv2/9/4EqZfIlxFj92NHW4g6l/uUL9y3Nwp4PACZwITuDlvHlx
YvLiDI/MC/wqQegtBvegBfgSH8CL+NWSZ27iXIb3IeaZ5t0w/Bq94ImYa+HX
SAYPcxO4xFXAwwwHP/Ocxs9UZcDP5Hyq1ZzDZZxDo3c95/sND86v+Ad+0v4B
ycA/cEbzC6juGrdKaoJbtRK+FQ/Nt6LqwrfSCr4YeChEwBEqCb9MI80vIx++
0PwyUcTN7ZBXBm+hDHH2z8lzG43/0IV4/XfE6w2eUix6cpZFT55AHD+f6Dh+
A/wM0fyuA/H6Y/zuFM2TJf6aJ0sWwpM1kfYA+LMW0F69eHybEy6RUsNz0Luz
M5LUab9KlwOnPJTUUuWdiv22IZdfcgbxa0fdX9XW/eUE/RlfBfK78xg/gXHA
K1bTGcc2u7Gft3+KfOgQ6FXyaKI6G9Xk9xo558zwScHjI8Xg8bnppvkaQk7p
/S13Tu/vz/BH/PNW728z9rf1duerD9alKt+Wx0dViY6RrX0KVPR1uWvyndRY
S3xtF/Gmt8SbfsIPZvTAddi5hrd9Gf3v4zf7jf7UsyuD21ONeqLd4Db4oQ8E
og9ER/ww69yPqVL1ScNnQT1i1Win+9/0vX9X0tBnOlh4ybuAYxxg4QMFh1+K
Y+caHP7V6JmPtJ6pDqJnJsFvFap5K6QkvBWG1yk/+ULJ5NuMJf5yFz9VT/xU
e3frvCDvyrqesQx5Qd9TN9pG142KqRcuulHzsDSHv6kfPCzF4Xl55a/5kibB
81JNjy8PLTiKe6lHKKZxHiSUeoRn4P45ajwK6QMexU7yju5il63CngogH3gt
cfaOxNm7aZwxidZ1VWJwxjaBX9RS4xeJM/hF4zU+m/TX+GxyGXy2T8D5aWTh
s5sCDswd8nVbkn9bd039rSXm73QdCq5OP/BkMmscWnWj/wHXgb/8929WLr5N
BfpPBH/G4PDcBrcnG/yZXeDPbACHrRXf35Tv34O9mcD6LGd9WlhwdON4923B
RakF3mD1nnnwBlUbjTeoUsEbTAQnxJZ9mcq+NNG8lvKN5rWUKHgtvak3/4Pz
k4/z84L6+vG6vl71p77+a3AAbmgcANUQHAD6q0n070P/wfAbPqf/V/RPXa/r
N4vCd1mB+s2WljoCsw7V8UeV0v4o1Qh/1O9+F5r/9WGNyZ8Rkz/jnzffRkzd
hOP5js7Jb1bn1mt0MvUai49+mDFonWstS35Rdfo3tNRlZObNd1IVyf+ZyPeU
JJ+nHt+TkTcfJjevzDFY2wv/OazthTHYC4Y/CN43uY18MDjMtfELBeIXIk6h
vHWcQk0hTjGE+NEObb+rEu20/R5LXGMS/cfS38RZ4nWcReKJsxi+nh7gWPqA
Y2ni3TH0T6S/B36DnfzuG/wGg+AHfApPkCc8QUfIY/yVPMYA8hhNHJO8EWXy
RmqQN2LPeajDeTieF4dWmbzKUMY3+H5+tF+g/3DafWnnvign7ksY96UScYQh
yOeRyGfOrXTj/oZzbpfd/K22/Z1U2dbw/J1px0LVmZYzZVDlxFx9u2C7EXsX
DfZxNfp2m7w4oiqbe03+tjygPsWF/G3yw+U2dWFdyQ83PC99yGPJTx5LmxtP
O5+tmKaUj9/3f9a5rsrXjJ214HyCZOTlo1Gf0z/lqEv1d3PSpPPCl91/W3Zb
+TrH2S/KjpY1ybr+60q2rv8aTN3NdHD+x4NvPA8c45VZ/5z++s1NVek/7udO
tE2S+80albrQ4aH0fPu+5vaGt1WrQE/H1TfjxfOCz6WKU3POwa7yZ281vq2C
R9dpuz0wXuVzb+CRf8Ejmcn4Y8FJNuNXo+5pOnVPntQ93Zz/V9nwJ+dUj/b/
jq5a9JwMmNbz+F8VssSO/hOoC5tC/74tpE3C0LtSce6hUa/TkuXaAZm1yC5R
ZhBH7ov/OQ7/s6lHwC8td2hvgX47Ff32W/RbNz2+qqTHV2GMn27RQ9agh5zQ
3y8d9fergXz/A+TzCPBPhiJvh+h1k9163eTDBL1uffQ6S1O9zmoy6xyg90W+
0PuiktiXH0vEVW/2Ici1eI0h7SMTHqrJ1Tte3/pjcq4c6IkcmIYciJyRNiki
x64Pfx2e4jYgVn4853msSY7+cWvOscIen6RK6Ir4Rl+qWLV+Qbc2/868J3d4
pwxusC/v1Dytb6gw6h+voG+c6Dpy8txP0tX4Nl/cqf7JFclfZv+IoJg4WTfX
179+7WSx9dh5+VGjFHlXKMG5ZPMICT996arnnHvKoXfXOglDQiVrzoXz/Xc8
lkU/1vyyXOXHanOA27xJv8ZIsNuyn+tsztkf9msWvHjN2a/WxMvs8PNMws8T
8uxJ0S2T41VEt3KtY94kyl7/A5/9tz7b91RV5XQ+RTb1+v77x+uuyB370ZHb
hybLAPgjyjwPq/RX8f2uhj/CT/dXi3R/Zfpf0+PLPT2+Wsv4zFfZMd9/mO8F
PV+xZb7ZzHe+nq+Y+f5p5os/6jz+qKL4o8z+glesjJzPfzsvvsRn4EskXE/6
1WPHYzWsS7n2s93vqI3br1atWOVabtxqI35dE7cKG1tggrd7pvTZ0yDn6q52
PZO1vcnl/ZEyjfcimPcim/fCyMmP6tgvW1yNnyHi+sXp50ukScbbDsFpb06p
5Q47yneulyiz4Ru6Ac/FO/IqIzUfvaRuuJAauHybq+GjT9o7JrnXvFQpdrn5
BIcWofLi58QlXoGJsn/CoiI7L8SqZlfbfTPN4bEqf8nDZkmVW2IHz46Vh2Xc
/9BLB+l9l6LsexL7/lXIzNHRc3e5rvYdXuCLHH3uYsXlM+J2pubc/498LvL+
060eHR8ddn0Jn0vjn2od2jlqj2td1+xz4T1uyfLe304/+zZD1lJf70J9fTr1
9W/AdXQG19How+9pb4CebPAed79/XrPs8xQ1YkXdT/P/ekWmuP80qmDTZKve
IkPQW/7U6yMuen3EjvVhndVT1rkr65yo11m9v/RxnZVZZ3fybydTJ9gNu8D4
lwp+1L83ujZl32/qfVdP2fel7DvxRzH8aBuxy6ZuO9uk1qEYNdmvl2uE/wYl
74o4p/hkyHnkT3705GDkz319nmWoPs+ynvM8hfN5hDjIC87nHr1u0kOvmzLr
9gb57IE+7IZ8vs86FLect0rgzrmjD3+KPhwIjtNF8L6egvNzGvyfaPB/TPvw
7pferp6Uo1/a2pVuFX5fFRtj7xu66Jok5n3HJZB33Fevj/ixPi1YH4Nb3gs5
b/gZ28M3VLCcPp+vOJ9jwM0eYMHNNnyj3pZ3sIDGD5QJ2JUHkfOvkNui5ZhK
RI6VJ+5JnFGlEWesRX33LN79ibzjCw/HzBn/+qKUKn/EZ/yn58Un8njhPsmZ
kg87sanlXhSgvYHFfjT24O/FMnL+O+Jq7MFW3Meq+j4qf+5jF+61v77X6jL3
+gXy2cwriXnZ7h0wrGLlXfLXrEdRPxzaKO5N7m2s+iRL1ueV8+o5cn7MZxqn
6I+7GqfoFDhF6G+qB/qbPfrbQ73vqiv6mw/7fg0cxb7Es5YRz6oJvn0j7M1i
2JvgC4kjuH8NkP/D9fcoD/09ynxPzeCP81KvZ3ycl5rCvO7iB7iOH6AV9x1+
KBmF3rgYvW7FLH3+azvpc/6Yc15sqbY3/+B+/cz9OoE87AJOziPk4eiN2t6s
s1bjBRXmfvlihyZrHCGxoz1jq74X12Z/vBfSj3uxEfwW8EzUY8aPIj44Qq+n
zGM9t70u0KFe6g3pkfVV+1sex1RM2FCfMwcyZRbj1EVuZzJOU+51ae77C+a7
D3nbnPeoDPK2NP6BKuCmOrFfSfr71Um+fwDfv5242xsdd5OpxN1GaLkhA7Xc
kNe/ablhcC1eb5t5obrPCtcDBteC+fbh/CxnvgZ3os3Nxqs88q12jQJ3wpK/
IdHoyW9f67qemuAkzMPudkX/tNH6p0xC//yndIs1kT7rXP/suT+olEu62lav
YKHCte9JgFJ9W/27xvVGl4fxq5tnqB1hT9IPFb1t3muVyXvtwHtt9KJtWi9S
+9CL3r+0nR60I1MON2mY/EOhc+rKovh3QTbXzLzUD8zrFvPKyBv/ksrEs+yR
S1Ms9sUg9H8H7IuL6P//yz+An1xmope2QH46MK8sPS9lz7zmrYkNXpiVKl2C
drxdU+S6qlvgu1kuZe5LIDytdhaeVnBFVBz1xcOxH1Pw71VEP3fnfWyHP3A+
+nk0ctvwdJDnr37iXLGeap9eT4lkPflO1U5/p9TjO0+i53tpPV+9Lq31fJe8
fgCZih/Ayodu8luy8tb3ya+0X+r6aWSd4oGu/4R8W6tTSoZyj3n46JNrt+Ri
3naZQLvlXIk5Vwl5z6Fs5hyWwY/EeVbmPPfArrTD7otk36/qd0q10++U8uad
UuhFB5GT7ZCThsctgrohw6dpqZeRaazPUb2eMg67qSR2kzP9nfCr+NG/IvKk
DvK/EvLE5J+44U8ozPvSXfsTJEz7E+RVDe1PQG6otxa5Yc6DuV/hnIfBWj6r
uhb5XGrq9gJ1z2yWzpOW+RbevF15efR0npadlaufN0X/rIg89MrLr6TMO8J8
xcx3NvPtyHs0FP2zJ+uMvqes+p6RD+Y8G/kQTD7wUPKBvcgHbkIebwnyeMPJ
47V50vJZrdUpKurIy7CRLXPWK8F52ZaV8TKzT4eVmxxyvnf/6VoOjglq5Ddj
w2Y3uyf/0e3qG90unrT3Jg+hBfmZ47FP7bR/Rl17qnFRhuKfCeFe/+Ov9d6j
3Gv4zlQA8Zep2Gve5PUVQ68ORK82fMTwr0kA7dXI33tWSefvNSR/Dz+J6mPx
nxj56Us+gD3ycwF2upHPQcjnz8k3a0q+WSp64Oy89yKX35B8A2F8+ZTxDb/b
auY7mfm+KnM7cmRwqnpUP6TBpkanpFnfwMW7QhJz41MbLHlKxv4dgr2wFXvh
u11ar1s1U+s/nug/czhXh7FzH3KuDtTaYf+6YbKkB/brcbNVigpeX6frm/Bw
g0ujwKVRjvj92rPvjvglJrLvV7GLX2n7SAKxjwxfXhH2awX7tQr/5FL8kyfx
T3bb13vaYq9M5WJT4PzJnPfuWdurMTYLIuVYiUjbjdceyrioaeemONxXtW5s
qvPvhlj5PwacZKE=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-3, 3}, {-5, 5}, {-0.9999837659893945, 0.9999837659893945}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8966443574057283`*^9},
 CellLabel->"Out[72]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyUfQV8VFf2/2TeG4l7SAgSNAkWwYImaCA4FCpAcbeEAAkaCBI8OBRtqVDZ
lq1t2223tt1lq1S2pU5bijuFQouc/5H7ZJIh+/vn87kj701m7rvn+z12z72v
z6hZE8dNGzVr0phRSbkzR+VPnDSmMKn7jJl4SAtwOAJ+wjYvyaHja3A4Kj38
7HD8z9dj+aUegQ/FqqVgm2v7yBh+6c7Bh5PY9mErV6/z1b/4ftRzWH3M+EtS
5+PpTZHt80P5pUa/3kM1h8aPepb63yz1f5p8lH71PuN759i+aoCcD3vggQc2
LFmypPmRI0ccHjlGPXxFNYcmj9tt3XPo8jm423f3lcui7568ffv2T6ZMmfLl
pEmTnpo9e/an06ZNi01LS3OEyWcO4MMh1WW6LPqdi/4uvTe/DKTvfHrOnDlv
5efnr8d+t3n//ffpRM6+ffs+nzBhwtx169ap73aX4cNb2I6o7zC+1y6BnvJR
e1fPjx8/flVpaSl1U0ZRp28vKyoqotODn3zyyVAZgJH4cNQYgPm2b82Vi2v8
888/U2fp4qlj9I2TS0pKHli9erUaRBd9NR2rERkZeWjq1Kk8OCHy/UkOGw7s
39+1cq/pN6hr9P9O+fdYANiJpyLCwsIUHsyfS0J503jNW79+vUNdzkn19fwT
TqgwUp2s36TfqXhdbj4d3PLZZ5/l31N/wXFxcROXLVv2BQ7qPvx4zwMHDnw6
efJklhv/rl5RJHzUQ2Bo7P8y6X/pJ4OsS6LLpK8fhb3ZiRBzqCHwGdWVFX/E
GmE+pvOjFu+w/TXw3wXjquVrXP03bdrU6N1336U3NOpb8WMGAwmljEr6K7N1
QcZII+IfNYScKt9HP0f/Rz/3akFBAY9WtCVV/n6WknWZ9Fm+zMq/odNlHrL9
zv+4qjj51qdRZuZAqF/KfeWVV8wBXWH7pQg5X26/mrq+V+PD2QT5vIlPfudn
xJbbfiPSz2/UqvpSEu/+Mz6DZv+ZKF/B8J98j4sY/QwqgiO2n1Bd8P0NpSKp
SzRc/G5ZJcF4ehiXof6SHDbGy4lKanTeqlWrdiPG+bcUKOijZIf607tAObYa
h5toLj23hpa+i98trdQfN6mAYlt/RqrzcdYo+1NqChymbrO+0Us9O+iwlDA0
TgyA9slO6JTCpsUr/5q/cOHCts8884y9sz4C8tPZYvV+n2rU+RJsMVZn/akN
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
uEjT57dJwbiymuTVklD8Q0fvO3R6hab692ODaFJ4o2eWAz2rl8KcesGYVS+0
Ufv27XWnL6mFi1ZpdlyfGYIbPKwCPbBQ731Xe+/XBpbA64NKSDXEe3wEXyKz
myfMolA6/rpmt05X0om0XJV/Z+8Mmd3chtE6u1WoWx27eZpvt4TXOLQ2oUFq
YaE1p8pRXy8Te20rFeKukeCJ33U0Taa09trGTPYqMJP/zCvKR2qnan2ijt6s
z1mn63DacjV5na5pHIDdXX0xoaan2TuPj9YrdJ+d5XoqW47i9gJK3BuLiQEd
uOkVT2FzGkfQ+8r/895iXkK+S5fdU83dq7vRkfgmz+sVEfibgXNzKT+1ely7
cVE0bizh/ps06FH+oun9F931Gk3nI/1L4GCfknIg/0OHumUa8z6NmbE4Nr4q
1gxvaY2uWXY96cQ/BwZVdkoIm9W5+h2FgXTkHlPLUwp4FpzFJ/9lFr8zOBjF
gj1k5rbWHlpmsXHItk5hB89gemd4Dr9JD/gePfjbw0KwoIVUhFPe1z3CXVdN
16z/fBxWvch8pc7IooaeeLWHH3bTV5EjOJMbJKN9pVJ4JtspVr2k3FdtKq8Y
64FPacZ+wrN2WAC+HxNIMzMI1/TB+MWeiehXNws/5YXgwvRg/EJT6jc6f21B
CO4toVk3Oxi/TgjCV8MDaSb4oD1J/HF1kzCkRjEsaOC1tUvdynrSSiGgxU09
C5+0zoKT1rpxd3LzLDrix5kVTGVzItdq1DW2jDmbv8KSYqjnLB/pVrSLwNTa
nsacdVsmVkdha0B8ZuNk9KuVXliihlOHwNcb+0xodK+eodpQ6yOvkyet05yv
9OBG4BuuALhbb3IW4Ju6lRYBztpb9TGSS4Ye57vI9st/m9GBYrO5aKNhnflA
zI0teaIu5TheczXDV+mDtOpTvk4VbrccmyVcVscLa9t6czQ/wpaIh0tpbtO4
r8c9Gv/QrHyidJBR/0E3kvmbZu2t1ZG4tSoSf/NYGYklXTLx+fRk3KTLN+ny
jRWRuL6MBj3mX/SY/ekAfmZSPP6kmf7nnHCb0Uz4Mh3cT0wqj0NjamP9iEZ4
Z2IlHB1bF+9MqGSmUqkdJzNVGTyVPZXXxIuPzT4ywUMwpKqXNGD9Xyd463QH
Ghd3KBvtOlLT3LbZTS1u58ntQLvSTr3G8xbN7GP0168PDMbmp6V8lp/rgGyW
WdEzPNN1QH4iX0PNIX+zDsTRbr442NlXvoh7n+Zl6xh0qpzGFasQ7+8hx2S1
S6WoFFiYVdcpU/zjXH98PVzlWV2kaX55UiC+ocvzW6ZjV/dU/EhHyR/GBeLn
PLLaM1SJivt0nhe/vhsdiJODArCvky8qxHhgXsMoEQMLG3pdH1KjuM+UrUb5
YklqxlESAzzXr6u5rjW455MaXLS3mu3XZkbJjOX9llK2m2Pwi3Q1vQWuinr5
xmw3OpDQ4LZ1XOfiE3ptA8o7/ovZzmN1q0jUrlDWMttNn+1wHZ+9ZKqvahmC
OuVKS+BMT2KZ7cbh2BUy8zISHS3TnMdz/Uvh3ZEljLm90uq6nXIs5xr1+t4y
sz1dczxI/Hasr81Mr+e5zA25uQk3d9Xh88uaFxDjrVQzUrXw5SXauwtx4qvx
wXjE7dRoPOR/9kCew326eI/G3wvC9ZZjksox5pT+U/fZ42l+a7Ge3uujcGtd
FP5eG4Ujw9Pw/Mg0/L2BLtP1N+n6m2uicIOm+9nZCRjfMku6HnNz7d/nF8H5
2ak4MKaOHbtG16f364sp2fhtZpyEz3+emYjNIxvi88nZOvBmmd+76MvP3WzJ
f/PwlPkdyWJc7Pf0hl7/8xyfVNdLCnvTTDYP5CqApiY9X99WDfoWu2Y5z+7X
eAwIxpHeQRz91pn5biWP66hZnv7kcfz7AQMGGPubVYDKXybthOpOvEiqe1tb
H+yhL/M7AwJwuHsYqpFMzK3oyaVpLc1Oip5QHtxHJjlP9tM0sX8cq7bT/Dgm
QC7z5PpkdKSULvtxTjB+4O02kwNxk473vBj2cCtJtrVh2NW7GGY3L44YEior
m5LxIJNNEx2z64X2WNC+ujHRZZ/BN6MCC5noYf8xoPbxiBSs65ThmuhkrGU/
2wI10fNdE93OM53Xt3WnoePDSuL4cDIR9NDV4zwKUeIO81juWgzzkcs809e3
sUTUXGpcLW/7uB3bOaLWOCuFo2muomWPlqnSl+KuPWWiO3Tt/QjXAZqu43Wv
K1yEfKU+rJtHeJ5ySyONhOflRjhNN9y0OV1tNoMwtKpTSgHycZnnNZvvBY19
sFDP+SV6zotq18f3Va20Tvc0rTYb5Ed0vM1fGck5PfTbiQd0+T4Pmpwy169J
p7c/pY9mKK7ymEmujMZfdJi/TWL89ipeOuFU0Vubomyh+H5RImZ2LoNbW6Nx
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
hCMNQ+tnRaFbsQNj1aBcrAeeznJ6MQntWhUaZlYH30QPKhJ6uZFwAY1uZZ0s
4dSOGd+Yo+VtJgx51CAgdivrwPfTQjGxgVcjl2zz4nAbV67jiNyqESNGnMrN
zWXXW0bRTk1RbwbddYvmS9IQrGURgG73UU2Bt9oK77up8r/CJLDFfnkz+eX6
9JYvbBaHQ519L29u5XW+HB1oBld0Sh1Ejpl1r1oCo+sVw86n6WDVwU/S65uU
iUePirF2jvPZlGVunh4iWGyYKhULdPcqh5SOqxnvoZNclURkDrIkXNcmGRMb
pks6GcvDre3iMKFBGkbUTaeJnECc9MHhTj4YWicd29vHySbnb0eGSn+6nnVz
yFXE4YMh0djeORkb28djDz3FdSSEuLE1P/3cihyJdLjK3GkusnWe21Atpg6p
mcphv62d6lbWRf5kW/eA8g43LP5tlJDKc0OjwqKnbDbkNFeWiFom2iT3zCFM
TFC60MLEC5PixDdzEiwvUrSvXhbnJ8VbktBChYnSDkYzEZqJYiBXhQsTj5HO
e4Yk2eIm3qZGXNPSZKGst9riTIk4roYnNtCR6R/yoo9NHMYoybdfLZ/eOxyH
DvXLIv/VOOCtODx4NQlnt1fGa0vqYftMwuDKKvhjU4aCmcU/y9NS4T9Dx20R
r2zk0yoYMgrV/9ynT3cby7NKIH46tTgOD07H9HZZ5CvjdWgw2snUlIoz0ZKv
oeHosuUOk4ykxyWot0FtnTw5uyT2jc6QdchzK1OxOTcTjznFdGO05PDnr+TC
DqIScU+UIqGR/pNSiWrcXkoKkfnopZYqFhlsJJU4X9hoZzgSjg081qtUlpAY
WUAkKjy+klsMayXKQnAkTDEeL1jw+NPUMPw4JQw/0Ph+cpj0qfp4FM23byeF
2vHdpFDuI9yqNF4bRB/NxFCcmRCKb8aHkuAMNQUiN4XhON/zIyrgFF3/6WhB
Y2FkLBjim9HQCy1KkVUu6ylkVIuq7mBs6WdYZJojhEN6vxiIC5r5YWg1WU7V
UFzbMd3hBsVqCXb0LOfAF2NDsKaD7zQLFMsTqBiMRmk8w0VrKGrghWgVKJ7Y
6XLGPYzrdIsGt8Z7lm5+ZsdQ3YzvdcLv4Ly8PKOQqIoshknJp6EVHGKi6xEl
93SkSdTSe8wro1qlaQ5LheFRhJoRNWPQvFIZbGrrh61ESd583rJ0BDpUKGal
JHeKZ0o2SnVcd1GytOw4mFTD6aYe39YJuEzKMfXTCb4JpnocQypxfRu1w0AW
REg97mkfgj41SsvffJwbjOd6ptIXKl7ql/D9+tTPlibdPWplyqblkXVTpAsu
e/6BRMpn6KXUiPNwIyWfz2sUga5V040g4/lGlctpUsrT3tjGqxABGSIt+p4g
pbdUVN/bo5R0pzEMtbuADHAJSA1MFpCvDyyBl/qVNHuQXtbQvDy9qJ2JaQsR
HVmQl99MTpZSwNBLJdd4p3e0hzToM3TkasVMh8FKHWrkndk/LuL2PRF4uMOy
+3q/Tn57IVak4pZxZfHuyrJ4bU09HFrSCM8vbog/9mbi3v5kV8Lu7miTl5dW
JiKPTa9aLpEaWnY+J6yMdu32Njhp/N8D2prvtiy50P0vLU4UQy38VQLS6/9i
pdP005xtzPfYGYPNgzLxzcri9MKK4uauBLWGS+76EblsztbNX6U56WIlk9LO
oHQwJW0+xMlI5agJkLdYQM53s9JWSE4lB316YrxLP1qc9MTmZcjVxrGT1pD0
NfWjQHKqBZIMyMmhDEl6yQqOG7qk4dmexfEtwZEB+Q0B8jQD0qIbOZa4ekh9
vDEmG5/TZXLQkgpHr+IjywYmKxjn0lGWBA6LOk9xz9Lf2IkK9FXhdNwlLf0E
hnZmIRORaDifxpT6slhr9Op7tqIpE+nV8W9PVE90oEsWN8MJwqE+ARJL1GXR
3Zoil3ZDYZKtYNs/BT+zY40FhWbxYw3bEJv7j3EfXaP9Wr9+/Yz67MxjTUUx
uoafHl0nFTvb+Yz/drCXUaxiQKlSpXjJVzZnjKnhhUpPlcWiZqHY0NZXSpK1
KR3IlbgKo2LLNNkorqnolFjd1tbeBhXVzsySYqkZhFLzS2e1PN81WFaJ17RK
wJA6GQJFlo4zG6ViU5uiONQ1Fn3rZGFtp3SMId319sji2NYrAy/kFsenw4Ow
t6s/fXAx6ECQq0rPuHOFRGnoxN2duUpgQflo7NpkKC5s6It+euVFhUVUmPEk
aTNXbS4vc/uUdL1ZYNLRocnInQO/pO/k3X8lo7dLRlrIyDLy50ncrI64SFKT
rfX3ExLRs04O/pwZa+5pKIhG7nXFTfgMNEKXgJ9OPovl5DKSkytdeFSZe63U
6dQ6nljc2xd/Lo+QDYb3tzNXDsTwPmidF3xtfwZOrK+JzbOaoW/3Nji3vxLu
vZoKvFrUlTO8XyPOgsjjk8kLT0xTcnCbyEmbwqOvurwt2hVn3Bntjsj9vGGI
QMm2eJ+WmrtizOWY/I1Kpi7tWsaQlQYpt8lvxu+WaIObriCnrCvLrgfWlluV
kBXgHqZXcrSomO6G1crh4XZ6w40MYualhZmmthRi0lO8YxWYvJK8WEPTVJYm
OG2KnJHY3I380tBU1WVZk5Op+ePUGLQiN/7bTBV//JUkZWHO+wlpOZmzOJmd
IXQ+DC8OSMHyjumsNE1pebqAtOTTT8YmYtPwuvh0XJxb/NHO8KQvu+G2jQWY
LeTNqsTbPRmdjoLoVGsvdtGRDlNH0qCXTfyk6+Y2kaVj+dFLLIdbp9kLYNRL
xGVX8kOv9A3Ai/0CkRQkYUhNXrd2YJqkAYUQ8t/7fnkzcRlSRmeL8fpyLZuJ
Tvft7YqbXuK5GyV7YJP23KuaRxx+sbO3+ldhvPHilQ4dOiDOz0PAM6iiFzpU
LoXhtZMly4bjfO0yvGVjBecrc4aNwU6uI6bZqW23xL2kYbSszJCctKVJOJLF
5O6ORdCvdqacf4XuM6NxCXqvi2EY2e5VrRJxlMTkwae9kVsrHUe6BEna8sB6
WZjCO4DyIvHbjGD8MC0O4wg8n48gdnbxx6qWvpjdwAcjq/tKncVO5eOlsnSg
0ya8NEOSOizJGTdj6yRiXJ14jFIrNH6Wp355SrAbOq2i0iIsFTpVwXWOSBZA
p6KmQ+lJFYjkZYB5/I03gpIP5Doip0pojsCp0SlSgfXWvKgnsblMue+bC2Lc
sHmAUNivnFO2hC0hdK5woVNlECYINTkO8vXycFVTnYuJkjN+fCAGD/Yl4MSK
Gtgzpwm2z2mKL7dXw703/h9n5wEeVdm8/WU3hR4S0nvvPfQOoYTeeSnSpamh
SG9SpIRepKiAKAiCIkVRxBJFVEBBRQUFFRURBUSkhBoy39zzPOfs2QTf1//H
dR02W7K72WR/e8/MPTOxNLFfJhXtjyB6L1Rhc6+l1eIljTeNzZn/yRBlCSyW
rPc3Si4OXGAHAKEut5iYVGpyh66E4xSXvRRYqlwTQINaZtHByfFWc45xn/8d
mW5mthLI1NbA82sjVV1+D2xEIYLPgv4Z9NvqSMlVwvUMz809jc47krMEOB0q
X6kOmyJoeZOgIOcNSM6FLnG5XdBZWdKWbz4ST9sGJUpsbpWce4bF0zMPJUts
ros3SnGWdw3LSylOZqcDwOSbAaOHHw+hUXkZkJ8iOiUiV+i0g5f82Q2CfsMX
vTG+Fq0Z1YK+YIoaVmcVlXuK8DTJKXnKavTakKqU6FOOr2V0qqKN1GVBzuWd
Kur8pKvg1IedCtqCnlFVy5lqTzMqb1JNMyS3OTQ964bZZRsCaiDb+1emvjlu
yFlqHepS005xoee/3JroYdAT18H7s0+T80EFHN0uLw1Xw3NYl3AY3q52xrfL
8ty0hPUZwsqYAlieDc5xF5PT6Cbh1LVOCs3LUwtz4UfEG9YkZpIiZsOsFGqX
XI38PKV+pOrqbsLoXil2i+BkcEZJRA3BOT0viRZ3iBV7D3pN2tfNoj19ylNb
Fp6o3+zuXZ6WtIug8c0TqWXtbFrQKYneHBFDt1b704UFiDqqyryrVg1z6MCj
gfQKv8yo4aD8hB7CgbUCqA7Ds28NPyxTo4IWHgY4bUbLLOw+45tG0qAGiWY9
R/1+KsvTn9LETXV5WFpjDdF5a6ELPY3k5Q+TQ+lJDsZAT01Q5f8x+alVp5Wf
34yPpMVd0xCPW/nphjlGMkoWyxpvLUAf+lIfG8stRuj5J0NVMA4DkAWfP/AH
Sq2gcrSglaeU5Ja3LS+B+SqL+pzd3IMm8ofSlRf8ZW7X78uD6fMltWSjKrKS
366rQ0W745TLpxB9DWG0d0kKHX4mUfFzv+an0RSyzcnQoo0hSswx90qYc/fB
T9VmK+hUw659LNOQLOyEk3uXLpwbEfpW1wg9v10WnV8a4cJPVI5M41GAKFw8
znNyBQLy9QHOOrhqaauujI0bVF29cBZ/os9JYi2NilWIZDeR5Tw6L55Kng+k
kmf5w4X/8O6tLqNC6ZZFia7AACYz1blUc3SRZqkZvqPDBDCtQp/xb35lz1Tl
CbLAdHzbDPpyUpio0d+cMBWW2sFS/uMopULtkKFuAChj9OQUP2rK75rTU30e
pD7t+IL/Wk/gYobwjnENaN+4HITuqpFNMdRDZTRHOwP39x6Rcnd5wacSnTUZ
ncsUOu1gpsMJS0+a37YidUiSKnfiM3U9kL98v0O8/VC7eLvN8UXbeIe7hZad
Eh3iRUNlZExjD8BK6xiXxdjJLrQcYCu7vBH5AXN5o47uXRY6KtXrZkUkqupK
XrpLG8iilu4Iy68kJCQkjtnioamqVtAOYkLimNykonQpTG1WhWYxIdGUC/3Y
KaWq6EmDkOiFa59UlbzcReYaiBQaF7RwN7KUKiZPFMcPEInhbHv6Vhft+URe
omjLVR3DaViTVFnRveM/njS6WRL1bZhOe/v70enJVeivJd5091lf+mUebA1V
adeAShzUJtDybon0ar9KtKBNeVm6jHIOEpXQlthYkhHIgWgTd1NbGnNNMMV/
MuvKtrUz0IGysU9u3QrOjyl6jZ/mtbl6cJutqqkrby3ydk1aouTDxz4WCG8N
j2eYuQhMVdmpIHCUUdqWkHwLB2nvPxpnJCttio2VVXVHV3heH5pI87uk0z1+
q0FjApC7hiZR4ah4A5DoB4PfBEagbObj3Bae0ge3VBd7hJHa790lyU6frAqh
TxbWoqfHtKJnJuTRoYV16drmSN2fqs3bKHIfCJX+r+ObE2j77FTFy/0hrp0o
252MPLE4hraPSqH7zMZ7T/vRfZUNFSw6QEWUvbdaxjMpJgJqu9GTKudfCXJW
fHRIfvGpcDVKa1SykfmEohTgKkI+r2vlG4WQz+EKrTGFi2gENPzez6uMKdTl
+Y1RSl3uC5Vk5sF5ibR/WpIkM0uYqyVIZgKNTpVJtxUa7WCjKgB5KrW5XFGx
CApzkakwEZks8LX5g4xSGT87K4iGtcg0yz+Iz09PC6E+TbLoj3lKap4vS0bX
+NypMT1ARhbOAOI3k/1EV35r0ZWo9uAU508iycnfdnx6BK0a1Yo+RUhutPda
u1J0nUeP2nYIBrFMBGD0KI1HVeARMjpARjvAaMNMODfKClTxdiULCVtE26Xz
fwULmlktyx9yktAl6nYhobkncoCGHPCCwoi2DUEm4j0rBJKFuaU8kAqe7saW
W1Rwlo0cOVLqRyoUdpeGk2w/Drw7SuA9PDU1Vd9/RSnhoLT1EP9QYxpwxF0n
gXrWiafprMjwStTPTqf2qRzGdJZkJcAIX3ir1DCK9y7XxAnGdAEwpjoZ5Rtj
ngqylS9yxN2nYYZZvkGmclvP6lLYXt0pXMj4cg9PeTMs4kj82KhK9MtsL7r5
dHW6ygLpu9nV6ANE2v0r0dL2XmKT2NAzSArd2J6KhAHICAncJieRoqKiaGw9
NxcyIgqfmBvJEjmGHm0URzOb+6GUo8koad0zU6pCK8IKrrYGzFea0STjfAsZ
OSKf1i6Dzk4PkYGWJhmNsLu8WcYpTUdpzJseYlGN7VzIiGNTvxRa1j3NJCP2
XUvUrb3jVvm4oqsHjazjLvJxsZaPwOOSdj40qX0mdWjbjNazRHxvdh1+JUNl
JDsG7t/k0BmjjQR7kI3vMy4OhhEdCqeLb0ZL+F0WjTprqdGY3yGLfl4aSfcw
xIDvs8SYUmcUfLZYit7GNJddqidW/Jav6VNISCMMtxR5kAmd3zudZvbIsGY9
HSjYKFaqi5SMdKrI0qD0Mb2SRS+oHToAowByf6hoyNOrY6UCVLI5UBzkJiT5
EEgqUNpBSgzBVTJSHVYnkY7Ey7KyquQzrzAv8fCX5vqJsxwKctfQBHoernJm
5x9zdRVIO4nMcNxhhuMsIPkuGZT8AhipTH3YcQFjc0LbdPp4TChj06klXXCJ
A9fx3Z1mIn8+LUJi8k/Hh/IDWSa2PG5MjzokxARBx7Pk6JDkpuNxN/iHhJgY
viK1H4OYDAxoyfltKiJ9SSPqulNstXIsAwBNT6oTasfCNRrTEPsRPGl2y/Lk
66lSlZqcLnvBkxTytG3S2LpLmpiCIY3NSfoyKTHb5X+HqSOd2JRdB2/riVRA
pvIyqh25/dKwLz3i91q1ainlWVEI1yvdTWCJusio+l5Ut0YWPVbfl/rwx0gj
DqrbpgVbYZmbEUfN0uMoSa0G1y3WbuZIGZfKTrRpDHqyTQLNbJ0olZ3VnSJp
WqskM9CGXxwbyhe3jaBBDVOpcEhFjgyq0EWtIv9iKpya400HHq9KLw+sTCs7
VqBJucHUmZXpig4VaFQ9Ve4GM4fpCk+thEjqn+EweGkHMPljDR6hwRxnT8sN
ZWTG0rCGUuRRr0d58Ql1SbarTsB5zuEv+PpmAaONucnvFEVOdTH05KWZ/uIV
gp687aopnRVwjUorOi/NChT75N0Cb9NOfl/ZKNX0YE+1NUo2RymCbuqfQhfn
hCBTC/20Ai7z0sH3hYJqlMEfj4Oz3Whunjc90SWTxvbOpTG9m1P7Rtn08YYw
usjB8I/8sBgWd26JD11iEXid6XQPJENiEgE2RCWGm2DYyUdK2BW/G6bIau0Y
1PQ8XJBAqwal0b1nwRZfKn6e49VXzdYcsUzawViw6xUtKg1ivq6rLvh69wOC
bxaY+e056F6hzK/FG0VwQqsKNTfrktCmADOV+QB0BqA2btgvn1NR94llTMlR
aerR39L05K+vbgmn/E5ZVMK3gfscw/nur2HhwPhkbhgAva3ymYLRleJGN/DJ
6MR4mSKFTjvYyT+4kcs0qkGT+BP35NQwU2UO5Y/Sr/n8BabqhXmuRiOjEsTw
dAm/tcjkw6Fi8B+FpE/3TqLdQ2OkCMRq0wFGcniDZCYIegq1IgbwD3zvp/h0
x9gGtPvxOnRsvLdJTCN7ac7bQzGHP4ixidxFYxrE7CDEtMhLd5OW89pUoIlN
PSmkoisxG0fY6bF6njI4YnQD6aAWsmhLikvUnahoF62uQlVGJCj+6blTUqed
1VTC5mVNmzZVb23vXeqtrVAH5GERdOea8bKzF1F0UxaBeenhLhEzxlrl8pHm
JwvHDdZJ0+DQbIdrxBxsJhUxU+/FnsGiC7vWy6TtPf0kYh7YKE0SitjnOapp
Er3Yw48+ZV14hhFymd/jV1ewLsTKHn5ffshR8yuDmHWd1fCYpjUz6bEG/vwi
udsBOv7sHVZToQ4Z0eYR5VykIZYvLMjzpd71Umh2iwApao9vEpbIL5in8xOF
XmR1e0NSgEw8Bpv4IXXwfJuf0W1TJmrYMQs/fzySNjyUgj96joM9TNhZ26Bv
g5VMOj0X9A5ffXRMND3/UIrp9tEthWpEulMmonVmibctU4LoAg6m81tl0v5H
E6RQY9glrbC7/VQYvTGhBj3UviG1btGMeuZm09S8SJne2iPPna5ydHyOo9yT
T1Tjv/Jq9MsiH7qwht97m/xlX6TYw9/XE1QweA7TnVguygSVHdGWHkMDSiy4
tis/5Z8rQwR0dxie2N1U8pqZjVSc83DWsV/VrBPO8ScqR7NYQfO6xt1OjdLt
qmZz8Wn+KMzLEp7BWSR1oM2Bbv8edw7BnTavvxREm8ek0vGV8Ugs4oPj7VCY
1xFR7w5RZe4Xg2W8A5KMsAbdW6OF4mrWm3dktpYZVD9lOoVU740OposWWUjn
60K6Vb1S6ej4KCnbnJoWSg/xp94lJtxFvu7ifJVxNEj3oHiaMWeHSvQQkehO
Lz8cR+v7Jmq0+YBpNvFS8tPEeWEb6uGzqtMZvu/v+T6/ZVQimN4/NhPWyTJj
/B4H4o5IaL25TyWqw+FMfwviEFYzCKT1eaGzEGPRg/ztzDi+bC6T7sm8CuTB
qswgXY0gO4xGinTw5zHt+PwMC+lcJo2WJZ2p9TTpRG6t7yi1UlRbNenQYSNd
liAd2lxg7x5RuwLVzsmih2r4UbPMBGqVHulCOnQDNsxMpkx/+2h/f39jcI60
A65q52EZaBwk4e+evt5SK0HdZE3nSHqkqUoGzsyLo6c6hItRZ0v3KjSmaQK9
x3Lua45Df57pRRc43jw715uOTfGijyfyMcmLdjxcmVZ1qahylxyt966NhZVg
nJfIOSyeQOEZ0yhg3LFybmlrD0kQYrnVMv4anJveLEBqKOr18JXJq1+OrWIa
vQ2Y3dT1kzulQacbYDB55tPHo2WJlUXVKUHnZpZQsGzvDsJe1FI8pEUQc/7u
ac7dX+TUc8rWWFnEXIkuRN9eKAM+yzDu9vIwOrsonfY/0dROe6bn2rCxKYlO
zAiiEc3cZWRy7aBytINvfmlvMJ1hpKEYBcydWeBD51f70uUX/KmIuXP/bT0k
6pMwvPU/C4f+YsRtf5LflM8muHYL7lSJxZ0zU1gMJNFtvp9b/Ll0lxGKRS3S
dv16sEXTbQ9EGcMIgnHVG7p8sU+f7rUExK86A+LCJxLFGoSgGKP6Ds+KF7w5
ECrbS5PuhQeRTgorSBmuV35H4DO/cxZd3R6htBzU6juhMvcF0XHBgAz6bW2k
eMVL1mkPpCvsWNhp4FWwZhH1ZC6G3RIl6TTsbIp21U3a7RqWSG89Fi8ZxNeG
J9CeEQn0J19+ia8H8ZBFvDC3bPbwrJN2fJ/MO34djLoKmKfCY0+5rDA/kgq6
pmq3j4g7UI9vg/J1Bbn8e/6+H/i+f+LH+pEf6zST8POpEbRhdDM6Mj5UpRLd
dSrxrWFVIcuEd0I9Nw09jG7H+FITemUlHQ4GHn/f3NaAX2SVctQsWtWfK1rg
1zLGISNVIfOG89EtVbSaUUExdqXLuQQFuih1FeZEmAuMNfykMtoxzoxolR3I
W4oZeCTAD/19iA0RF3bJiRRDYm5GPLVMj3KBX15aiMCvRqB9PrZ4avhJAu0N
1nDvK8eNaLzCwUajSySNbZ4sbhs0+D3fPVTiWWwCRdPfdtZ4izieXdIhig6N
qUxfP16ZfphclX5nfXdyajX6YFRV2s767p3RVenVoZVpdbeKUjQeUj+c2tdM
soN8dqDPVkVE3sBsdwqugN0WHi7wM2bdLM6rLO6bvvWSZN+Eyhv4mmH5TaNQ
vMAJQVF5izQAF7oCEEoOWLo4O9AKQIeG321dInGBnyrMX3nS3xB4ouxkoKAt
zwV6RQUBNCg3S8TdiSlR9PfiWDo0qwFtndSKtk9uST8uyBZhR2sYLWv5eJrl
BMNx27DKtIk/Qs59EEq/7Qik7/i+jo6uQt9M96If+Kf6lcXYRYzefDVQFoKL
qDuipwp/piYIH30ukXbNSVHC7i3dH8hUu/oaS64OzI4VARy7VadbTNS7TJ7i
XVokmvMHdcT7siWCfUPjDve3X3/9xgOi2e26sxkTmbdw7LkwViaUKuBJdLxF
qIdyyuZAg372fxJ5hr+c7+rihkjK75KlHhYhbGGYwt8+lQzc/HgqfbkozrVi
stbEnwPs43cq04/h52/kBgV90lq4TCw6S9BUWBZ/3oK/I+Oi6VmW+EgIonDy
48wQusyX/4l50IzA0j4dA38uJWVhn7tkBB301aRAGpibKZUTgZsdbJMaM7Pl
R0bhj3wfP8/zpZ/n+0ogi/TfvvE1afXIFnR4XIiul6CUrNQegtnKDpuQzoH/
jTjWIB36AeG10YizSjrmmzDOTnOEdM2j7RLAWklXMzZE+GNIvGG1PWhwDY9b
FtK57Ax0IV2Zxclwahveaal0PlrDgcAWb3FNvOG4GCE0iIfS75CaKgsGuVQ/
O4Pq8tEiI9aFeJiGAxrWC7XLbAo1wdVN8l+6tc8Z2IaYgS2Ahymou/p4S5AL
SzZgN6RxKu3iwHZLN0/qWT+d3h1WiT59rJIsJfmeVd5P01heM+j2stLb2KsS
relRUaCH0ycYerAY1srJRkRrU9CrKj8GwIfYvCZ/fDzR2N0E3xIGH4of/Rok
S3Q7p4UfdauT+m3rejUU98pLiP5MNw/FPc22m1oAsuizA3r8SwP2blmwd3Za
sBQzcLkFe0rzVXLaZpzokwDX7P1zJvJUWCuKT4W0sarywcfhMbG0vn8GvTqu
MT3UozMtz2/Hf7/8oMtDXUJbK/3oGX7PrQqkgk6RdHZvEP3EoukrFtKH8yvT
8aledAodiE/50u8b/ekvJuNNJlHJx3pY8ZcR5vz0y29GqSrIh2F24BEEKQyl
DVPS6DDTAeArWspRNTZlYUsW9Nz7oU6Lt1H3fVUXPIwBYvtDVFBZTd30TX3z
Pc7Q9uL6SOk/MSw6V9eHSa3FpYHwAQjc9CAEOsRX46VkIUe3qAfvmpaiaAfB
9z7/6O+Fmcm8g/MTaf/0JGsyD9mHtcw9E37uTvg9Zc4Gg6lmqbQOGrrPms7z
pl9mhdCY1pn03bRwSeX9xby7zLy7zDcD+5DWs1pqjELIudLcc4jmKy/6zto4
iI9Uw9n9vfbXqARfRTrDevEnvrNfGH6/MmDNSJe138uPN6BdY+qoiTripVFj
wXIZWqiDmgC0W6RedNVy0gjNoS0M2hUc4J2Buzkc0fbKcKPsILvGXQVqFudF
iYmJGJ1gCjsgDyvM/Mur/TMW7JnRbbwVe27jVqxY8QXjrlTVQgTY/ObueA3y
unfvrohXCTYezCsziYdT4AI2yjYZkfKSNVfE49eWecc/Xau0cCFegzAZXehv
SYLNbOomEk/Ft6lifEFc261+ppheZrVOkHFf8AMubx/BL040vdyjPL3YrQoV
tI+lD4dWpCOPVqbTE6vKwPzTk6rRJ/ks6/pzXNupAk1t5kmLO1aQnZkzWpaX
MRS5NdKof00/Fdvq+NagXW6Ugx6r5eYi85DPgwlmEks8xLk966Xc6l4ntXzf
jdoS5C6h+jFWmSjtSnlXEmzMPVaQovKWOJWegTy4qgsfiaMX+yfTnUUuyNOF
i4qmG+buQlfmubTvuWi9aFPr3VkcRN/OrkmzB3WklSPb0fHZdeiX2THUo1E2
BzzhZZJ5TuJVF+IdnBRPu/KT6Hd+3B+e9aOjrPOwl+DzKV50Ehv3VvI7iYl3
6ZVAus7cuQu993mEQTw7xJ8tjpaNy6Dj2xPVxZ+G05mdcZTfM4turcV7meUo
y0ZMbL/L4Lz/lnbTSNgY4pRvxhhqXAbpiOvf1bfbb0S6WvLpSFcMfTMTXZyJ
PZplU9FGxF98iZoi4aEY+GLg/4CeMhNWMyPdNY+m0elnYxXkALsPwxX43g4V
GXh6bSxteCyNSrYEOa3YGJ9ocM8W44x69WF2AnK4e3uZCnkZgGaOzywEL4KF
0I9a1MmmLYOS6PVHEugKX/YXuLfETzGQdeCfFv79YeXfHIS91UuHvVr/sZD6
eabiH+QfxkiDgSgN/2jGwpXk+p9mYXEd3xE/2G+L/ISFiHdPzaxOxzjefWpk
K9o7JgfLE5HzU8uEJjdzp45JZSDoYUIQrmuGoBHcSmzrAAftSOzx9wyr7U6J
1ctpDKr/62SmUlpMhHSsGNpvaC0Fw7qhdhmyoweRugx3jXOJdl3GO2gSyswF
7KV/QkW7yuJRSS5O8ilnkhAmcmAEk6Y7panEUtPMhFIkVE3GTSMdhwICAjQJ
YduWDdTOYDfNNLvs6O3HGi+NXtUOaWnP42A3v2kybe5eXXTfEy1jaUcfP3pt
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
c5uKHLaSuGdePGis4nt2qEYwtZHgXkMWq+FQnqpDMH+PBK1axUmeVl2hr+mL
Coex7S3LpvrKjhQbFmTaFC1i7JQddpc2yivNOCWmApfmNpPLvdKt5c9OuRRq
2Ivu5+/M32g5FyoZZhXMSJTP4VmBNYAINt7Y24NJ4FApb+6qWqTT8h5xNKVr
Nq3rl0n/2RJM368MpGt3+9G5MRHdOu3yCFI/CuYIlSUp9Lo40OsiGSQOmJqm
shqVWxRgM1hstSRMrHpYzWPqXxQjwTtJDJSHG1WCKkZcNywKiy1hx8/mn4b6
5qGsmfkUfwv+7yzUxbM0yGvE9EDaKbxH6FqcLZlreHUgkmfommeoqDUyBAqB
eFU/gK40q8pDqB1rIKxWu6u9+HPnQ6dH+tIzE/3olVn+9DZaU6wIoq83BNMv
O0Lo9326pacxdNfALwtjuMW/oeZ5GeZXJ9L4zrl0aQLSNwPo+9Wh9BN/pn6x
4Lehe2wI5Mbw+/2WWBkEvLoWLnUC8GtT/PVskGRxW4ab6+3+RBOEAFkZQxWD
pjeOxBqVesebeIgC9tWpwlHOpjHvgy+vT6a9E7ItcbtITdvDEbw2frUtjlYP
yXGYD0Zw6ZDSxBfuSaWzs9Mk2i8kPiDa2I4TtkA6MdaX6gXEniyPVcewHsWZ
khQzywJi7HbgMQmIG8LYm4a1TaVJHZtJ0gWk8WbdxQIdhnabUx59XaSLf660
d9ZDGmlNn3ia1CXjNvwaNrEhfQW5o1XB3NNj0E5C2RGo2UC28IbqVKlkfoWR
e5El8BszUbQWSJdYBv8FMvhulsELg+njRapL/if3BNGXS4Lp2+X4sEIOh/Bb
JZRu7gqjD9cmyNL124EI+nJLKL21IOD9l0Z7Rn6zzahK8JLwEjbt8Bi7K09C
cNs1uymieEJVQwN3yU0SDOsonqGBOyJtIqepk03sIsh1l+pnzAE3cFuVGw4E
q7ZA3pJNAeHbMJDXALpGe144EAMKInR6Bf7300W87jSHida7JE2mLRnsRS7b
WNiNLT1ofK8WVFiQb+nM2Rh/lTWhxb5pTXi5OIYp+twZxPnKKmg4areJnA4R
B6Frot1cXaD1sPRjohB0MViMPNqhJcr3m8Jvp8NDE+ir5UyI7cG8ygbQX+f7
zb21yNMWrH6UCeJRCpKumsgAHBYeh6ZVyEXLtMFFYSrOxycUwb3Ut5dYHWJ3
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
Gs+kumNEAraB0Td86P3K5vHSxsbgq1Dq801N6c89WDrroOsbAukyk+q7JQF0
tiqcJhXm0LkqP/qAtdb9I2Pp8LAkenp8I5pYkENvT1ejZ88wud6cJj1SoreW
9cowSPWQWr1sIZW3OWHFMI6yJS83VXYty4hTDHxuIqAy5gLAJw7TY/fa8CMf
3ixM4mIGqeZ2MmJhXk5KdVOj8Sd2TKSx7ROlzmFJkRq3cNtAH6k9eHKMz6P/
XeCj9Y1DPG0We9oBWjVJMF+nMcElZFZxn2EgReUVpVCvrp37FxYWKjEs2Y7+
xqNWY1dcM5saXcPUl1ziY4qYSZISLop3M90iym9XWFQWYv1bdX/+xj7KLaJ0
7VZWVLsGhctaTUwswVIa1NxiqjIcJBapPFtpp1MzA+n0PIcg68KGEPpkVTCd
WcDiZkkQPTgtnlYMyqRP+Kr2+XIHXVgWSN8tC+Rj9Zc1DlswXZaJO3Z6vQqL
b+x0fAJ2NuDmkDjYLYMSRV3hPrwHupb3S6W9w+Kd6LpZbCzRbGF4g/XW2/PV
wKgPdAHH6TnRtLBvtmipr2sB7MubuEWXoL85uDmM74uUfOaifjl0dlGcq95S
8HKTqXpe9c5tdg36+7isjz88NZPOrEuyro93QdDFfbG65kJWJd0jo+sNwfVP
F8HlJv9RDbzXYX9nFYc3Xdwb46zeqBv0F2+IB3B7hHNdiKaXCoWFa6foL2Ew
VK5d3xvugq/zy+KQwrTiC/BClVoIfrQlg2lkMbf28Sx2ngTZ1cXFxfLroLOm
t27o0sW1rtiLtvZmGTHAh11dFK3rl0xlrIOQgVrSN4vWDsiiSpbEY7rm0dNz
U+iXfY3or4Oo1+DfxeS6xhrryip2S4v82VOksAtMpk/n+NP7M/xodZ8M9gBN
2INk8v1JrL+iaU63LL7oOsl1aGgi7R6UrGJf+r79/aVKTQWtkyT9F29vYEb1
0dOPMUooVMNYk1KLORyapYwh5A0KM4CtXs2SqQCDrC3oqunkNIRA1IpuansZ
BnEs6BJJfVtnyedI8N7KT839w33o5Djfq2x4Yw+29DLQJe1XPm42+duwZWS0
peoCeclxujMM9+HzsTprWlrQYsOIESM0ulA+u+V/QFeZvDVjXsaMUL0JQLbL
5Uc2MFkMcq1yma8k0Xo3IMyWoNa7DvKjg1gOU+avFg2w3sJSA6woFHDpBQcY
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
\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"83b735a7-6dc9-4f41-a33c-f372333cf00e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", "x"}], "+", "b"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"m", ",", " ", 
     RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "8.9"}], ",", "8.9"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"54134fc2-c808-4b04-9bd8-003f4c497eea"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = -8.9, $CellContext`m$$ = -9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], -9, 9}, {
      Hold[$CellContext`b$$], -8.9, 8.9}}, Typeset`size$$ = {
    360., {114., 118.5406437826012}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = -8.9, $CellContext`m$$ = -9}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`m$$ $CellContext`x + $CellContext`b$$, \
{$CellContext`x, -10, 10}, PlotRange -> {-10, 10}], 
      "Specifications" :> {{$CellContext`m$$, -9, 9}, {$CellContext`b$$, -8.9,
          8.9}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{408., {169.13403309800196`, 174.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.896703582453751*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"38d1b9a2-4d4e-4d4f-8edc-d37996a792d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"amp", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"freq", "*", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"freq", ",", "1", ",", "5"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"amp", ",", "1", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8966478809559526`*^9, {3.8966484660003667`*^9, 3.8966485138888807`*^9}, {
   3.896649309459126*^9, 3.8966493176529694`*^9}, {3.8966493598295174`*^9, 
   3.8966493693191676`*^9}, {3.896650522452793*^9, 3.8966505559630604`*^9}, {
   3.8966931508384085`*^9, 3.896693172992713*^9}, {3.8966939255417924`*^9, 
   3.8966939256086135`*^9}},
 NumberMarks->False,
 CellLabel->"In[23]:=",ExpressionUUID->"084a083f-e747-49ba-9fa7-12f84a1a4e70"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`amp$$ = 5.83, $CellContext`freq$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`freq$$], 1, 5}, {
      Hold[$CellContext`amp$$], 1, 7}}, Typeset`size$$ = {
    360., {112., 116.80726778811908`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`amp$$ = 1, $CellContext`freq$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`amp$$ 
        Sin[$CellContext`freq$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}, 
        PlotRange -> {-6, 6}], 
      "Specifications" :> {{$CellContext`freq$$, 1, 5}, {$CellContext`amp$$, 
         1, 7}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{408., {167.13403309800196`, 172.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.896647857061263*^9, 3.8966478833855476`*^9}, 
   3.8966485147194376`*^9, 3.8966493187846994`*^9, 3.896649371357763*^9, 
   3.8966505263631735`*^9, 3.8966505582730627`*^9, 3.896693174289524*^9, 
   3.8966939272652397`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"6a73dc23-ef1d-4ba7-85b9-5a02c028299c"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.8966495979287915`*^9},ExpressionUUID->"648367bf-1604-4898-865f-\
11e4ae8f0162"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  TemplateBox[{
    FractionBox[
     RowBox[{"sin", "(", "x", ")"}], "x"], "x", "0"},
   "Limit2Arg",
   DisplayFunction->(RowBox[{
      TagBox[
       UnderscriptBox[
        StyleBox["\"lim\"", ShowStringCharacters -> False], 
        RowBox[{#2, "\[Rule]", #3}], LimitsPositioning -> True], Identity, 
       SyntaxForm -> "\[Limit]", Tooltip -> "Limit"], #}]& ),
   InterpretationFunction->(RowBox[{"Limit", "[", 
      RowBox[{#, ",", 
        RowBox[{#2, "->", #3}]}], "]"}]& )], TraditionalForm]], "Input",
 CellChangeTimes->{{3.8966998854051847`*^9, 3.8966999210142646`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e19e0225-edab-4115-abe2-d6b4dc7459db"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.896699905970936*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"15a487e1-680d-4a7d-b0c1-f3204ac46cbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966999862713776`*^9, 3.896700036892793*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"0eee8185-dd21-49ed-8c85-a019619d4dca"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
8Cil5TeD/wc7/5zN
       "]], LineBox[CompressedData["
1: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
p5FrX/+dmJtjIdXR2BXZkUb+B+WCrb4=
       "]]},
     Annotation[#, "Charting`Private`Tag$199427#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-0.21723362469079935`, 0.9999932211542828}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8967000393346357`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"64a46bc3-3df0-47de-a8f6-1156641aaefa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "3"}], "*", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"72d932f5-ddec-41ad-b6e8-7e01f4960638"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "^", "2"}], " ", "//", " ", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8966941991098156`*^9, 3.8966942241119027`*^9}, {
  3.896703732034153*^9, 3.8967037712204137`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"da522338-3237-42a7-8d76-ffad7853eafb"],

Cell[BoxData[
 FormBox[
  SuperscriptBox["A", "2"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8966942016879396`*^9, 3.8966942253931475`*^9}, {
  3.8967037410294313`*^9, 3.8967037724097624`*^9}},
 CellLabel->
  "Out[54]//TraditionalForm=",ExpressionUUID->"adcaf0cf-6faf-4bad-bb7d-\
9bcbe30d89ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"5", " ", 
     RowBox[{"x", "^", "3"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"x", "^", "2"}]}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.896700846472906*^9, 3.896700880130356*^9}, {
  3.8967009479692726`*^9, 3.896700948090273*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"dc7a3b79-105b-4a8b-8653-9367bbb81427"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", "x"}], "+", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.8967008816615543`*^9, 3.8967009488982725`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ccc6271a-489d-4269-9907-51d92aa580d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"5", " ", 
     RowBox[{"x", "^", "3"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"x", "^", "2"}]}], "+", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896701413397246*^9, 3.8967014184441233`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c80b3cf9-a426-4287-a725-dc18e9ee0393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], "+", 
  RowBox[{"30", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.896701419543213*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"31afe5ce-286e-4103-9661-a2f6e16d7a1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.89670149322223*^9, 3.8967015019366417`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"997720e8-e76d-4c29-924e-399f0a9f23e2"],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"n", " ", "\[Pi]"}], "2"], "+", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.8967015036339293`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"b63d46ca-9bce-412e-a800-603bd2f31efd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{636., 656.25},
WindowMargins->{{-1421.25, Automatic}, {Automatic, 168.75}},
TaggingRules-><|
 "SlideshowSettings" -> <|"Toolbar" -> True|>, "TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"16cc9d50-b794-4037-a858-6ab6df8a05bb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[3739, 112, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c5f1592c-4752-4c86-98c8-089d204a97b6",
   CellTags->"SlideShowHeader"],
  Cell[10053, 298, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6f6c21b3-b6f1-42e5-be72-f7a8cb1c1f68",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1018234, 19423}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 3, 98, "Title",ExpressionUUID->"cfdc85b7-5231-4133-9449-e857906b3f68"],
Cell[741, 27, 684, 13, 173, "Text",ExpressionUUID->"ecb3152d-062b-49ab-9685-69ebfe46c7b6"],
Cell[CellGroupData[{
Cell[1450, 44, 156, 3, 53, "Subtitle",ExpressionUUID->"be174d81-0617-4342-96fb-c1f74a46ceab"],
Cell[1609, 49, 421, 9, 104, "Text",ExpressionUUID->"ae5fcd79-8d99-4f31-9600-9c0c31004902"],
Cell[2033, 60, 157, 3, 32, "ItemNumbered",ExpressionUUID->"fee7b09e-637f-433f-8687-58f5911821e9"],
Cell[2193, 65, 160, 3, 32, "ItemNumbered",ExpressionUUID->"e86d4c37-c552-4f2a-ae5e-44d4e3a2a294"],
Cell[2356, 70, 161, 3, 32, "ItemNumbered",ExpressionUUID->"188a862a-abe6-4c8c-b38b-1fd849d5a82a"],
Cell[2520, 75, 159, 3, 32, "ItemNumbered",ExpressionUUID->"5377f3bb-d850-496e-8685-7c38b7d3342d"],
Cell[2682, 80, 162, 3, 32, "ItemNumbered",ExpressionUUID->"1cbb642e-037b-419c-9cba-38fc23602563"],
Cell[2847, 85, 167, 3, 32, "ItemNumbered",ExpressionUUID->"df96fb61-58d1-439d-8de7-6c09f7e6437a"],
Cell[3017, 90, 209, 4, 32, "ItemNumbered",ExpressionUUID->"1bbec468-b95d-4cc6-8eca-2201d9b5b467"],
Cell[3229, 96, 209, 4, 32, "ItemNumbered",ExpressionUUID->"4a915036-09c8-4964-822c-ff1c9698e1aa"],
Cell[3441, 102, 249, 4, 32, "ItemNumbered",ExpressionUUID->"cb49a242-2cb4-4f59-a560-fe207dfb2cfe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3739, 112, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c5f1592c-4752-4c86-98c8-089d204a97b6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3886, 118, 161, 3, 67, "Section",ExpressionUUID->"5712ec21-4962-4d1d-ad51-6481441f24d2"],
Cell[4050, 123, 287, 5, 28, "Input",ExpressionUUID->"649c27e3-dc96-4403-b300-ae3ba10c3065"],
Cell[4340, 130, 191, 3, 28, "Input",ExpressionUUID->"3b1a4463-7f69-445a-ad06-464ae10b373b"],
Cell[4534, 135, 187, 3, 28, "Input",ExpressionUUID->"fcf10900-9004-472b-ae3d-7646a4db43c8"],
Cell[4724, 140, 275, 5, 28, "Input",ExpressionUUID->"1e56e503-5ef1-4082-bc00-7db10389732b"],
Cell[5002, 147, 161, 3, 35, "Text",ExpressionUUID->"d1ce020d-1238-406a-853a-e2fe68a56a66"],
Cell[5166, 152, 356, 7, 28, "Input",ExpressionUUID->"c8fa79d2-eee8-48c4-9316-37a40d49bc6f"],
Cell[5525, 161, 159, 3, 35, "Text",ExpressionUUID->"7d16275e-7d25-43e0-88ed-40b6801c3a8c"],
Cell[5687, 166, 283, 7, 28, "Input",ExpressionUUID->"e150f3a7-7a7e-4a98-8f96-7cf6afa462f4"],
Cell[5973, 175, 230, 6, 28, "Input",ExpressionUUID->"6e6f11da-f294-416e-a690-aeab5f80903f"],
Cell[6206, 183, 232, 6, 28, "Input",ExpressionUUID->"8e175956-77ea-4920-bc09-1cfd98137fd0"],
Cell[6441, 191, 161, 3, 35, "Text",ExpressionUUID->"5de6e67d-7da3-4921-951a-ac20fb2e7f31"],
Cell[6605, 196, 137, 3, 32, "WolframAlphaShort",ExpressionUUID->"4738b626-7675-42ee-93b2-0a44184914c9"],
Cell[6745, 201, 270, 5, 28, "Input",ExpressionUUID->"7a5b4706-07cb-4d0d-9ced-700d54d19955"],
Cell[7018, 208, 367, 7, 28, "Input",ExpressionUUID->"b11e6210-cc4e-4599-92c8-2c7f86e7b0f6"],
Cell[7388, 217, 313, 6, 28, "Input",ExpressionUUID->"3f462caf-478c-4dc9-baa9-e74e1bacb3bf"],
Cell[7704, 225, 437, 9, 28, "Input",ExpressionUUID->"3e033b0f-f880-4df8-a01e-78a4d9240a1b"],
Cell[8144, 236, 285, 7, 28, "Input",ExpressionUUID->"38f2cc01-8148-4f78-ac32-83563802e2f8"],
Cell[8432, 245, 335, 7, 28, "Input",ExpressionUUID->"81101c3b-2496-412a-b304-873fc7bc587f"],
Cell[8770, 254, 287, 7, 28, "Input",ExpressionUUID->"e2aaf9aa-8fd0-480e-8dd9-f3457147a4cc"],
Cell[CellGroupData[{
Cell[9082, 265, 197, 3, 28, "Input",ExpressionUUID->"a1c76086-77bb-4191-b67e-0d5b50834e7a"],
Cell[9282, 270, 170, 3, 48, "Output",ExpressionUUID->"e1fae550-b6a5-4e83-98f6-c729f23bb92e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9489, 278, 176, 4, 45, "Input",ExpressionUUID->"79fad8f6-4447-4be9-a978-f6751b411cf0"],
Cell[9668, 284, 168, 2, 32, "Output",ExpressionUUID->"e78af02a-6421-497a-a721-dc3c9045462f"]
}, Open  ]],
Cell[9851, 289, 153, 3, 28, "Input",ExpressionUUID->"6a3e9b5e-065d-40e0-bb53-741da4b6a018"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10053, 298, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6f6c21b3-b6f1-42e5-be72-f7a8cb1c1f68",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[10200, 304, 310, 5, 67, "Section",ExpressionUUID->"d874628d-cde6-4de0-ad14-c44c57a7d696"],
Cell[CellGroupData[{
Cell[10535, 313, 376, 6, 28, "Input",ExpressionUUID->"d032a92e-4325-46fe-b7d7-5e8e8ade9f79"],
Cell[10914, 321, 151, 2, 32, "Output",ExpressionUUID->"f1d4d74b-2bed-4aad-a8ea-e090e7dff38c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11102, 328, 231, 4, 28, "Input",ExpressionUUID->"57cd8a72-6f66-44dd-bf55-38ef91e80885"],
Cell[11336, 334, 151, 2, 32, "Output",ExpressionUUID->"62b590f7-2dc7-43b1-a850-e33a61925321"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11524, 341, 228, 4, 28, "Input",ExpressionUUID->"4f1a4004-c5ee-4c5f-8826-48a02a74f0b4"],
Cell[11755, 347, 151, 2, 32, "Output",ExpressionUUID->"b3b3627d-af96-42f5-8b37-70dacee290de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11943, 354, 287, 6, 28, "Input",ExpressionUUID->"3578fb7a-f0ad-4a0c-bf57-414a8812c8e5"],
Cell[12233, 362, 152, 2, 32, "Output",ExpressionUUID->"32d1c636-f7a8-48aa-989e-bb4a1d7c8aed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12422, 369, 227, 4, 28, "Input",ExpressionUUID->"5429b464-8f37-477b-830e-dbc3f5fd458b"],
Cell[12652, 375, 169, 3, 48, "Output",ExpressionUUID->"0043142e-fb06-4885-ad71-db5de59d5dda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12858, 383, 230, 4, 28, "Input",ExpressionUUID->"0abce164-53a9-462e-a791-27d2b2c58b64"],
Cell[13091, 389, 151, 2, 32, "Output",ExpressionUUID->"123ed382-3773-4e4a-8af5-62bb4bc2b87e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13279, 396, 236, 4, 28, "Input",ExpressionUUID->"d49aa7fc-c5eb-4095-8aea-1c4b0b6cd69c"],
Cell[13518, 402, 149, 2, 32, "Output",ExpressionUUID->"ad53f5e0-79f3-485d-8a82-5eb7055f2814"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13704, 409, 258, 5, 28, "Input",ExpressionUUID->"e1ca9380-1853-4082-912f-c2bcfffac956"],
Cell[13965, 416, 149, 2, 32, "Output",ExpressionUUID->"24bbe336-666e-4b4f-94bb-b3c4d6e44add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14151, 423, 238, 4, 28, "Input",ExpressionUUID->"112506ac-b3e1-4c6e-8d5e-846b9cbb3667"],
Cell[14392, 429, 174, 2, 32, "Output",ExpressionUUID->"6adc8313-f431-428d-8d04-72c9f792dd48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14603, 436, 213, 3, 28, "Input",ExpressionUUID->"e5ab2d6c-ef12-4426-9d24-e1db01db5be7"],
Cell[14819, 441, 177, 2, 32, "Output",ExpressionUUID->"bdb9437f-fa2c-4ae7-b04c-4e691fb1b9fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15045, 449, 259, 4, 67, "Section",ExpressionUUID->"b939623c-e98f-4c13-870e-8c6588ac6bcd"],
Cell[15307, 455, 302, 5, 28, "Input",ExpressionUUID->"51fe7aeb-ff12-4bf5-a565-6dffa958a395"],
Cell[15612, 462, 115, 1, 28, "Input",ExpressionUUID->"e63fa8b5-c56d-4681-8c08-cdc52a7eb8f9"],
Cell[15730, 465, 158, 3, 35, "Text",ExpressionUUID->"fbd16529-bc4c-4653-9371-4a084c1654d6"],
Cell[15891, 470, 204, 5, 28, "Input",ExpressionUUID->"93477270-4ec6-4324-b979-36ea9b399e4a"],
Cell[16098, 477, 129, 2, 28, "Input",ExpressionUUID->"4151270c-f2c1-4c28-ac42-5225d17fd615"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16264, 484, 177, 4, 67, "Section",ExpressionUUID->"852f2ba1-7936-4c52-841f-48866a5c462c"],
Cell[16444, 490, 311, 5, 35, "Text",ExpressionUUID->"4c633a31-81d0-4e91-9ff1-528ffab705ab"],
Cell[16758, 497, 153, 3, 35, "Text",ExpressionUUID->"f0efbbdf-9c53-463c-9e7f-d080a9146db0"],
Cell[16914, 502, 193, 4, 28, "Input",ExpressionUUID->"d7451e07-06a5-4584-9c32-a7275e4cc8d3"],
Cell[17110, 508, 190, 4, 28, "Input",ExpressionUUID->"dc833cce-fc2c-4e38-a018-0b44507dd584"],
Cell[17303, 514, 190, 4, 28, "Input",ExpressionUUID->"268ffe94-196f-47a1-9bc3-07d9d38b8c58"],
Cell[17496, 520, 190, 4, 28, "Input",ExpressionUUID->"a713608c-2532-4ec0-9f49-d000204d809c"],
Cell[17689, 526, 189, 4, 28, "Input",ExpressionUUID->"f35dd1c2-d864-4e44-aeb1-c907f8e6d145"],
Cell[17881, 532, 189, 4, 28, "Input",ExpressionUUID->"550c5660-84a9-4a42-b902-ceba510f0bec"],
Cell[18073, 538, 239, 5, 28, "Input",ExpressionUUID->"8417752b-0636-401f-90a3-9afb6eb5ed7c"],
Cell[18315, 545, 261, 6, 28, "Input",ExpressionUUID->"5313aeb3-bc0c-4784-a114-25eab51f8a56"],
Cell[18579, 553, 274, 6, 28, "Input",ExpressionUUID->"1f8aeab4-a112-4c5b-b71f-0abe8bee75a1"],
Cell[18856, 561, 312, 6, 48, "Input",ExpressionUUID->"0e5815ec-d434-4fa6-a37f-f82afef9219f"],
Cell[19171, 569, 259, 4, 28, "Input",ExpressionUUID->"0b0eb9bd-a4c2-4383-a292-f82fa740c1bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19467, 578, 236, 5, 67, "Section",ExpressionUUID->"51ef2c9a-ee75-48c2-9198-c0fa12c2ce6e"],
Cell[CellGroupData[{
Cell[19728, 587, 557, 10, 28, "Input",ExpressionUUID->"a6a76a21-8109-4bd8-90c2-25016d14642e"],
Cell[20288, 599, 263, 6, 32, "Output",ExpressionUUID->"5729689e-ef5e-431b-96f4-8ace3086df7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20588, 610, 244, 4, 28, "Input",ExpressionUUID->"b2ff3928-0bc6-4487-b853-bf4904a0c18e"],
Cell[20835, 616, 265, 6, 32, "Output",ExpressionUUID->"44959d5a-ba40-4758-96f4-a6e43a0c585f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21137, 627, 180, 2, 28, "Input",ExpressionUUID->"768e8319-045c-4b10-a6bb-81ea7a4709c8"],
Cell[21320, 631, 265, 6, 32, "Output",ExpressionUUID->"2cac4825-fc2e-46e9-aa1c-d7cd38e666fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21622, 642, 232, 4, 28, "Input",ExpressionUUID->"53738023-e871-4b82-9315-a93998070029"],
Cell[21857, 648, 263, 6, 32, "Output",ExpressionUUID->"d41d9b14-149b-4360-90cf-7f7e9be2c9f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22157, 659, 213, 3, 28, "Input",ExpressionUUID->"b94d8ae2-e23c-43d7-ac75-bf8647da351e"],
Cell[22373, 664, 265, 6, 32, "Output",ExpressionUUID->"87e363d9-733d-4800-916d-9b2882578dcf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22687, 676, 321, 5, 67, "Section",ExpressionUUID->"97788d0a-bc7f-40eb-91a0-e3c73b0306df"],
Cell[CellGroupData[{
Cell[23033, 685, 810, 21, 28, "Input",ExpressionUUID->"e52a1c6f-3a6f-4e11-bf91-3125da5b5660"],
Cell[23846, 708, 758, 22, 48, "Output",ExpressionUUID->"7243c7f4-27dd-419f-9dc0-b16a2cdc8483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24641, 735, 302, 7, 28, "Input",ExpressionUUID->"c963e3f3-17b1-4849-87b3-0332ea3abd35"],
Cell[24946, 744, 296, 7, 32, "Output",ExpressionUUID->"e55f8ee7-57c4-4d1e-b64e-5e1874886634"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25279, 756, 342, 9, 28, "Input",ExpressionUUID->"87171e3b-b4f5-4e9d-a8c5-2bbd5e74664b"],
Cell[25624, 767, 321, 8, 32, "Output",ExpressionUUID->"09a91e6c-8074-4062-be95-abfab1af63eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25982, 780, 14850, 362, 67, "WolframAlphaShortInput",ExpressionUUID->"a55de065-3b7d-4962-98ed-b1930240172c"],
Cell[40835, 1144, 742, 24, 53, "Output",ExpressionUUID->"38352687-910d-4460-a66b-a7f3a31f7633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41614, 1173, 14152, 347, 67, "WolframAlphaShortInput",ExpressionUUID->"e2f2643e-50c3-483d-8ea9-993cd68103cf"],
Cell[55769, 1522, 228, 4, 32, "Output",ExpressionUUID->"6efd41dc-0f50-425d-a46f-5d8b82baf741"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56034, 1531, 198, 3, 28, "Input",ExpressionUUID->"23cf7c72-1fb7-4638-8100-07c3f19a56f0"],
Cell[56235, 1536, 217, 4, 41, "Output",ExpressionUUID->"017219ee-1a96-4481-9665-dd8236723797"]
}, Open  ]],
Cell[56467, 1543, 210915, 4203, 97, "WolframAlphaShortInput",ExpressionUUID->"cdd611ed-adfc-4625-9407-9decedbef65c"],
Cell[267385, 5748, 154, 3, 28, "Input",ExpressionUUID->"494421b4-3c5a-4baf-8c13-dbb91657cc06"],
Cell[CellGroupData[{
Cell[267564, 5755, 194, 4, 28, "Input",ExpressionUUID->"127f009a-f00d-45f7-8b73-9d86b85c3863"],
Cell[267761, 5761, 38091, 756, 115, "Output",ExpressionUUID->"2563f8f1-02e6-406f-9831-aaa1c21ebf73"]
}, Open  ]],
Cell[305867, 6520, 242, 5, 29, "WolframAlphaShortInput",ExpressionUUID->"9714372e-c09a-4549-a230-6be272c59283"],
Cell[CellGroupData[{
Cell[306134, 6529, 140035, 2712, 67, "WolframAlphaShortInput",ExpressionUUID->"74901a7a-0e80-4070-b10c-f1175498ce38"],
Cell[446172, 9243, 16301, 285, 185, "Output",ExpressionUUID->"b4d87548-e940-406a-b46f-58e6b716312f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462522, 9534, 162, 3, 67, "Section",ExpressionUUID->"6055b929-8ed5-48c3-a199-b132800b876a"],
Cell[462687, 9539, 316, 8, 28, "Input",ExpressionUUID->"f60b91e1-3f9d-41cf-8866-ff8b73fdaa30"],
Cell[463006, 9549, 182, 4, 28, "Input",ExpressionUUID->"7e2b1202-ed76-4988-bf76-c968c0833ca7"],
Cell[463191, 9555, 524, 13, 28, "Input",ExpressionUUID->"6d2dd7f5-9501-4a14-a2fd-31ed4b034569"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463752, 9573, 212, 4, 67, "Section",ExpressionUUID->"c4dfb24a-45c9-400f-b116-23b8c944ea9d"],
Cell[463967, 9579, 310, 7, 28, "Input",ExpressionUUID->"b4fa2994-a8b7-462f-bbb1-e6fd782b588d"],
Cell[464280, 9588, 189, 4, 28, "Input",ExpressionUUID->"ce96a52e-f033-4563-b3c4-ebf88351e5b4"],
Cell[464472, 9594, 312, 8, 28, "Input",ExpressionUUID->"61c2dfa0-197b-4a60-bf47-944740ca070b"],
Cell[464787, 9604, 213, 5, 28, "Input",ExpressionUUID->"94ce6fca-a22c-4a64-9cbf-15353c8ac2c0"],
Cell[465003, 9611, 156, 3, 28, "Input",ExpressionUUID->"8b6aacf3-da81-411d-ae2b-9eb4cbae3757"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465196, 9619, 203, 4, 67, "Section",ExpressionUUID->"eb4db081-f279-4149-9139-bb99c32ccacb"],
Cell[465402, 9625, 540, 14, 28, "Input",ExpressionUUID->"1d0f40c8-30a4-48fc-b81c-966e8845a8dc"],
Cell[465945, 9641, 265, 5, 28, "Input",ExpressionUUID->"b754b86d-78f2-4688-a378-edca045df1ce"],
Cell[466213, 9648, 614, 19, 28, "Input",ExpressionUUID->"a368c2ea-a050-443c-bfef-5ddedc05f8a2"],
Cell[466830, 9669, 214, 3, 28, "Input",ExpressionUUID->"2dd62be0-221d-420c-b531-9abc9b5a1311"],
Cell[CellGroupData[{
Cell[467069, 9676, 227, 4, 28, "Input",ExpressionUUID->"724eda57-a93e-4e18-9639-705d3c94810a"],
Cell[467299, 9682, 390, 11, 32, "Output",ExpressionUUID->"5852b4c9-ae6f-4013-957f-f84601bb003e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467726, 9698, 210, 3, 28, "Input",ExpressionUUID->"da7befb4-64b1-46e6-b0ef-54f216d6b2cd"],
Cell[467939, 9703, 193, 4, 32, "Output",ExpressionUUID->"a4fc17c7-597c-471a-b447-dcbeebb47518"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468169, 9712, 205, 3, 28, "Input",ExpressionUUID->"ba2b72e9-c892-401a-b5ad-55f128f292c5"],
Cell[468377, 9717, 191, 3, 32, "Output",ExpressionUUID->"e6e31b48-f2c5-4905-aa76-40cf2698a9b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468605, 9725, 437, 7, 28, "Input",ExpressionUUID->"0216e79d-cc78-4512-8520-8b9f0691b269"],
Cell[469045, 9734, 596, 15, 48, "Output",ExpressionUUID->"488295c8-e1b8-4f68-be53-5b4a871f01e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469678, 9754, 239, 4, 28, "Input",ExpressionUUID->"e8564e6d-6b0f-4e5d-8ea7-ddd67ab036d9"],
Cell[469920, 9760, 723, 19, 111, "Output",ExpressionUUID->"4b2bcdab-8c00-4cf2-b92c-8e0686e0ce6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470680, 9784, 240, 4, 28, "Input",ExpressionUUID->"fc2a36ed-95aa-4cd4-8c53-d9fa3d17dd92"],
Cell[470923, 9790, 748, 21, 62, "Output",ExpressionUUID->"83dc94de-e29d-425c-87fc-3a214ef27803"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471708, 9816, 476, 9, 28, "Input",ExpressionUUID->"f95972d3-4be3-4278-8587-e67ecda21a35"],
Cell[472187, 9827, 931, 24, 62, "Output",ExpressionUUID->"e97536f6-54e4-4e2f-8406-6e94b444abee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473155, 9856, 277, 6, 28, "Input",ExpressionUUID->"4e67c5ef-fc03-438b-b5e1-2dc958a39dfe"],
Cell[473435, 9864, 762, 21, 62, "Output",ExpressionUUID->"2731b979-6617-41c9-b32b-0b469fc394e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474234, 9890, 215, 3, 28, "Input",ExpressionUUID->"88086892-5009-437a-bf79-4aec9bb5ff75"],
Cell[474452, 9895, 712, 21, 62, "Output",ExpressionUUID->"e24a6693-8952-41d2-85c1-986c2206ece3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475201, 9921, 351, 6, 28, "Input",ExpressionUUID->"47451e5d-fe1d-44ed-81e5-d4d6a4a7354c"],
Cell[475555, 9929, 830, 25, 96, "Output",ExpressionUUID->"b014125d-068b-4902-9178-28f4d7319ca4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476434, 9960, 330, 5, 67, "Section",ExpressionUUID->"d529fb8c-32fb-4e25-b533-020be0b96b3d"],
Cell[CellGroupData[{
Cell[476789, 9969, 728, 18, 28, "Input",ExpressionUUID->"c92c7fd8-8500-4e02-93fb-5f6dbc7ab247"],
Cell[477520, 9989, 519, 14, 32, "Output",ExpressionUUID->"7d5d5eec-c571-4b28-aefd-9636c0fdd865"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478076, 10008, 211, 3, 28, "Input",ExpressionUUID->"92d5b94a-84a7-4d8c-93b9-b9322a7c51a9"],
Cell[478290, 10013, 781, 24, 79, "Output",ExpressionUUID->"c4f1d71e-dc2c-428f-9eab-6c9110865d7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479108, 10042, 479, 9, 28, "Input",ExpressionUUID->"e14284a7-9d2c-470b-83de-6105f98cad8c"],
Cell[479590, 10053, 367, 8, 32, "Output",ExpressionUUID->"24c849c4-e749-4f3a-8d75-ae74b77191f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479994, 10066, 362, 8, 28, "Input",ExpressionUUID->"3bbd60ea-59a0-44a9-bc17-05c0b400da62"],
Cell[480359, 10076, 267, 6, 32, "Output",ExpressionUUID->"0f4b9e8c-5c6f-463e-82e9-e8019cdc5631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480663, 10087, 183, 4, 28, "Input",ExpressionUUID->"992714c6-3774-4f81-8d92-3c1dc3f57171"],
Cell[480849, 10093, 166, 3, 32, "Output",ExpressionUUID->"65122bb2-203b-46e4-a8c4-db227deecc00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481052, 10101, 295, 7, 28, "Input",ExpressionUUID->"66e85a9b-672d-453a-9232-879ce7012ab2"],
Cell[481350, 10110, 191, 3, 32, "Output",ExpressionUUID->"f22a9626-6d45-4634-b5c8-d3d5f4a8d92c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481578, 10118, 264, 4, 28, "Input",ExpressionUUID->"68448ea7-6dfb-429c-b75d-d62b82b63f10"],
Cell[481845, 10124, 809, 25, 79, "Output",ExpressionUUID->"63abb33a-30bc-4400-aac1-91a91383ffa0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[482703, 10155, 258, 4, 67, "Section",ExpressionUUID->"8542ea68-0361-4cb8-810c-c3c0295082e1"],
Cell[CellGroupData[{
Cell[482986, 10163, 558, 12, 28, "Input",ExpressionUUID->"96691166-fa48-40dc-b098-403bcfbf7d95"],
Cell[483547, 10177, 3634, 78, 243, "Output",ExpressionUUID->"1cdebf71-f800-43db-8655-07e77ee67ad5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487218, 10260, 14499, 354, 67, "WolframAlphaShortInput",ExpressionUUID->"100c934a-0a32-4540-9c49-e6f3d911bd55"],
Cell[501720, 10616, 18506, 323, 239, "Output",ExpressionUUID->"a7b9aee5-4404-4891-9587-f5319ef068cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520263, 10944, 15836, 381, 85, "WolframAlphaShortInput",ExpressionUUID->"dd0d3f70-d2b5-43f2-877d-8f466515c519"],
Cell[536102, 11327, 453421, 7482, 300, 229404, 3808, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"83b735a7-6dc9-4f41-a33c-f372333cf00e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989560, 18814, 733, 21, 67, "Input",ExpressionUUID->"54134fc2-c808-4b04-9bd8-003f4c497eea"],
Cell[990296, 18837, 1818, 36, 363, "Output",ExpressionUUID->"38d1b9a2-4d4e-4d4f-8edc-d37996a792d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992151, 18878, 1050, 26, 48, "Input",ExpressionUUID->"084a083f-e747-49ba-9fa7-12f84a1a4e70"],
Cell[993204, 18906, 2047, 40, 359, "Output",ExpressionUUID->"6a73dc23-ef1d-4ba7-85b9-5a02c028299c"]
}, Open  ]],
Cell[995266, 18949, 147, 3, 28, "Input",ExpressionUUID->"648367bf-1604-4898-865f-11e4ae8f0162"],
Cell[CellGroupData[{
Cell[995438, 18956, 688, 16, 46, "Input",ExpressionUUID->"e19e0225-edab-4115-abe2-d6b4dc7459db"],
Cell[996129, 18974, 149, 2, 32, "Output",ExpressionUUID->"15a487e1-680d-4a7d-b0c1-f3204ac46cbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996315, 18981, 365, 9, 28, "Input",ExpressionUUID->"0eee8185-dd21-49ed-8c85-a019619d4dca"],
Cell[996683, 18992, 18084, 316, 239, "Output",ExpressionUUID->"64a46bc3-3df0-47de-a8f6-1156641aaefa"]
}, Open  ]],
Cell[1014782, 19311, 324, 9, 28, "Input",ExpressionUUID->"72d932f5-ddec-41ad-b6e8-7e01f4960638"],
Cell[CellGroupData[{
Cell[1015131, 19324, 297, 5, 28, "Input",ExpressionUUID->"da522338-3237-42a7-8d76-ffad7853eafb"],
Cell[1015431, 19331, 304, 7, 47, "Output",ExpressionUUID->"adcaf0cf-6faf-4bad-bb7d-9bcbe30d89ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1015772, 19343, 409, 10, 28, "Input",ExpressionUUID->"dc7a3b79-105b-4a8b-8653-9367bbb81427"],
Cell[1016184, 19355, 288, 7, 32, "Output",ExpressionUUID->"ccc6271a-489d-4269-9907-51d92aa580d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016509, 19367, 409, 11, 28, "Input",ExpressionUUID->"c80b3cf9-a426-4287-a725-dc18e9ee0393"],
Cell[1016921, 19380, 213, 5, 32, "Output",ExpressionUUID->"31afe5ce-286e-4103-9661-a2f6e16d7a1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017171, 19390, 303, 7, 28, "Input",ExpressionUUID->"997720e8-e76d-4c29-924e-399f0a9f23e2"],
Cell[1017477, 19399, 254, 6, 46, "Output",ExpressionUUID->"b63d46ca-9bce-412e-a800-603bd2f31efd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

