(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1021789,      19388]
NotebookOptionsPosition[   1004294,      19102]
NotebookOutlinePosition[   1005152,      19128]
CellTagsIndexPosition[   1005070,      19123]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica", "Title",
 CellChangeTimes->{{3.8964405341484466`*^9, 
  3.8964406203374057`*^9}},ExpressionUUID->"cfdc85b7-5231-4133-9449-\
e857906b3f68"],

Cell["\<\
It is the name of the software.
It works like Excel when we\[CloseCurlyQuote]re going to use a formulae, we \
have to be careful with what we use, the name, the list of parameters, etc.
There is a programming language involved, its name is Wolfram Language.
Mathematica offers plenty of tools, the most of them (we, here, now, are not \
interested in).
This presentation intention is to go as directly as possible to model and \
simulate\
\>", "Text",
 CellChangeTimes->{{3.896440681004419*^9, 3.896440700477734*^9}, {
  3.896441238414543*^9, 3.896441401382313*^9}, {3.8964414519153275`*^9, 
  3.896441567228279*^9}},ExpressionUUID->"ecb3152d-062b-49ab-9685-\
69ebfe46c7b6"],

Cell[CellGroupData[{

Cell["Notebook", "Subtitle",
 CellChangeTimes->{{3.8964406282658176`*^9, 
  3.896440633294715*^9}},ExpressionUUID->"be174d81-0617-4342-96fb-\
c1f74a46ceab"],

Cell["\<\
Or the way we must use in order to communicate with the kernel (of Wolfram).
We can create a document like this one.
We can interact with the kernel using Wolfram Language.
What we insert:\
\>", "Text",
 CellChangeTimes->{{3.8964418959880714`*^9, 3.8964419585154133`*^9}, {
   3.8964421311508703`*^9, 3.8964422217979593`*^9}, 
   3.8964422616266737`*^9},ExpressionUUID->"ae5fcd79-8d99-4f31-9600-\
9c0c31004902"],

Cell["Title", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442331369113*^9}},ExpressionUUID->"fee7b09e-637f-433f-8687-\
58f5911821e9"],

Cell["Subtitle", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442334136841*^9}},ExpressionUUID->"e86d4c37-c552-4f2a-ae5e-\
44d4e3a2a294"],

Cell["Chapter", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.8964423359112706`*^9}},ExpressionUUID->"188a862a-abe6-4c8c-b38b-\
1fd849d5a82a"],

Cell["Section", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442357292842*^9}},ExpressionUUID->"5377f3bb-d850-496e-8685-\
7c38b7d3342d"],

Cell["Subsection", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.896442360621399*^9}},ExpressionUUID->"1cbb642e-037b-419c-9cba-\
38fc23602563"],

Cell["Subsubsection", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 
  3.8964423638698688`*^9}},ExpressionUUID->"df96fb61-58d1-439d-8de7-\
6c09f7e6437a"],

Cell["Text", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 3.896442363561035*^9}, {
  3.8964423943289733`*^9, 
  3.8964423963198633`*^9}},ExpressionUUID->"1bbec468-b95d-4cc6-8eca-\
2201d9b5b467"],

Cell["Code", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 3.896442363561035*^9}, {
  3.8964423943289733`*^9, 
  3.8964423982901525`*^9}},ExpressionUUID->"4a915036-09c8-4964-822c-\
ff1c9698e1aa"],

Cell["Input\[AliasDelimiter]", "ItemNumbered",
 CellChangeTimes->{{3.8964423304349403`*^9, 3.896442363561035*^9}, {
   3.8964423943289733`*^9, 3.896442399803338*^9}, 
   3.896442532091134*^9},ExpressionUUID->"cb49a242-2cb4-4f59-a560-\
fe207dfb2cfe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c5f1592c-4752-4c86-98c8-089d204a97b6"],

Cell[CellGroupData[{

Cell["Math operations", "Section",
 CellChangeTimes->{{3.8965414202931576`*^9, 
  3.89654144312446*^9}},ExpressionUUID->"5712ec21-4962-4d1d-ad51-\
6481441f24d2"],

Cell[BoxData[
 RowBox[{"13", "+", "2"}]], "Input",
 CellChangeTimes->{{3.896541461448537*^9, 3.896541461448537*^9}, {
  3.896541587899131*^9, 3.896541705799719*^9}, {3.8965437844813256`*^9, 
  3.896543787506319*^9}},
 CellLabel->"",ExpressionUUID->"649c27e3-dc96-4403-b300-ae3ba10c3065"],

Cell[BoxData[
 RowBox[{"13", "-", "2"}]], "Input",
 CellChangeTimes->{{3.8965437902763195`*^9, 3.8965437943563185`*^9}},
 CellLabel->"",ExpressionUUID->"3b1a4463-7f69-445a-ad06-464ae10b373b"],

Cell[BoxData[
 RowBox[{"13", "*", "2"}]], "Input",
 CellChangeTimes->{{3.896543796790428*^9, 3.896543800294078*^9}},
 CellLabel->"",ExpressionUUID->"fcf10900-9004-472b-ae3d-7646a4db43c8"],

Cell[BoxData[
 RowBox[{"13", "/", "2"}]], "Input",
 CellChangeTimes->{{3.896543804196289*^9, 3.8965438073325315`*^9}, {
  3.896544359240938*^9, 3.8965443746323466`*^9}, {3.896544460738705*^9, 
  3.896544466339952*^9}},ExpressionUUID->"1e56e503-5ef1-4082-bc00-\
7db10389732b"],

Cell["Numerical Value", "Text",
 CellChangeTimes->{{3.8965448817108107`*^9, 
  3.8965448943739667`*^9}},ExpressionUUID->"d1ce020d-1238-406a-853a-\
e2fe68a56a66"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"23", "/", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965470635546803`*^9, 3.8965470636146803`*^9}, {
  3.896547136153414*^9, 3.896547136218362*^9}, {3.8965473382057357`*^9, 
  3.896547342406472*^9}, {3.8965585439067698`*^9, 
  3.896558545345671*^9}},ExpressionUUID->"c8fa79d2-eee8-48c4-9316-\
37a40d49bc6f"],

Cell["Square Brackets", "Text",
 CellChangeTimes->{{3.896558550513514*^9, 
  3.8965585650954666`*^9}},ExpressionUUID->"7d16275e-7d25-43e0-88ed-\
40b6801c3a8c"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965471556592817`*^9, 3.8965471557342815`*^9}, {
  3.896547204227293*^9, 
  3.8965472161317115`*^9}},ExpressionUUID->"e150f3a7-7a7e-4a98-8f96-\
7cf6afa462f4"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.896547176915294*^9, 
  3.8965471991392164`*^9}},ExpressionUUID->"6e6f11da-f294-416e-a690-\
aeab5f80903f"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965471883871727`*^9, 
  3.8965471884671755`*^9}},ExpressionUUID->"8e175956-77ea-4920-bc09-\
1cfd98137fd0"],

Cell["Free-Form input", "Text",
 CellChangeTimes->{{3.8965478265371304`*^9, 
  3.8965478981016235`*^9}},ExpressionUUID->"5de6e67d-7da3-4921-951a-\
ac20fb2e7f31"],

Cell["23/3", "WolframAlphaShort",
 CellChangeTimes->{
  3.8965486709486837`*^9},ExpressionUUID->"4738b626-7675-42ee-93b2-\
0a44184914c9"],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"23", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965438106938753`*^9, 3.896543814853876*^9}, {
  3.8965470670901766`*^9, 3.896547067155176*^9}},
 CellLabel->"",ExpressionUUID->"7a5b4706-07cb-4d0d-9ced-700d54d19955"],

Cell[BoxData[
 RowBox[{"Quotient", "[", 
  RowBox[{"23", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896543825914697*^9, 3.8965438339262147`*^9}, {
  3.8965470705456066`*^9, 3.8965470706106052`*^9}, {3.896547793644548*^9, 
  3.8965477966995473`*^9}, {3.8965581844763207`*^9, 
  3.8965582056916294`*^9}},ExpressionUUID->"b11e6210-cc4e-4599-92c8-\
2c7f86e7b0f6"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"23", "/", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965438431002665`*^9, 3.8965438451785483`*^9}, {
  3.896546937954912*^9, 3.8965469642129135`*^9}, {3.8965470739406056`*^9, 
  3.8965470740056057`*^9}},ExpressionUUID->"3f462caf-478c-4dc9-baa9-\
e74e1bacb3bf"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965438471135483`*^9, 3.8965438480585675`*^9}, {
  3.8965466566415567`*^9, 3.896546656799448*^9}, {3.8965468266023064`*^9, 
  3.896546856410241*^9}, {3.896546957862547*^9, 3.8965470042088113`*^9}, {
  3.896547077525608*^9, 
  3.8965470775906076`*^9}},ExpressionUUID->"3e033b0f-f880-4df8-a01e-\
78a4d9240a1b"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965468657224627`*^9, 3.896546872948872*^9}, {
  3.896547081107438*^9, 
  3.8965470811724586`*^9}},ExpressionUUID->"38f2cc01-8148-4f78-ac32-\
83563802e2f8"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965468764438705`*^9, 3.8965468765394416`*^9}, {
  3.8965470090368233`*^9, 3.8965470112456656`*^9}, {3.896547084083649*^9, 
  3.896547084143669*^9}},ExpressionUUID->"81101c3b-2496-412a-b304-\
873fc7bc587f"],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{"23", "/", "3"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.896547017244668*^9, 3.8965470173046694`*^9}, {
  3.8965470873971834`*^9, 
  3.8965470874522023`*^9}},ExpressionUUID->"e2aaf9aa-8fd0-480e-8dd9-\
f3457147a4cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"13", "/", "3"}]], "Input",
 CellChangeTimes->{{3.896546910913355*^9, 3.8965469118553095`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a1c76086-77bb-4191-b67e-0d5b50834e7a"],

Cell[BoxData[
 FractionBox["13", "3"]], "Output",
 CellChangeTimes->{3.896546912730311*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e1fae550-b6a5-4e83-98f6-c729f23bb92e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["13", "3"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"79fad8f6-4447-4be9-a978-f6751b411cf0"],

Cell[BoxData["4.333333333333333`"], "Output",
 CellChangeTimes->{3.8965469186517544`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"e78af02a-6421-497a-a721-dc3c9045462f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8965468451608458`*^9, 
  3.89654684810399*^9}},ExpressionUUID->"6a3e9b5e-065d-40e0-bb53-\
741da4b6a018"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6f6c21b3-b6f1-42e5-be72-f7a8cb1c1f68"],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.8965414234499717`*^9, 3.8965414332709312`*^9}, {
  3.8965418253340497`*^9, 3.8965418309640503`*^9}, {3.896541874909183*^9, 
  3.8965418757891307`*^9}, {3.8966421047723627`*^9, 
  3.896642106094672*^9}},ExpressionUUID->"d874628d-cde6-4de0-ad14-\
c44c57a7d696"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965414694735374`*^9, 3.8965414694735374`*^9}, {
  3.896541986379822*^9, 3.89654208760273*^9}, {3.896542478423045*^9, 
  3.896542484802853*^9}, {3.8966421295087833`*^9, 3.8966421325936403`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d032a92e-4325-46fe-b7d7-5e8e8ade9f79"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8966421354037204`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"f1d4d74b-2bed-4aad-a8ea-e090e7dff38c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subtract", "[", 
  RowBox[{"5", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896642290504897*^9, 3.8966422969883394`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"57cd8a72-6f66-44dd-bf55-38ef91e80885"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8966422979081984`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"62b590f7-2dc7-43b1-a850-e33a61925321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966421375415435`*^9, 3.896642140531846*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"4f1a4004-c5ee-4c5f-8826-48a02a74f0b4"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8966421410375032`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"b3b3627d-af96-42f5-8b37-70dacee290de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "[", 
  RowBox[{"2", ",", 
   RowBox[{"Plus", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966421569333906`*^9, 3.8966421697410483`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"3578fb7a-f0ad-4a0c-bf57-414a8812c8e5"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.8966421714942083`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"32d1c636-f7a8-48aa-989e-bb4a1d7c8aed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Divide", "[", 
  RowBox[{"7", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896642305579013*^9, 3.896642313448309*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"5429b464-8f37-477b-830e-dbc3f5fd458b"],

Cell[BoxData[
 FractionBox["7", "2"]], "Output",
 CellChangeTimes->{3.896642314378517*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"0043142e-fb06-4885-ad71-db5de59d5dda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966423368336163`*^9, 3.8966423399321365`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"0abce164-53a9-462e-a791-27d2b2c58b64"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.8966423415395184`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"123ed382-3773-4e4a-8af5-62bb4bc2b87e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"2", ",", "7", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966421778310738`*^9, 3.896642185694908*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"d49aa7fc-c5eb-4095-8aea-1c4b0b6cd69c"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.896642186434001*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ad53f5e0-79f3-485d-8a82-5eb7055f2814"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "7", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.896642188593807*^9, 3.896642194834056*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"e1ca9380-1853-4082-912f-c2bcfffac956"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.896642196052169*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"24bbe336-666e-4b4f-94bb-b3c4d6e44add"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{"2", ",", "7", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966423514894285`*^9, 3.8966423693750095`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"112506ac-b3e1-4c6e-8d5e-846b9cbb3667"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.89664236033095*^9, 3.8966423701663256`*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"6adc8313-f431-428d-8d04-72c9f792dd48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8966423766509705`*^9, 3.89664238669104*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e5ab2d6c-ef12-4426-9d24-e1db01db5be7"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.8966423816206665`*^9, 3.8966423873861427`*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"bdb9437f-fa2c-4ae7-b04c-4e691fb1b9fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variables", "Section",
 CellChangeTimes->{{3.8965414234499717`*^9, 3.8965414332709312`*^9}, {
  3.8965418253340497`*^9, 3.8965418309640503`*^9}, {3.896541874909183*^9, 
  3.8965418757891307`*^9}},ExpressionUUID->"b939623c-e98f-4c13-870e-\
8c6588ac6bcd"],

Cell[BoxData[
 RowBox[{"rate", " ", "=", " ", ".18"}]], "Input",
 CellChangeTimes->{{3.8965414694735374`*^9, 3.8965414694735374`*^9}, {
  3.896541986379822*^9, 3.89654208760273*^9}, {3.896542478423045*^9, 
  3.896542484802853*^9}},
 CellLabel->"",ExpressionUUID->"51fe7aeb-ff12-4bf5-a565-6dffa958a395"],

Cell[BoxData[
 RowBox[{"3000", " ", "*", "rate"}]], "Input",ExpressionUUID->"e63fa8b5-c56d-4681-8c08-cdc52a7eb8f9"],

Cell["Case sensitive", "Text",
 CellChangeTimes->{{3.896549329831913*^9, 
  3.8965493339133224`*^9}},ExpressionUUID->"fbd16529-bc4c-4653-9371-\
4a084c1654d6"],

Cell[BoxData[
 RowBox[{"Pi", "*", 
  RowBox[{"14", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.8965493389869094`*^9, 
  3.8965493812759705`*^9}},ExpressionUUID->"93477270-4ec6-4324-b979-\
36ea9b399e4a"],

Cell[BoxData[
 RowBox[{"pi", "*", 
  RowBox[{"14", "^", "2"}]}]], "Input",ExpressionUUID->"4151270c-f2c1-4c28-ac42-5225d17fd615"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists", "Section",
 CellChangeTimes->{
  3.896524854616452*^9, {3.8965413072059793`*^9, 
   3.89654130987915*^9}},ExpressionUUID->"852f2ba1-7936-4c52-841f-\
48866a5c462c"],

Cell["alist = {2,3,4,5,19}", "Text",
 CellChangeTimes->{{3.8965410592744737`*^9, 3.8965411381750994`*^9}, {
   3.89654125640088*^9, 3.896541293715915*^9}, {3.896541568613119*^9, 
   3.896541572343112*^9}, 3.89654250148225*^9, 
   3.8965425826265717`*^9},ExpressionUUID->"4c633a31-81d0-4e91-9ff1-\
528ffab705ab"],

Cell["Curly Braces", "Text",
 CellChangeTimes->{{3.896558578596218*^9, 
  3.89655859801698*^9}},ExpressionUUID->"f0efbbdf-9c53-463c-9e7f-\
d080a9146db0"],

Cell[BoxData[
 RowBox[{"Min", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.8965425053591704`*^9, 
  3.8965425339817104`*^9}},ExpressionUUID->"268ffe94-196f-47a1-9bc3-\
07d9d38b8c58"],

Cell[BoxData[
 RowBox[{"Max", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.8965425090898743`*^9, 
  3.8965425408785715`*^9}},ExpressionUUID->"a713608c-2532-4ec0-9f49-\
d000204d809c"],

Cell[BoxData[
 RowBox[{"Range", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.8965425111350594`*^9, 3.8965425111350594`*^9}, {
  3.8965425445085697`*^9, 
  3.896542548396103*^9}},ExpressionUUID->"8417752b-0636-401f-90a3-\
9afb6eb5ed7c"],

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"2", ",", "11"}], "]"}]], "Input",
 CellChangeTimes->{{3.896542512961567*^9, 3.896542512961567*^9}, {
  3.8965425525759726`*^9, 
  3.8965425585275035`*^9}},ExpressionUUID->"5313aeb3-bc0c-4784-a114-\
25eab51f8a56"],

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"3", ",", "12", ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8965425145784245`*^9, 3.8965425145784245`*^9}, {
  3.896542561567503*^9, 
  3.8965425644146814`*^9}},ExpressionUUID->"1f8aeab4-a112-4c5b-b71f-\
0abe8bee75a1"],

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", "\n", 
  RowBox[{"Goes", " ", "to", " ", "operator"}]}]], "Input",
 CellChangeTimes->{{3.8965425161466904`*^9, 3.8965425161466904`*^9}, 
   3.8965425782565403`*^9, 3.896543999052103*^9, 
   3.89654922330751*^9},ExpressionUUID->"0e5815ec-d434-4fa6-a37f-\
f82afef9219f"],

Cell[BoxData[{
 RowBox[{"Min", "[", "alist", "]"}], "\n", 
 RowBox[{
  RowBox[{"Max", "[", "alist", "]"}], "\n"}], "\n", 
 RowBox[{"Range", "[", "7", "]"}], "\n", 
 RowBox[{"Range", "[", 
  RowBox[{"2", ",", "11"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Range", "[", 
   RowBox[{"3", ",", "12", ",", ".5"}], "]"}], "\n"}], "\n", 
 RowBox[{"Goes", " ", "to", " ", "operator"}]}], "Input",
 CellChangeTimes->{{3.8965425179529643`*^9, 3.8965425179529643`*^9}, {
  3.8965439855613008`*^9, 
  3.8965439909087462`*^9}},ExpressionUUID->"0b0eb9bd-a4c2-4383-a292-\
f82fa740c1bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic expressions", "Section",
 CellChangeTimes->{{3.8965414234499717`*^9, 3.8965414332709312`*^9}, {
  3.8965418253340497`*^9, 3.8965418309640503`*^9}, {3.896541874909183*^9, 
  3.8965418757891307`*^9}, {3.8965475473103456`*^9, 
  3.896547563884548*^9}},ExpressionUUID->"97788d0a-bc7f-40eb-91a0-\
e3c73b0306df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}], "==", "0"}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8965414694735374`*^9, 3.8965414694735374`*^9}, {
  3.896541986379822*^9, 3.89654208760273*^9}, {3.896542478423045*^9, 
  3.896542484802853*^9}, {3.896547569344496*^9, 3.89654764903714*^9}, {
  3.8965502860942965`*^9, 3.8965503061600657`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e52a1c6f-3a6f-4e11-bf91-3125da5b5660"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8965475937171874`*^9, 3.8965476507025805`*^9}, {
  3.896550289029296*^9, 3.8965503077950654`*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"f2122c13-5920-4578-bedd-e9bfd9926ec9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Solve  a x^2 + b x + c = 0", 
   Typeset`newq$$ = "Solve  a x^2 + b x + c = 0", Typeset`chosen$$ = 
   "Solve[a*x^2 + b*x + c == 0, x]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Solve  a x^2 + b x + c = 0", 
                  Defer[
                   
                   Solve[$CellContext`a $CellContext`x^2 + $CellContext`b \
$CellContext`x + $CellContext`c == 0, $CellContext`x]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Solve  a x^2 + b x + c = 0", 
                    Defer[
                    
                    Solve[$CellContext`a $CellContext`x^2 + $CellContext`b \
$CellContext`x + $CellContext`c == 0, $CellContext`x]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"b", "*", "x"}], " ", "+", " ", "c"}], " ", "==", 
                    " ", "0"}], ",", " ", "x"}], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[43]:=",ExpressionUUID->"a55de065-3b7d-4962-98ed-b1930240172c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8965506544083276`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"38352687-910d-4460-a66b-a7f3a31f7633"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "create a table of values for i^2, where i goes from 1 to 5", 
   Typeset`newq$$ = 
   "create a table of values for i^2, where i goes from 1 to 5", 
   Typeset`chosen$$ = "Table[i^2, {i, 1, 5}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "create a table of values for i^2, where i goes from 1 to 5", 
                  Defer[
                   Table[$CellContext`i^2, {$CellContext`i, 1, 5}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"i", "^", "2"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"i", "^", "2"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "create a table of values for i^2, where i goes from 1 to \
5", 
                    Defer[
                    Table[$CellContext`i^2, {$CellContext`i, 1, 5}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"i", "^", "2"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[44]:=",ExpressionUUID->"e2f2643e-50c3-483d-8ea9-993cd68103cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.8965508113874016`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6efd41dc-0f50-425d-a46f-5d8b82baf741"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "CountryData Peru LifeExpectancy", 
   Typeset`newq$$ = "CountryData Peru LifeExpectancy", Typeset`chosen$$ = 
   "CountryData*Entity[\"Country\", \"Peru\"][EntityProperty[\"Country\", \
\"LifeExpectancy\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "CountryData Peru LifeExpectancy", 
               Defer[CountryData Entity["Country", "Peru"][
                  EntityProperty["Country", "LifeExpectancy"]]], 
               "Fast parse"]; Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "CountryData Peru LifeExpectancy", 
                  Defer[CountryData Entity["Country", "Peru"][
                    EntityProperty["Country", "LifeExpectancy"]]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"CountryData", "*", 
                  RowBox[{
                   TemplateBox[{"\"Peru\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"life expectancy\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}],
                     "\"EntityProperty[\\\"Country\\\", \
\\\"LifeExpectancy\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"CountryData", "*", 
                  RowBox[{
                   TemplateBox[{"\"Peru\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"life expectancy\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}],
                     "\"EntityProperty[\\\"Country\\\", \
\\\"LifeExpectancy\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"CountryData", "*", 
                    RowBox[{
                    TemplateBox[{"\"Peru\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"life expectancy\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}],
                     "\"EntityProperty[\\\"Country\\\", \
\\\"LifeExpectancy\\\"]\""}, "EntityProperty"], "]"}]}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "CountryData Peru LifeExpectancy", 
                   Defer[CountryData Entity["Country", "Peru"][
                    EntityProperty["Country", "LifeExpectancy"]]], 
                   "Fast parse"]; Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "CountryData Peru LifeExpectancy", 
                    Defer[CountryData Entity["Country", "Peru"][
                    EntityProperty["Country", "LifeExpectancy"]]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"CountryData", "*", 
                    RowBox[{
                    TemplateBox[{"\"Peru\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"life expectancy\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}],
                     "\"EntityProperty[\\\"Country\\\", \
\\\"LifeExpectancy\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"CountryData", "*", 
                    RowBox[{
                    TemplateBox[{"\"Peru\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"life expectancy\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}],
                     "\"EntityProperty[\\\"Country\\\", \
\\\"LifeExpectancy\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"CountryData", "*", 
                    RowBox[{
                    TemplateBox[{"\"Peru\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"life expectancy\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}],
                     "\"EntityProperty[\\\"Country\\\", \
\\\"LifeExpectancy\\\"]\""}, "EntityProperty"], "]"}]}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[55]:=",ExpressionUUID->"6ee2df17-9376-4faf-b8b1-315214f8b3a3"],

Cell[BoxData[
 RowBox[{"CountryData", " ", 
  RowBox[{"(", 
   TemplateBox[{"76.947`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ")"}]}]], "Output",
 CellChangeTimes->{3.8965531037827463`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"5a25d7dd-e959-4a58-ad6b-d4bfe542d775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   RowBox[{"CountryData", " ", 
    RowBox[{"Quantity", "[", 
     RowBox[{"76.947`", ",", "\"\<Years\>\""}], "]"}]}], ",", 
   RowBox[{"{", "}"}], ",", "x"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[56]:=",ExpressionUUID->"155fce8d-dcc0-4d8f-8634-a03a187e7b9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "76.947`"}], " ", "CountryData"}], "+", 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     TemplateBox[{"1", 
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
       "reciprocal year", 
       FractionBox["1", "\"Years\""]},
      "Quantity"], ")"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.896553115374174*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"de9e7422-ee13-47bb-908f-8f63dffa8f92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<Peru\>\"", ",", "\"\<LifeExpectancy\>\""}], "]"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"23cf7c72-1fb7-4638-8100-07c3f19a56f0"],

Cell[BoxData[
 TemplateBox[{"74.96`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.896553082367228*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"017219ee-1a96-4481-9665-dd8236723797"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "population of peru", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", "Quantity[3.35*^7, \"People\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Peru\"][EntityProperty[\"Country\", \
\"Population\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Peru\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Peru"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"population\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n  "}], 
       XMLElement["moutput", {}, {"Quantity[3.35*^7, \"People\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["33.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "33.5", "SRString" -> "33.5"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, LineIndent -> 0}], 1000000& , 
                    AutoDelete -> True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["44", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"44", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                 LineIndent -> 0], "\"  \"", 
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Recent population history", "scanner" -> "Data", "id" -> 
     "RecentHistory:Population:CountryData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 144, 145, 50, 143, 119, 140, 98, 115, 136,
                     81, 94, 111, 132, 68, 79, 92, 109, 130, 57, 64, 97, 114, 
                    135, 75, 88, 105, 126, 49, 67, 78, 91, 108, 129, 56, 63, 
                    96, 113, 134, 74, 142, 117, 138, 87, 104, 125, 48, 66, 77,
                     90, 107, 128, 55, 80, 93, 110, 131, 62, 118, 139, 95, 
                    141, 112, 133, 73, 116, 137, 86, 103, 124, 47, 65, 76, 89,
                     106, 127, 54, 61, 72, 85, 102, 123, 46, 53, 60, 71, 84, 
                    101, 122, 45, 52, 59, 70, 83, 100, 121, 44, 43, 42, 41, 
                    40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
                    26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
                    12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 58, 69, 82, 99, 
                    120}}]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    
                    LineBox[{1, 120, 99, 82, 69, 58, 51, 2, 3, 4, 5, 6, 7, 8, 
                    9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                     24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 
                    38, 39, 40, 41, 42, 43, 44, 121, 100, 83, 70, 59, 52, 45, 
                    122, 101, 84, 71, 60, 53, 46, 123, 102, 85, 72, 61, 54, 
                    127, 106, 89, 76, 65, 47, 124, 103, 86, 137, 116, 73, 133,
                     112, 141, 95, 139, 118, 62, 131, 110, 93, 80, 55, 128, 
                    107, 90, 77, 66, 48, 125, 104, 87, 138, 117, 142, 74, 134,
                     113, 96, 63, 56, 129, 108, 91, 78, 67, 49, 126, 105, 88, 
                    75, 135, 114, 97, 64, 57, 130, 109, 92, 79, 68, 132, 111, 
                    94, 81, 136, 115, 98, 140, 119, 143, 50}]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$2489021#1"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Join[{{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {5, 10, 15, 20, 25, 30, 35, 40}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox[
                    TagBox["20", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox[
                    TagBox["25", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox[
                    TagBox["30", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox[
                    TagBox["35", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{2.2089888*^9, 
                    FormBox[
                    StyleBox["\"1970\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    StyleBox["\"1980\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    StyleBox["\"1990\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    StyleBox["\"2010\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    StyleBox["\"2020\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    StyleBox["\"2030\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2720608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3352192*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3982912*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.4614496*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.58768*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.650752*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7139104*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7769824*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9032128*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9663712*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0294432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0926016*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.218832*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.281904*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.913056*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.9762144*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.0392864*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}, {{2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2720608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3352192*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3982912*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.4614496*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.58768*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.650752*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7139104*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7769824*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9032128*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9663712*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0294432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0926016*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.218832*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.281904*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.913056*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.9762144*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.0392864*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.1024448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                GridLines -> {{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, Epilog -> {{
                   CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}}, PlotRangeClipping -> False, 
                PlotRangePadding -> None, DisplayFunction -> Identity, 
                Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {2.2089888*^9, 7.366932667738841}, 
                FrameTicks -> {{Automatic, {{10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {25., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {30., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {35., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {17., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {19., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {21., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {22., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {23., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {24., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {26., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {27., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {28., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {29., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {31., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {32., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {33., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {34., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {36., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {37., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {38., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {39., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {40., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{2.25*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.75*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.25*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.75*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.05*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.15*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.35*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.45*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.55*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.65*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.85*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.95*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.05*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.15*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.35*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.45*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.55*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.65*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.85*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.95*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 
                NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {2.2089888*^9, 7.366932667738841}, AxesStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.1024448*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{2208988800, 3818448000}, {7.366932667738841, 
                  36.53680338753287}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1970\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in millions of people\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show projections", "input" -> 
         "RecentHistory:Population:CountryData__Show projections"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "RecentHistory:Population:CountryData__Log scale"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Long-term population history", "scanner" -> "Data", 
     "id" -> "LongTermHistory:Population:CountryData", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1:eJxFenk0Vd3/P+695gaSVIYSpaQBJaS9T1FRKZK5yFCRJKnHkJAhIlNRpJSQ
KZmSMuRtiszzPI/3Gq+uOfx81/p9nmf/cc56rXXWPvuc/X4N73XOTpO7muYs
TExM29cO/3emTHilK0cxF1RW/N9goMWmjV6j4v9h7hvCmYKRTP/iZqEz3cd3
/ocvXmI9nXBuFf6H96Z6ek+ilX/xQ1PFXN7Ty//iv9fnk9Tk/v6L/SgdtbZS
S//igMWZEfsji//icsUt2S8kFv7FjlXWLn5S8/9iGdZx+wdyczA4LaAkkcFA
4s9spe7vn4VKj65p8lUGemZ0oEFdZgYU2y0NMrkYSMKNfgSJM+B60oPNL9P/
oJoz7RUign9AqKH1+vqrf9Co0dKVLrFpMM4nX7/K/QehItHwVAE66O9JTm3J
mEasjq41JsJT0KEp/FXCdBpxz/921xCegM0L3JwxnNNo5+m+mlyOMRic0aLn
ptPRdrkbLEMCNFD8ZuqbaEJH3vnz8XIrw6CVm3PtofI0ahubO6LCNgSFCVa2
vSQGIkyV98tsGwDVFe1T7j9m0DbbyNdqpD6w6iodYh1cQK27blKFNvbAGN9V
j6zhBbS5w9H4yFA7DKke5rDfvoA+kAsKJn82Q49YQHFY5Sqat+0b39lbD06D
cTmMNgq+JYY51a9WQ0+qoNjfWDb8cOLO7zNPf0ENycNytxQZJ8CHm16pP8Fu
ZmchTZSM5+qzGoO4kkFvnEWa9JOCZ2scaz6zXCdWhzZ10eTZ8T+X726JM0sl
7L10fSbNN+C3HY5Vn4PyieO+ntfK/HjxgWH2EU/VUkK8trLV8fBmvHgmmc9Q
q4aYDE+niFsL4OCmx1bOxxsIwW4JqoGEIFaRlW45Z99CeO+rDej23YGrl9Xu
6r3vIJTo1o6LgWL4Fy5+9w/uIbqv2J/PO7wPH7Fs2hCm30fk0vjLf9sdwrlT
jhErlwaIxQ8TLl/2yeLDUnV57kpDhNTeZJlu1mNYunbb7e7LI0TRRFKW01tF
rF43K+1ymka4T8pUXfNVwnxZ260F748RCX3/cD4swNi1r1xQwOw/PmjTpP66
ps39W3/7Sw9eZqTOQlv20qtQbwZ6dyKaqsEzCgHahnmyvnRU53SwyZ+LCm0L
t3vbtegoVXv+bh7LMHBnvByRFPuD1ksIH87ZOAieDb360t0MlEy715e3vh+y
9EMO2MTNokU1EpHB0Qu9Ow/0ndm0hAaCosOOkbpAYzt39LqP88jA5l0Qb30r
mMgZD3vb/UUVipot3jWNQF95IHH5JAsOPenmMPCrFmKWixLD3TnwXQ4dmppt
ObToXzrDQ6Pg2JsiLpSUQqgJfRnC6UHC9ZtR/CeDbzBxn5JGmiXjkd2p8zeW
IoBToyln2oEVr+7945k79oHYWJ1Xv76GCwdlp7GLOFQQL7RC03kz+fHpgNB8
q7N1xDbmjzPXj2/DVp66UWb6TcRYzdJVK0dhzBmW91HTr42Ilsv5ceiYKE7+
aakdHdhFdK7EjAQd3YOlXWZfpp4dJgLPj77au14B59eyXzx4gUrYmM1cKos8
jg+r+NRUGo4S9tbrK0I3IXzLsCqXdeq//Th0c/1QBmMWjHWeWRq9YyDjk6c6
nz4fBYXYFh2HSDp62KpmpRBMBcR6hjXtPB1F+M5zO7kOQ0pW3C6NNX7bcfqm
M/kNQgz6NORzj4HmdxuwObzsB5f9s1kOh2fRs2u1Vi5evWAQxx+0IX4JlVvJ
H/3B0w3Cr2X5TFUW0LFY7oWPHW0QnX/Wnql0ER3d8ezC8dImiPxmlhObzIR/
taXKuDfUwfHT/K7iVWx4LPScY8XNSjD0yvzqVcqK1yeWRMe+KQZu1Wv1vJ4k
nHfbhv2VVzZ8uX9xy6tIMs5MZ4+PUo6F8D9HRy8Jrl3fvGgy8jeYcPLua5Oh
cGLj2qv2mtd/E9x6/gEC05vx+9tRlmbqtUT+ttWtBpe34tXPt9nunWskEGf0
1QpVIRx3Y17p4pNWQm0iV3m32k6c19XW9/h1J3Gj2r59rE0cS2sPxG8rHCIW
HQ4Y53HLY4danqtPa0aIU81BN/dKHMf5XPlusbU0wlhzmMv5yAmsbP9cYclu
DrZJsYkdL2WgDgXK7PYQGgyx9ohNPaQjKWE+3O8xAq8M+HbEV9BRnEpq8j8h
A3DTQrC67fwMMkv2ziX79AFftemM+dk5ZCl3ZDPVrwduvlGRcXVeRH8zNyxn
MjrA/V2/TBbTPHqscGifW1kL7Ez+R5tn5woy0dlm2tjSAEdtA6Y/ridj84RL
P1Wya6CgeermuRB2PO1kol/2qAy0DtJa3nBR8Akxez2zIoBrfKt2lr0kPPxz
nVrWoXSwqZ25Q7hTcFnFhxM87c9A8ut7enYHK24xVFHStWgm3Jk3yRzOF8FW
5R4c2qHtRPq7Ee6DGruwdBy769mqYaK8NQ6OTShgtrpV3FxGJZYbTMyZuJVw
1GNNkZnhUYJr2HJJSxLjtEzng5v550A0prb+VDwD4SLe5qjyUdhYFRr9Jp6O
znrrygU2UiHnWmNpsg4d8cbaG+j9HAZStjSYPppGn5yAEVU2CLIzPklfFRhI
sLh6q3ZzP5iF7H68MjODNG9lsQwW9cIG79FVZqEldKLNnbz0uhs8m85WPA9d
QLuhMMnqejuoUHJxDn0BWfHuZudXbgY28dDq72pMuGf378A6/XpoCzESft7A
ihM6VU4+N6kC4QiqFcix4YLz4XL/BJVAXF6jqFo+CWfwc2Stj8iF7TqYqmZC
xk2FxmibRAJMPnmv9ZFKwVKHOYVOCHkSuXJOhgEiHPiMocwhqytlhLX4gLfU
i824Ui8OGdfWED0KF9zKugTw2ZMz8nOFDcT8bUnH998E8cMLm30vLLcQbzuy
44WHduDTE7x7rQQ7CUd2rZEOGXGcRhjIXnQdIqYKt0qlPzuGtTX4zWSCRwhB
9tZHhwYVMdtdgzZePxoRlsDsa9iphC+kXt2e9+I//cjNaZg8Wk+D7APv7vG6
0RFT5U4u+dIRyNqX71oQSEftmcOTW+sHYFZ49SUr/wzyOb9c3VveBw10M4vR
/lkkTQgmqpf3QHTXd06zNf7biOmXzzl1Aq1jbrRPYx5ZXRnuVFVvhcLpUeFK
tWX0SjVT6ItWI7zMevLcSYKEH8/eEgwhaiGD1sZxn5sDpxQYij775zfwqwgF
NjlS8HTxuTHZHwXwqlHV80caCXdaxi4cPP0V/O4ddItSWtNzVuaKf2RD4Oql
eMGpRFYsSq+629XbRIxXrVNX2iqCFdM+aGvxtBNdCefvJv4UxWkvXDidfYeJ
gnsWPooeCnhAg3zW3ZdKXJ/uNhpqPI5pveP/XI8aJbQyVIPXRyIcvU/pw4A6
FfI/Z536StBRvfcQ441GP0QUFv9hWM2iAi1a09azvSBsHvVd8toS0l2duOnw
rAuy9HYYHmPMI+YDE8Em55vgkopF4T5DZpzsH9Yko14HEbMVvbm/2LE+xx+e
ppgiSO/8s3/pCQmX5jfritz7Dl0vtS3aSsg45GMKr+T1KKhuvfI8+DwrbnVp
n7rE1kZYPFRpksneidMs74gMUYYJuSBcUu8vj+3jxPYqbBklvkSO1ZDenMDH
Ua7eMe05WN0QeEg6j4HQRr7EPaf7ALT5rTND55G3avGBh3c6YOeeiHo5Yh7J
HrkVzP6kFIK3ftt5PYKMnz2JLnlRlQ+uNUyhOtxkTOd7EI63p4KB+XzO6xgK
9hNw/20e/hDyahJEClTYcFpO0MwmnhFCPU4xulhNEe/TXJKXZKcRaSyycu1n
lLDB9m8l3lJjxO6ml6Vb3DC2vXZEq3j3HJDPP2DPTF7zM8/Fyym0UVjsnfmd
lExHaUbdgopzVPj7THCf1FU6upCe9aS0axgkc+Y23DGeRjjDcLPdyCAsXXQK
OCfCQAf4OD8WzfdDc1leD26ZQUfHEyu3DPSCkoz+fbLbIprfGH/7TUc3ZM1o
Suz6uYDeqUey1n5sh5A9c2LhXgvIi8tukOVJM+S0H9ArFGDCY+e10eLbekhQ
8hjP12HFHMynYse7q2B1t3vptbtsOEKI7GbE/QsyNryx/TBLwgetGgN+x+YB
zbbRKogg46FyP86mrUmwfCbFZFcDBVsOSgRRrzoQ1wLOCOUmseMfO4W5HapL
iUbbu9d3m2zGA5ck93UF1xAlPidDf0cL4DvcCpcVXBuIub9kgfa7grgr/2Nq
xY8WYjSgIdY+awfmnD1QYdLVQdyLz35F6hPDtt9CHajXhggNm1eDYarHsHLQ
65sc90eIj/vuXJ8FRZywI55V1WJND7TTI0rSlXBdZbGvyMf/9CDZOcdKeZoG
MSeXX+3yoiOL6LipfuoIqPLyH662pSO7yScbR+kD8NNh6p+IRQaKeCOnd2m8
D1R2L5dLlcwi/pIND91oPXCKyW62cXwR7TNwkX79sxOE/jKftXecRwN9BXLJ
ga3Au3k3KbH7L0o7SV56E9wIBQZ/9W9+ZcHPBGd+53jUwn5GdRvrWQ68cUjP
i8b4DXPVmaP30yi4IvTrEaEjhSB79O5zkzckrJtvWzt6KRM8bETTWPgp+Be/
nsnkljCIeNYaeP4FKz6Tvcln57smwqmtrTenVBhHiR9yrq9qI27K+TU7OIhi
W47si1ssh4mYcN6sDlUFXBfkdU7Pikrs0NgvZZt9HPu/UIx+5TJK/Hxg5n1X
B+F1LEVeATZUWG1djZY5Q0dDzTsec97vh3XzV7XlLs6i2NbOD+dv9kKul2HM
W/clxHuUr3prVReM2e/LqhRcQIJ7jttcfNYEziN9gfxUJvwjQ9zTIKgO7ryj
p9DV2LFsm6FB3o5iMN60l4ltLZ+e4o8+1O70AwIittZKfCXj2MSOziHNaBB8
5Wb8WZYV4z8WW2qKWgn1cf3EEted2LYnzsx1YIh4qLL1WckFeSyob3vFhkEj
dN2IE503TuB8A/HfYeZz4Pfu3D65QgbSNFKXDb3ZByO8uYf9J+fQSVdaCH9q
B6i7tDaLtsyhF7rms7dWS+F+9CXnlXoyNru8fuMjVYCC9FargnkStrIkbP+K
p4HTjW1XFl5RsHcSnUeUzx3oG/uYriywYlvpSoXkyWEiQpN3Zr2wIhYIdlZi
plIJjxylP78llPBKBflPHucYEf7C9UG5HsbdKbUag+lUeCztf/OQJh1Z9xfJ
pcX0Qk/HI7/VrCWksbVl317WZrhsvayS8ogJjzgdmvDnLwGtUxbW7FEkLA/H
ezSDcmD2js0dU8+19eauS+5IphH6d/ySJthP4NKXMwmGHv/V+8PlgtP3E/rA
JLeCNZ55DmWOy5rpHOuEzNzxgAt755HATG/UeVQAS3Zizry/Sdhkc9tOO8UM
aFw5433FhII9Z+OOMGkEQbXKw9tKhax4Wki5uC9pmLDvzHyc9UMBnz70/pxk
8Vp+VzZbNhtHWPFyZra8FBXc3O71HT2+Vj+y778+WN8EolGTMyeqmXHUrXUS
3Fx1UKEex/tMmQO7HvMpHd9XBKxxeXqTbiSsfpvLzfRGFnDtvBjr0kLGVbzv
fzXu7QCPrBsTOsnzKCVVwTnxcj4MOScczOQj44c/4wo8NqbAbMaI9Zk1/oga
+xYJSRvCF35ejdFiNpxlYRGueWmMEFhJn/gdhbGmdNANoYNz8EDkl+jdVAaK
M7fmlVschcnb4teOpNLRjfKogI3sNNi+M19/zIiOaN91+V0nhiH/uP63e5rT
6PmlhJiOuUEwXv7jGsrDQFmKn4adOAZgwwAnr0nZDIr7Ii6T+qcXGr15PlNk
FtGVJMXI2yvdoEnRbbpTv4D0Nz+XIRW3Q+4xvi0cGguIj3271sL7ZpC0nlUM
XF1F00YR/P4/6yE4iL9RfysrzgomWt4KV4PN2MWHUr5smIP1e0y96i8An4CJ
fh7yWr+R7SSx/ycczFjackKajCeqRafSeT9DYrie2ouytXyxO/34+0kb4mD2
5+XL99mxnccmRxe/UsJ769fKKNXN+G6Flcjb+zXExu3Kx/48FcCu9zq6Da41
EJwToa7bzwvi4EWasl9YCyHfqbl9f9QOPLaQI3TtZwcx5nB3kv+7GNa0lY04
qj5EtPE+7HsqcQwrpupZ2JmOEOnc69Z9/6KIHy1UCw7orOnxfr+YpXdKePe1
Q5LlzKMQXrFfMsmbjoQ3Wpl+XxwBHlbCp9GUjsC35v1l5kEQ3WNhMTzGQOKF
DW/ZVvrABasuq3+bRd7ePu3bFnuAl0djzJ9pCT2d5blxq7cTvnGxzRb4z6P3
8SlmPamtIL/71MzWhL8IoUSL4NRG0Jf6TnQ6seDAg4pRl2JrgWqvVlhjzoHz
/9HNCpcph1sh7mEnqyhY3sVSP8i2EJ4MuQVlBpAw/6hurmpTJhi97flWTKbg
FmFPqUSON1A33hwb6cWK9Xdkbj71qIlY17mtXOeDMNY2+mfji89tBO2actFv
XVGsWaRra6Y3TLz5s7KHtF8Bl6WeuVBkSCX4j+1Jq/18HBtbmfyQth4lhGzl
97kfQbjgztMFMzcqCNt8bJxWpaO7q7kF4N4Pp3kTnuriWSQQocM29LAX/F7J
v9EOXULWtbEstMku8PQ+eEPg8AKK39XfpRLfBMqGr+c+/GLC+b9uG06m1cGV
affXvtzs+EMBj6v0tWI4mlxI9VvTXybimaA8czaIeMsyjBLIOPmLbWHRuRgw
UOkQd5FgxYz9qQkBH1uJijvc9g/Nd2LNN6efVtYPEaGRlDEkJY8npMNuc/XT
iA4LPnEp9ROYxVLvidqdOag33/vpezEDtXuN2l+w74MVm8BNi2/mUOR257Kh
ug6g+nd53hlb02OaqcTWE2XQZyEkWTlJxrWKhbJTXgAbzMZs+MdJeF/Inmv6
iWnAfVPyw94gCo7LUY0Lm/OC9aaEA/soK9Yct7y61DVMyIZebd/Fqog3pp1A
Vq1UYusL0xfJW5VwTYwkh/7CKHFf9Zd8rArGLwVDin4UUeFt6eHXk1p01BNz
4u25r73wj7RsCdPtJdS12SVMRLwZksvKOL+aMuErZoO8JK0SWHWNPLs3lYRn
R0UrUvhzwdtEV7L5PhkfDZUt+uctjcir062dmVbCnB/3mq7z+09/mcSNffdl
90F4s8Cx39OzaJPPr1d79DvhUuW00muleeTZGfor/1EBqIrLud3II+EdOH9d
XX4GbJj+estWg4JDVxqYck6+AP7yDUWh31hxXUvv8MGINb/Zs5HsGKmABTh+
XS9JHyU+6k5FshUiPJXncGDDCSp82LJ50+yJtTxz+IyYlVQTfLuf1JERwozj
nC6vRu6vg4wohcVdrBx4fMeJ8eu3iqDzpN6pB2v5nCuUbgWjWbBXi+C8Vk3G
ksnSSzHnOqDuLnPvr3/mkVD45AeRoHyQ/dTY57WRjGVp/sl9ISlQozbPwZFE
wS+nYhTHY++s3e9aVpMnG352MjBl/MQYUc1VZzwTjHHRPulbjxt6IbYzSp5U
vYgOHrloOFpVAjEhsbPX2kmY1y6cL6yjD9Zxp4ZzN86i8BC/weflX4GdHhdW
t5eCc37w+f8NHCVYN3702OyEsG4oE98PIyr0nDK0s1OmI/99Icx6t5tgmH93
wntRZpzxofvzr7t14KFmVKbjw45/0T8dVesvAh97f343dxL2Gs1Vdp79Di8a
b5dq55Hx4ICOyemADrDpOlryiXMezVnqjbJxA9iRft2yJq/xAxl4vXufCqPm
HBxl7yi46pjMnNb1x9CQ98T7Axsb3s/o7NglOEZ0Z3BG3ruD8d8d5+oEQntB
8vsfr9LsJeT0wqlsW2sxJFJkXg4Hk/CjUG0GgysHThhZKlS9JGMvL5hOfDQH
xoyB93m/GWi8UZwlJ6wP9n50bXy6cQ5F0/4c4c9MB9ERYadyWwq203E4Etg0
SkR7rM8l8WDsNTx91kyQClHjofJ9KnQUceXXJXtqLQwsbpacesKBN11q+Ogw
XgiH1onZWKz5bSAWD6H0foNHavuSiGEyPlnmqSvHnw9hWi6PBgXI2Hav5+cL
/F9AUKS13jOLgocCT3p8uz5GXJ8KefQ+DeOTgj/vqsrMgRTH1JfyNAYauBJ3
b5F5DGiHcj85pNERdiOrOm2kgeQYz59z1+lIPleix2B2GLicubjszk2jDOHa
8cDVQeDRSlnI5mSgR9UzPs08AyBFT0mYhhnUG9g36LzUCx9kxlVZuRcRi/OT
jni2HhB5ri/1onMBZc2T1CIa2+ESiAbio2v+6mXta5fSDE/LCphChlbRAwvE
oltTD0+zu0v3LFJwYDumzyhVg8TFo5V8YWwYO27Ken7rF5SV+Oz3FCHjc0nJ
95qtf0Jtg/+dl/vIeLp2vE804DOwKB84ca6Igu8ETInN2VgQ/LU9dyK12XHt
kfWpLLdLifnrvQn3lTZj2Wfrwv+a1hCrbUvC3E4CmCNaKtbqQgPxYqg7Q1FB
EFu98l8/5t1C9JKCGymvduCuJfeS9i8dhKSJ6pv30WK44KK7VKfKEEER5vVN
33IMHyUUaPEGI0TOcodJeKwiHjTv/3T4Io14Ej5uxBuihE3ULZ/5c4xCSFCR
3ZQPHc0XVwqKkagw46L9VdeQjkb05kbYOAah3lm8j3uIgWjau7Apaz+EX5gM
6f4yi8DitP8wcy84hqGboxxL6Khyu8ul6U7weMFxYeT1PFrx2+PkUNAKlcka
1hoBf5FX7sr7ddAIYqFbjggYseBN8l3Pt32rhTPZT799tePAr/N1aqc1y2HH
vMXU3g4KtvlTZHUuqBDiT/i+6PEhYTum8+nzAt8glv1PhtkyGfeIbt/kwxIB
1iLNh1VdWXG/JlvH5dtNxLK2L1/fc2F86O+2tumINuL0OdefzmdFccGHTyQu
jWFi844ZI34hBVxESFQtaFGJk+r+bpWxx3FpywMVV/NRQnVq15KfGMIRu6hp
1T5UOKg4c0fzHB3JvuA2F/LrB1ORSzuox2aRhjPfj7THvcAQkeBPj1xCgiI2
gnVM3aCxUTpXSXEBTX04yg9ZTUD3WdETy2bCyrXrz34vrIMzghf8dMfZcMtR
q+CxR8XwYSmwq3rNT420nXlHTmXD8DJ4LkWTcVqqUqZMaQw4Rviw3xJlxVVl
WnaTwa0E1wHza1U6O3GBfYiAXfkQ8c7w08KyoDzWiUya1W2jEcJdzgKNxAm8
6979LtF7c/BQ9fXgYgkDvd+msD3etQ/YdjiSD9nOIXWL0/1V/R2Qyd/bETw7
h7bJmBL3rpbBmwrSk4y198ueInQmIQZALmfGFg+TsHfCNi2OiTTgP3395iNf
Cs4qenD/CtUbBLnvHenrZ8UFv79PfGgaJlbl3NUPLCpg7pMi+R9qqQSXrOmj
Zl4lLM+LXn6aGiWQQFi48zGMretmncUrqfD5hfuhi9p0tPXp0kWB3F441bnB
lFl5CYm/rKsJl20G/bmDd+R0mLBfCxLPtS2B+sgfX79nkfAVZv4CI71cqDM8
z8lzm4zfsZy9WPySRlhTfpouDCvhoqxkKa/CPvg2kFejPzqLCpoCUzfcXuu3
r8y8zD0zj3I06K2ObwrAxhm7B67N9/hKOsmN9BWqUqftnp2hrM13eyhM8SV8
f25oU5jKik9mHnJoejFMfKnIKWkLUsBuD9rGNiWOEk6sQlu5UhH+bdc+7HCa
Cil9NxKvYDr68SXcYPh4E3h0cNZM2jNjSc9ZmoVSHcRVkCamhtixWMjr1e1P
i+Bs4O5jWWv+aZk4YGJz4Dt4MMrlBcvJuG1pic/fsAMcytXbXAznkdZ6tYzW
L/nQpnj7+N31ZBy86hYd1JICuZtdm6lxFHybXVJ2ItMWFKPIVhXmbHg6+aOi
4tExonRIr5P2DONlrslt5zp6wdb7cRMpbhHdiI+3jhkvgc9172WZqCTczEbN
ZAys+cVWHZm3lbNoIcGl/fj6TChJGYyhiVCw+B6JrWreo0RXbvWygAXC0udN
KsVuUWFyfTJ3w5pfNMaNHGtwbII0F4+37RRmLJf4JCzItQ4c7CRyxSzZ8Yo5
iyqZpRgYxQZcRWv+OcCUqrBf/geMP5id4/tBxi+ldz468L4D+BU8fhqt9dsH
utOXYR9AuEGN5esVEl53Rf3Rhf5UkBniOXj9DQXbRxefviHqBn0305SdmNhw
iDH95r1NY4RStMqzd6YYH2Fh9xx82wvBRB+zePESSmNram+YKwZXMXVm+3AS
bktUpX1Uz4HP9x/57/Un40/P29U9XOeApeVy92o5A6VZ2EVvieoD5ZTd1gIc
c4jENCxZPJ8OTvfT3QItKbiz0C+/s3KUsLncI7QWP7DxWy2WajEqPL2ZZG6+
lp9EjCyPn1yshRaxbuFcUw6sVnQgU4a7CN7o082S1vxz8oqAb8auLCj8ejy+
p5uMHZR6LOmy+YCpfE2V/GR8UOt2WOKbL8BBM/5w4ysFX1y+soGit/Z8c9Ff
vyZgbBIT8Ol3WBO8OiAdItLAhKMkX+1+lvcDdHg/mRR9IeOpyvQvK9AB29k6
Dpztm0Phv26JHr0FQOXqtx6bJuFyF9lbibfSoHBI1CnoJQW/zhDq7KR4AtMP
ntwD06z4przAY26WMWL+Sbbx/EWMPxW50R5/7oWkp7p7mYKX0Oumg03MDTmA
bpmdf/uIjBWDeKhVaX3w+LdtpPziLPoSkd5knzNK/E4o3E1uRJifQ+BB9BEq
BJ0vdAxVoiNx25RNTdvrIN/+HquOOAfOTOpv+6RaBLYzvurSa3xIcl15yBuf
BdXpmW2R9WQ8JB4SYG6bD895sc87XjKez2eoHk4pgUjdpKzcShLOn11puTCe
D3vMQycRJxl/lmg37nR2hJOrl+q/ibPhQuQvct6/FwoPUbit0paQssjOb8Y/
iqFpaMseHV8SFnIzXVEpy4aH1I446XAyNnf5FFpvPwc5Gx+aOJcxkMTJZiPj
oD4QfXxh6I3wHEo6HBSwsIkKeffd1hldWNOv82LmyS21QMIs712COXBHu0PQ
z6pCKP6p7bR7bb+3JGj7LU78hN3ljvS27WScsfIOJgOT4aCWBmtMNgU7ix1c
sLAcI7yoXqd8f2D8v/8xmP7/+N/36P/h/wcwRCzx
                    "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1He8zmUYB+DjZI9CZctI2bvslZQtURllk5HMQvYoZBeZlZY0zFSkkJW9
yc4MDZRURHTd+eP63N/7eX7n977nGW+ett0bdUtMSEhIQvbEWzVb4q1cSs6q
jjJ4jYx04Qe+MveSep5/5ETPNZI30E8/VL1MSpKba63u5X1z3dVTnJYrqYup
Jy/kN2rpV9Ah4dYXa8o2Jml3UUieTUl5GVd5XP8dfeX3OEVF/SLqyu2ZyE4K
GnubEvJSrtBQv54+cgq1FXt4V3+SCvJC6sgLuEhN/Te0kyewgwL6tyguF6Mo
RahNW8aznfyeeZPC8ou8wwnKG1tALXk+F3hU/zVt5HFs4379LArJLzCb45Qz
Np+acmvGspX7jM2kYLyPVoxhC/mMz6CA/AgteZXN3Gt8OvnjM+M91KAFo9lE
XvPTyCdnUDtzlC/1t9v7fvKv/B3bqX9MXkdvfXK1JbtjT/THKCvP42F5Hufj
e+mX84w8io3k0U/lXjmL946Ms0h6OnGEL8z1VX/hrzhPnmsgr6WXdoj6B8lo
wa7YP+Pd1JNx1uUy6qdUl19Wr5CO1N7VQT0Y87EP6rn4X+V/1RpxT3g61sWz
A+XfuKlPqm8ib2WkfgO55TfIK2c2/4p8lTtIo++oHuZz8+n0feSf+VN/U63P
GnrG+2Ot2BnnTH+UB+VPeEjO5O9HxJ6QllT69uqBeMZ8b/VsrJv8sLqM5nJ6
zw2QL3JD/5S6hVfktOa6ysfjLupzqVPIIy/hMvX0q+khz+IID+g/pprcLNaY
9dxjbDK54zeDmRymtLGPqCrf7TOHx97GGpFS307dH+8030s9E+skV1eX0lQe
wTpy6l8nV+w5MzhEKWNzqSKnVtvyfXyuvqf6Iz/J12M946zTJPadJ+XNDJfX
kkN+jXvk55nOQUoa+5DKsY4MYw3ZjU0iZ9wf9VkO8Vn8VsTnxpmVb6h1+Zau
+tvirLGDafoDlJDnUEmeyzmqxb3gSXkoq8mmn0gO+Tmmsp/ixj6govwhZ6ka
Z5An5Dusd3/5AtfjO+ifkDcxJN6lHovvKGdVJ5BdXswl6uhX0UW+098Oli+R
SDJ9c3V73ItYO/VE7INcTH2fCvIczlBFv4TG8mBWxe+CfjzZ5M5MYR9Fjb1H
ebkRg1gZ987YOLLK5XicgayIO2N8LFnkTkxmL0WMvUtZ+S7feVjcybhTpNC3
UffFOprvoZ6O8yNXjj2loXyNxvJGBsjfxNmWx5BZ7sjr7KGwsXcoIz9Gf76O
zzb2Kpnib6OPNSUjGeLuxn7FmYrfAhrwEsvjOX83mnTyIn6ntn5lnL94h/9j
kPw7SWgWZ9r47ri/1CctaeK+kIqUpCA5yUga5yPh/5/ghNL8B/cAA5Q=
                    "]]}]}, {}, {}}, {{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1:eJwl1mWUVVUYBuAZcsiBoUNSursFpLtDuiQlVBBJ6S4DG6VUwgAElO7u7u5G
RVBA8dnLH8/63nefe+/cOWfvWZO1U9/GfSIjIiLSxYqICLMYYkRs4hCXeMQn
igQkJBGJqUdxDvM+r/mQSH5jGDE+rKv19XKtsC4vIQkT9BSslgdRnxIkJZpk
JCeGFKQkFamZ6H0pWSMPpgElmW0tH0fkD+hGGiZZS8VaeQg75SY8kxuyTK7A
Nfmq2Y/58jGzI/H9HgnMPxkZfrZeyvU5cn6Oyh/SnbRMtpaadfJQGlE63Gem
WE/DenkYjSnDXGsFOCZ/RA/SM9VaWjbIw2nCz/orXJe/oSzz9IIcly+ZvZkp
7zdbEdd3jmX+zvBw7/Werm+Qa4d1eSkZmKanY6N8wezFe/Iusymxvfe5fl8e
TLTeVF8uV+SG/C3lmK8X4oT8Mb3IyHRr6dkkj6AZK/RK3JS/o3z4/fTCnJQ/
4YDcOnwH3tA3mnX4lz/0W+YAlsmnza4k5SV9hpmBzfJImlMhfFdrRTglf0pv
MoU9bS0jW+RR7Jab8Y/cgpVyZZ5zS79mvskC+bjZiYThWYXfxyzKafkz+pA5
7NPw3dgqj6Ylv+ivclu+br7FQvmE2Zko9zuR+ZhRYW/rFV1fIBfjjPw5fckS
9qa1TGyTx4RzSiUWWivOWfkL+rFJr8ujsM/IGvajnpnt8sVw30nsZ47V98jN
w/2XH5hDSOZaK/1XuQp35Bvm2yyST5pdSOB1ic0njA5nRq/s+iK5BOfkLzko
tyFOuL/6ZrMeL8KZ1G+b75DE+5frZ+RuJNKjzb8ZG86dns31mXIWdsjj2Cu3
CJ/v+gv9oTyU5HprfZVcNTx37uo3zf4slk+Zr4fn7LVJzL8YE56fa4vNkpyX
L5vhj+0s+ZDZlrhhz4azFZ6x9S1mfcIf4cfGHXkgK+SzZvdwb3nKONJ6XfZw
ruSs7JTH04bVejXuyd9TJUy9FBfkrzgstyNeeDb6VrMBkT73iX5XfjecH32l
fk7uEe4LL4fzaGZjlzyBtlQlBznJFc6T69nZLU+kHdXIHc5B+Bz2yJNoT3Xy
hP1rPQd75cl0oAY/WCvNRflr+pM37F9rOdknT6Eja/Tq3A/voyY/6mW4JM9m
APnCPrOWi/3yVDpRi/wUoCCFmOU1uTkgT6Mza/UaPAifT21+0styWZ7DEbk9
8cNe1beZDcN+CeedwuGZ6Hk4KE+nC3VYYq0cV+S5DGS73ijs7XDOKBLuh56X
Q/IM9sktw34Ke9RYZ9bkYfh+1GWpXp6r8hWzL/Pko2aHsDc8+yjzESPCfnBt
h9mYWK491e/Jg1glnzd7EsMzxkf+//9FUdf+A39qA1c=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$2278186#1"]& ]}}], {}}, {
                   GridLines -> Dynamic[
                    Join[{{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-7.889184*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-4.7335104*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.7335968*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {0, 10, 20, 30, 40}}, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox[
                    TagBox["5", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox[
                    TagBox["20", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox[
                    TagBox["25", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox[
                    TagBox["30", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox[
                    TagBox["35", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {37., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {21., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {37., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{-9.4671072*^9, 
                    FormBox[
                    StyleBox["\"1600\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-7.889184*^9, 
                    FormBox[
                    StyleBox["\"1650\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    StyleBox["\"1700\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-4.7335104*^9, 
                    FormBox[
                    StyleBox["\"1750\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    StyleBox["\"1800\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-1.5778368*^9, 
                    FormBox[
                    StyleBox["\"1850\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    StyleBox["\"1900\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.5778368*^9, 
                    FormBox[
                    StyleBox["\"1950\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {4.7335968*^9, 
                    FormBox[
                    StyleBox["\"2050\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.8359552*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.2048032*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-7.5736512*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.9424992*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-2.524608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.893456*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.262304*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.31152*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.310656*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.2622176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                    GridLines -> {{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-7.889184*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-4.7335104*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {4.7335968*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, PlotRangePadding -> None, 
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {30., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {22., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {24., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {26., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {28., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {32., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {34., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {36., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {38., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {40., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-7.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, 
                    GridLines -> {{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                    Identity, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 0.3, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {{{-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                    GrayLevel[0.9], ImageSize -> Full, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> PointSize[Medium], 
                    "PointSizeFunction" -> "SmallPointSize", 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                    PlotRange -> {{-9.4671072*^9, 3.818448*^9}, {
                    0, 38.38553130353622}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                    Ticks -> {Automatic, Automatic}}], 
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1600\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in millions of people\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
                 "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, Alignment -> {Left, Inherited}, 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", #2, "}"}], ",", 
                    TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "]"}]& )]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"population for current political boundaries\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show projections", "input" -> 
         "LongTermHistory:Population:CountryData__Show projections"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "LongTermHistory:Population:CountryData__Log scale"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Demographics", "scanner" -> "Data", "id" -> 
     "DemographicProperties:CountryData", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Country\", \"Peru\"], \
{EntityProperty[\"Country\", \"Population\"], EntityProperty[\"Country\", \
\"PopulationDensity\"], EntityProperty[\"Country\", \"PopulationGrowth\"], \
EntityProperty[\"Country\", \"LifeExpectancy\"], EntityProperty[\"Country\", \
\"MedianAge\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"population\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["33.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "33.5", "SRString" -> "33.5"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, LineIndent -> 0}], 1000000& , 
                    AutoDelete -> True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["44", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"44", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["26.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "26.3", "SRString" -> "26.3"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"km\"", "2"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    "\"people per square kilometer\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], LineIndent -> 0}]}], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["192", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"192", "\[InvisibleSpace]", "\"nd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population growth\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.16", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.16", "SRString" -> "1.16"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"%\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["93", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"93", "\[InvisibleSpace]", "\"rd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"life expectancy\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["76.9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "76.9", "SRString" -> "76.9"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["94", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"94", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2020\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"median age\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["28.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28.2", "SRString" -> "28.2"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["137", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"137", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show rates", "input" -> 
         "DemographicProperties:CountryData__Show rates"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show distribution", "input" -> 
         "DemographicProperties:CountryData__Show distribution"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "DemographicProperties:CountryData__Show non-metric"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {
            "short" -> "%/yr", "long" -> "percent per year"}, {}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Age distribution", "scanner" -> "Data", "id" -> 
     "AgeDistributionPyramidGraphic:AgeDistributionData", "position" -> "600",
      "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{{{
                    Hue[0.67, 0.6, 0.6, 0.15], 
                    EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[0.6]}], {
                    RectangleBox[{-3.487890285714286, 0.}, {0, 0.3}], 
                    RectangleBox[{-3.334233142857143, 0.3}, {0, 0.6}], 
                    
                    RectangleBox[{-3.359757714285715, 0.6}, {
                    0, 0.8999999999999999}], 
                    
                    RectangleBox[{-3.484349714285715, 0.8999999999999999}, {
                    0, 1.2}], 
                    RectangleBox[{-3.1422308571428577`, 1.2}, {0, 1.5}], 
                    
                    RectangleBox[{-2.747997714285715, 1.5}, {
                    0, 1.7999999999999998`}], 
                    
                    RectangleBox[{-2.449524571428572, 1.7999999999999998`}, {
                    0, 2.1}], 
                    RectangleBox[{-2.2060548571428575`, 2.1}, {0, 2.4}], 
                    
                    RectangleBox[{-1.928962285714286, 2.4}, {
                    0, 2.6999999999999997`}], 
                    
                    RectangleBox[{-1.6918171428571431`, 
                    2.6999999999999997`}, {0, 3.}], 
                    RectangleBox[{-1.3849097142857145`, 3.}, {0, 3.3}], 
                    
                    RectangleBox[{-1.1319085714285715`, 3.3}, {
                    0, 3.5999999999999996`}], 
                    
                    RectangleBox[{-0.8437737142857143, 3.5999999999999996`}, {
                    0, 3.9}], 
                    RectangleBox[{-0.6792548571428573, 3.9}, {0, 4.2}], 
                    RectangleBox[{-0.520528, 4.2}, {0, 4.5}], 
                    RectangleBox[{-0.36485257142857147`, 4.5}, {0, 4.8}], 
                    RectangleBox[{-0.22443885714285716`, 4.8}, {0, 5.1}], 
                    
                    RectangleBox[{-0.07744914285714287, 5.1}, {
                    0, 5.3999999999999995`}], 
                    
                    RectangleBox[{-0.019787428571428574`, 
                    5.3999999999999995`}, {0, 5.7}], 
                    RectangleBox[{-0.0032114285714285717`, 5.7}, {0, 6.}], 
                    
                    RectangleBox[{-0.0002651428571428572, 6.}, {
                    0, 6.3}]}}, {}, {
                    GrayLevel[0.3], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"0-4\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 0.15}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"5-9\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 0.44999999999999996`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"10-14\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 0.75}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"15-19\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.05}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"20-24\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.3499999999999999`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"25-29\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.65}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"30-34\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 1.95}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"35-39\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 2.25}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"40-44\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 2.55}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"45-49\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 2.85}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"50-54\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 3.15}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"55-59\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 3.4499999999999997`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"60-64\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 3.75}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"65-69\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.05}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"70-74\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.35}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"75-79\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.6499999999999995`}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"80-84\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 4.95}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"85-89\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 5.25}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"90-94\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 5.55}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"95-99\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 5.85}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"100+\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {0.55, 6.1499999999999995`}]}}, {
                    
                    RGBColor[{0.996078431372549, 0.9725490196078431, 
                    0.9254901960784314}], 
                    EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[0.6]}], {
                    RectangleBox[{1.1, 0.}, {4.4794285714285715`, 0.3}], 
                    RectangleBox[{1.1, 0.3}, {4.296048000000001, 0.6}], 
                    
                    RectangleBox[{1.1, 0.6}, {4.310454857142858, 
                    0.8999999999999999}], 
                    
                    RectangleBox[{1.1, 0.8999999999999999}, {
                    4.229101714285715, 1.2}], 
                    RectangleBox[{1.1, 1.2}, {4.040964571428572, 1.5}], 
                    
                    RectangleBox[{1.1, 1.5}, {3.834948571428572, 
                    1.7999999999999998`}], 
                    
                    RectangleBox[{1.1, 1.7999999999999998`}, {
                    3.6178308571428577`, 2.1}], 
                    RectangleBox[{1.1, 2.1}, {3.428002285714286, 2.4}], 
                    
                    RectangleBox[{1.1, 2.4}, {3.1922377142857146`, 
                    2.6999999999999997`}], 
                    
                    RectangleBox[{1.1, 2.6999999999999997`}, {
                    2.912667428571429, 3.}], 
                    RectangleBox[{1.1, 3.}, {2.604528, 3.3}], 
                    
                    RectangleBox[{1.1, 3.3}, {2.347890285714286, 
                    3.5999999999999996`}], 
                    
                    RectangleBox[{1.1, 3.5999999999999996`}, {
                    2.037444571428572, 3.9}], 
                    RectangleBox[{1.1, 3.9}, {1.8568205714285715`, 4.2}], 
                    RectangleBox[{1.1, 4.2}, {1.6990377142857145`, 4.5}], 
                    RectangleBox[{1.1, 4.5}, {1.5361508571428573`, 4.8}], 
                    RectangleBox[{1.1, 4.8}, {1.3720800000000002`, 5.1}], 
                    
                    RectangleBox[{1.1, 5.1}, {1.2255634285714287`, 
                    5.3999999999999995`}], 
                    
                    RectangleBox[{1.1, 5.3999999999999995`}, {
                    1.1370057142857144`, 5.7}], 
                    RectangleBox[{1.1, 5.7}, {1.1069257142857143`, 6.}], 
                    RectangleBox[{1.1, 6.}, {1.100649142857143, 6.3}]}}}, {}, {
                    Thickness[0.0008], 
                    LineBox[{{0, -0.4}, {-4., -0.4}}], 
                    LineBox[{{1.1, -0.4}, {5.1, -0.4}}], {{
                    LineBox[{{0., -0.4}, {0., -0.5}}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], {0., -0.7}]}, {
                    
                    LineBox[{{-0.5714285714285714, -0.4}, \
{-0.5714285714285714, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"250\"", 
                    TraditionalForm], {-0.5714285714285714, -0.7}]}, {
                    
                    LineBox[{{-1.1428571428571428`, -0.4}, \
{-1.1428571428571428`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"500\"", 
                    TraditionalForm], {-1.1428571428571428`, -0.7}]}, {
                    
                    LineBox[{{-1.7142857142857142`, -0.4}, \
{-1.7142857142857142`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"750\"", 
                    TraditionalForm], {-1.7142857142857142`, -0.7}]}, {
                    
                    LineBox[{{-2.2857142857142856`, -0.4}, \
{-2.2857142857142856`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"1000\"", 
                    TraditionalForm], {-2.2857142857142856`, -0.7}]}, {
                    
                    LineBox[{{-2.857142857142857, -0.4}, {-2.857142857142857, \
-0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"1250\"", 
                    TraditionalForm], {-2.857142857142857, -0.7}]}, {
                    
                    LineBox[{{-3.4285714285714284`, -0.4}, \
{-3.4285714285714284`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    "\"1500\"", 
                    TraditionalForm], {-3.4285714285714284`, -0.7}]}, {
                    LineBox[{{-4., -0.4}, {-4., -0.5}}], 
                    InsetBox[
                    FormBox["\"1750\"", TraditionalForm], {-4., -0.7}]}}, {{
                    LineBox[{{1.1, -0.4}, {1.1, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"0\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {1.1, -0.7}]}, {
                    
                    LineBox[{{1.6714285714285715`, -0.4}, {
                    1.6714285714285715`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"250\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {1.6714285714285715`, -0.7}]}, {
                    
                    LineBox[{{2.242857142857143, -0.4}, {
                    2.242857142857143, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"500\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {2.242857142857143, -0.7}]}, {
                    
                    LineBox[{{2.814285714285714, -0.4}, {
                    2.814285714285714, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"750\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {2.814285714285714, -0.7}]}, {
                    
                    LineBox[{{3.3857142857142857`, -0.4}, {
                    3.3857142857142857`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1000\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {3.3857142857142857`, -0.7}]}, {
                    
                    LineBox[{{3.9571428571428573`, -0.4}, {
                    3.9571428571428573`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1250\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {3.9571428571428573`, -0.7}]}, {
                    
                    LineBox[{{4.5285714285714285`, -0.4}, {
                    4.5285714285714285`, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1500\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {4.5285714285714285`, -0.7}]}, {
                    LineBox[{{5.1, -0.4}, {5.1, -0.5}}], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"1750\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], {5.1, -0.7}]}}}}, {
                   GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 
                    Full}], 
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"male\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 
                    "\"                                      \""}, 
                    "RowDefault"], 
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"population\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"thousands\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowWithSeparators"], 
                    TemplateBox[{"\"                                      \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    PaneBox[
                    "\"female\"", 
                    BaseStyle -> {{BaselinePosition -> Baseline}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], {
                    FontSize -> 10, FontFamily -> "Roboto", FontSize -> 
                    Inherited, LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}, "RowDefault"]}, "RowDefault"]}, 
                 "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", #2}], "]"}]& )]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"2010 estimates\"", "\[NoBreak]",
                     "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "LargestCities:CountryData", 
     "numsubpods" -> "1", "position" -> "700", "scanner" -> "Data", "title" -> 
     "Largest cities"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CityData"}], "\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"city\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"population\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                    FormBox[
                    TagBox[
                    TagBox["\"Lima\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CityData, {"Lima", "Lima", "Peru"}}]], 
                    Identity], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["9.752", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9.752", "SRString" -> "9.752"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TagBox[
                    TagBox["\"Arequipa\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Arequipa", "Arequipa", "Peru"}}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TemplateBox[{",", "\",\"", 
                    TagBox[
                    TagBox["\"Trujillo\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Trujillo", "LaLibertad", "Peru"}}]], 
                    Identity], 
                    TagBox[
                    TagBox["\"La Libertad\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    AdministrativeDivisionData, {"LaLibertad", "Peru"}}]], 
                    Identity]}, "RowWithSeparators"], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["682834", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TemplateBox[{",", "\",\"", 
                    TagBox[
                    TagBox["\"Chiclayo\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Chiclayo", "Lambayeque", "Peru"}}]], 
                    Identity], 
                    TagBox[
                    TagBox["\"Lambayeque\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    AdministrativeDivisionData, {"Lambayeque", "Peru"}}]], 
                    Identity]}, "RowWithSeparators"], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["524442", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    FormBox[
                    TagBox[
                    TagBox["\"Cusco\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CityData, {"Cusco", "Cusco", "Peru"}}]], 
                    Identity], TraditionalForm], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["435114", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {{None}}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    RowBox[{
                    FormBox[
                    TagBox["\"2004\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2005\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2007\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2013\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2016\"", Identity], TraditionalForm], ",", 
                    FormBox[
                    TagBox["\"2018\"", Identity], TraditionalForm], ",", 
                    "\"and\[ThinSpace]\"", 
                    FormBox[
                    TagBox["\"2023\"", Identity], TraditionalForm]}], 
                    "\" estimates\""}, "RowDefault"], "\[NoBreak]", "\")\""}],
                     TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "LargestCities:CountryData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsPersonCount", 
     "numsubpods" -> "3", "position" -> "800", "scanner" -> "Unit", "title" -> 
     "Comparisons"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "8", "5"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"current population of California\"", FontFamily -> "Roboto",
                 FontSize -> Smaller, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["39.54", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "39.54", "SRString" -> "39.54"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "9", "2"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"current population of Canada\"", FontFamily -> "Roboto", 
                FontSize -> Smaller, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["36.62", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "36.62", "SRString" -> "36.62"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "1", "\".\"", "2"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"current population of Texas\"", FontFamily -> "Roboto", 
                FontSize -> Smaller, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["28.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28.3", "SRString" -> "28.3"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CityDataSourceInformationNotes.html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "City,Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.332", "parsetiming" -> "0.223", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP3219149db5c0d3i182470000405g1186694d8100", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa3220149db5c0d3i182470000499h7hh59c7ba6h05481992349747128482", "version" -> 
    "2.6", "inputstring" -> "population of peru"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 6, 23, 19, 1, 36.0781582`9.30981924955072}, "Line" -> 58,
     "SessionID" -> 26807131832210277864}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "Quantity[3.35*^7, \"People\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "population of peru"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{141.09765625, {62., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[59]:=",ExpressionUUID->"cdd611ed-adfc-4625-9407-9decedbef65c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8966172897833977`*^9, 
  3.896617289799023*^9}},ExpressionUUID->"494421b4-3c5a-4baf-8c13-\
dbb91657cc06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"caffeine", "  ", "molecule"}]], "Input",
 CellChangeTimes->{{3.8966172794975734`*^9, 
  3.8966172858738585`*^9}},ExpressionUUID->"127f009a-f00d-45f7-8b73-\
9d86b85c3863"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Molecule",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.], {
                RGBColor[0.800498, 0.201504, 0.192061], 
                
                LineBox[{{{3.79209869902163, 1.8272037753821582`}, {
                 3.79209869902163, 1.4136018876910792`}}, {{
                 3.6721013208147957`, 1.8272037753821582`}, {
                 3.6721013208147957`, 1.4136018876910792`}}}], 
                
                LineBox[{{{2.096436010722458, -0.8750399779748617}, {
                 2.466217970792783, -0.6615399855113666}}, {{
                 2.156436023111233, -0.9789599918791183}, {
                 2.526217983181558, -0.7654599994156234}}}]}, {
                RGBColor[0.4, 0.4, 0.4], 
                
                LineBox[{{{3.79209869902163, 1.4136018876910792`}, {
                 3.79209869902163, 1.}}, {{3.6721013208147957`, 
                 1.4136018876910792`}, {3.6721013208147957`, 1.}}}], 
                
                LineBox[{{{2.466217970792783, -0.6615399855113666}, {
                 2.8359999308631076`, -0.4480399930478716}}, {{
                 2.526217983181558, -0.7654599994156234}, {
                 2.8959999432518826`, -0.5519600069521284}}}], 
                
                LineBox[{{4.2265861101150515`, -0.7145}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{3.2375621880030865`, -0.714503071058709}, {
                 2.865999937057495, -0.5}}], 
                
                LineBox[{{3.732100009918213, -1.6079976403861511`}, {
                 3.732100009918213, -2.}}], 
                
                LineBox[{{5.003619333775719, 0.6305873020970953}, {
                 4.598100185394287, 0.5}}], 
                
                LineBox[{{5.899504924166603, 0.31492393235529803`}, {
                 6.127900123596191, 0.}}], 
                
                LineBox[{{5.7332019761533894`, 1.3826536160625205`}, {
                 5.855000019073486, 1.7553000450134277`}}], 
                
                LineBox[{{3.3605377589726215`, 0.785496928941291}, {
                 3.732100009918213, 1.}}], 
                
                LineBox[{{2.865999937057495, -0.10799764038615117`}, {
                 2.865999937057495, -0.5}}], 
                LineBox[{{2.371513960302062, 0.7855000073300253}, {2., 1.}}], 
                
                LineBox[{{5.003619333775719, -0.6305873020970953}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{{5.899504924166603, -0.31492393235529803`}, {
                 6.127900123596191, 0.}}, {{
                 5.773010113643557, -0.2849500489356847}, {
                 5.972050587141657, -0.010502036155947234`}}}], 
                
                LineBox[{{{4.598100185394287, 0.5}, {
                 4.598100185394287, -0.5}}, {{4.7180975636011215`, 0.4}, {
                 4.7180975636011215`, -0.4}}}], 
                
                LineBox[{{4.598100185394287, 0.5}, {3.732100009918213, 
                 1.}}]}, {
                RGBColor[0.291989, 0.437977, 0.888609], 
                
                LineBox[{{3.8550720348358154`, -0.929}, {
                 4.2265861101150515`, -0.7145}}], 
                
                LineBox[{{3.6091244389486774`, -0.929006142117418}, {
                 3.2375621880030865`, -0.714503071058709}}], 
                
                LineBox[{{3.732100009918213, -1.2159952807723022`}, {
                 3.732100009918213, -1.6079976403861511`}}], 
                
                LineBox[{{5.40913848215715, 0.7611746041941907}, {
                 5.003619333775719, 0.6305873020970953}}], 
                
                LineBox[{{5.671109724737016, 0.6298478647105961}, {
                 5.899504924166603, 0.31492393235529803`}}], 
                
                LineBox[{{5.611403933233293, 1.010007187111613}, {
                 5.7332019761533894`, 1.3826536160625205`}}], 
                
                LineBox[{{2.9889755080270306`, 0.570993857882582}, {
                 3.3605377589726215`, 0.785496928941291}}], 
                LineBox[{{2.865999937057495, 0.28400471922769766`}, {
                 2.865999937057495, -0.10799764038615117`}}], 
                
                LineBox[{{2.7430279206041246`, 0.5710000146600508}, {
                 2.371513960302062, 0.7855000073300253}}], 
                
                LineBox[{{5.40913848215715, -0.7611746041941907}, {
                 5.003619333775719, -0.6305873020970953}}], 
                
                LineBox[{{{5.671109724737016, -0.6298478647105961}, {
                 5.899504924166603, -0.31492393235529803`}}, {{
                 5.573969640145457, -0.5593980617154222}, {
                 5.773010113643557, -0.2849500489356847}}}]}}, {
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, 2.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "1"], 
                Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2., -1.}, Center, {0.5999868910341732, 
                  0.36999191613774013`}], "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, -1.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "3"], 
                Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, 0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "4"], 
                Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2.865999937057495, 0.5}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, -0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, 0.5}, 0.2]}, "7"], 
                Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, -0.5}, 0.2]}, "8"], 
                Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, 1.}, 0.2]}, "9"], 
                Annotation[#, 9, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2.865999937057495, -0.5}, 0.2]}, "10"], 
                Annotation[#, 10, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{6.127900123596191, 0.}, 0.2]}, "11"], 
                Annotation[#, 11, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, -2.}, 0.2]}, "12"], 
                Annotation[#, 12, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{5.855000019073486, 1.7553000450134277`}, 0.2]}, 
                 "13"], Annotation[#, 13, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2., 1.}, 0.2]}, "14"], 
                Annotation[#, 14, "Tooltip"]& ]}}, DisplayFunction -> 
             Identity, Frame -> True, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.], {
                RGBColor[0.800498, 0.201504, 0.192061], 
                
                LineBox[{{{3.79209869902163, 1.8272037753821582`}, {
                 3.79209869902163, 1.4136018876910792`}}, {{
                 3.6721013208147957`, 1.8272037753821582`}, {
                 3.6721013208147957`, 1.4136018876910792`}}}], 
                
                LineBox[{{{2.096436010722458, -0.8750399779748617}, {
                 2.466217970792783, -0.6615399855113666}}, {{
                 2.156436023111233, -0.9789599918791183}, {
                 2.526217983181558, -0.7654599994156234}}}]}, {
                RGBColor[0.4, 0.4, 0.4], 
                
                LineBox[{{{3.79209869902163, 1.4136018876910792`}, {
                 3.79209869902163, 1.}}, {{3.6721013208147957`, 
                 1.4136018876910792`}, {3.6721013208147957`, 1.}}}], 
                
                LineBox[{{{2.466217970792783, -0.6615399855113666}, {
                 2.8359999308631076`, -0.4480399930478716}}, {{
                 2.526217983181558, -0.7654599994156234}, {
                 2.8959999432518826`, -0.5519600069521284}}}], 
                
                LineBox[{{4.2265861101150515`, -0.7145}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{3.2375621880030865`, -0.714503071058709}, {
                 2.865999937057495, -0.5}}], 
                
                LineBox[{{3.732100009918213, -1.6079976403861511`}, {
                 3.732100009918213, -2.}}], 
                
                LineBox[{{5.003619333775719, 0.6305873020970953}, {
                 4.598100185394287, 0.5}}], 
                
                LineBox[{{5.899504924166603, 0.31492393235529803`}, {
                 6.127900123596191, 0.}}], 
                
                LineBox[{{5.7332019761533894`, 1.3826536160625205`}, {
                 5.855000019073486, 1.7553000450134277`}}], 
                
                LineBox[{{3.3605377589726215`, 0.785496928941291}, {
                 3.732100009918213, 1.}}], 
                
                LineBox[{{2.865999937057495, -0.10799764038615117`}, {
                 2.865999937057495, -0.5}}], 
                LineBox[{{2.371513960302062, 0.7855000073300253}, {2., 1.}}], 
                
                LineBox[{{5.003619333775719, -0.6305873020970953}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{{5.899504924166603, -0.31492393235529803`}, {
                 6.127900123596191, 0.}}, {{
                 5.773010113643557, -0.2849500489356847}, {
                 5.972050587141657, -0.010502036155947234`}}}], 
                
                LineBox[{{{4.598100185394287, 0.5}, {
                 4.598100185394287, -0.5}}, {{4.7180975636011215`, 0.4}, {
                 4.7180975636011215`, -0.4}}}], 
                
                LineBox[{{4.598100185394287, 0.5}, {3.732100009918213, 
                 1.}}]}, {
                RGBColor[0.291989, 0.437977, 0.888609], 
                
                LineBox[{{3.8550720348358154`, -0.929}, {
                 4.2265861101150515`, -0.7145}}], 
                
                LineBox[{{3.6091244389486774`, -0.929006142117418}, {
                 3.2375621880030865`, -0.714503071058709}}], 
                
                LineBox[{{3.732100009918213, -1.2159952807723022`}, {
                 3.732100009918213, -1.6079976403861511`}}], 
                
                LineBox[{{5.40913848215715, 0.7611746041941907}, {
                 5.003619333775719, 0.6305873020970953}}], 
                
                LineBox[{{5.671109724737016, 0.6298478647105961}, {
                 5.899504924166603, 0.31492393235529803`}}], 
                
                LineBox[{{5.611403933233293, 1.010007187111613}, {
                 5.7332019761533894`, 1.3826536160625205`}}], 
                
                LineBox[{{2.9889755080270306`, 0.570993857882582}, {
                 3.3605377589726215`, 0.785496928941291}}], 
                
                LineBox[{{2.865999937057495, 0.28400471922769766`}, {
                 2.865999937057495, -0.10799764038615117`}}], 
                
                LineBox[{{2.7430279206041246`, 0.5710000146600508}, {
                 2.371513960302062, 0.7855000073300253}}], 
                
                LineBox[{{5.40913848215715, -0.7611746041941907}, {
                 5.003619333775719, -0.6305873020970953}}], 
                
                LineBox[{{{5.671109724737016, -0.6298478647105961}, {
                 5.899504924166603, -0.31492393235529803`}}, {{
                 5.573969640145457, -0.5593980617154222}, {
                 5.773010113643557, -0.2849500489356847}}}]}}, {
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, 2.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "1"], 
                Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2., -1.}, Center, {0.5999868910341732, 
                  0.36999191613774013`}], "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, -1.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "3"], 
                Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, 0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "4"], 
                Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2.865999937057495, 0.5}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, -0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, 0.5}, 0.2]}, "7"], 
                Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, -0.5}, 0.2]}, "8"], 
                Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, 1.}, 0.2]}, "9"], 
                Annotation[#, 9, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2.865999937057495, -0.5}, 0.2]}, "10"], 
                Annotation[#, 10, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{6.127900123596191, 0.}, 0.2]}, "11"], 
                Annotation[#, 11, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, -2.}, 0.2]}, "12"], 
                Annotation[#, 12, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{5.855000019073486, 1.7553000450134277`}, 0.2]}, 
                 "13"], Annotation[#, 13, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2., 1.}, 0.2]}, "14"], 
                Annotation[#, 14, "Tooltip"]& ]}}, DisplayFunction -> 
             Identity, Frame -> True, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"SMILES: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "\"O=c1n(C([H])([H])[H])c(=O)n(C([H])([H])[H])c2nc([H])n(C([\
H])([H])[H])c21\"", BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, ImageSize -> {{1, 300}, Automatic}, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InChIKey: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"RYYVLZVUVIJVGH-UHFFFAOYSA-N\"", "SummaryItem"]}]}},
              AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Molecule[{
   "O", "O", "N", "N", "N", "N", "C", "C", "C", "C", "C", "C", "C", "C", "H", 
    "H", "H", "H", "H", "H", "H", "H", "H", "H"}, {
    Bond[{1, 9}, "Double"], 
    Bond[{2, 10}, "Double"], 
    Bond[{3, 8}, "Aromatic"], 
    Bond[{3, 10}, "Aromatic"], 
    Bond[{3, 12}, "Single"], 
    Bond[{4, 7}, "Aromatic"], 
    Bond[{4, 11}, "Aromatic"], 
    Bond[{4, 13}, "Single"], 
    Bond[{5, 9}, "Aromatic"], 
    Bond[{5, 10}, "Aromatic"], 
    Bond[{5, 14}, "Single"], 
    Bond[{6, 8}, "Aromatic"], 
    Bond[{6, 11}, "Aromatic"], 
    Bond[{7, 8}, "Aromatic"], 
    Bond[{7, 9}, "Aromatic"], 
    Bond[{11, 15}, "Single"], 
    Bond[{12, 16}, "Single"], 
    Bond[{12, 17}, "Single"], 
    Bond[{12, 18}, "Single"], 
    Bond[{13, 19}, "Single"], 
    Bond[{13, 20}, "Single"], 
    Bond[{13, 21}, "Single"], 
    Bond[{14, 22}, "Single"], 
    Bond[{14, 23}, "Single"], 
    Bond[{14, 24}, "Single"]}, {AtomCoordinates -> QuantityArray[
      StructuredArray`StructuredData[{24, 3}, {CompressedData["
1:eJwBUQKu/SFib1JlAgAAABgAAAADAAAA3Lqbpzrkzj+XkA96Nqv3vzlnRGlv
8P4/f4y5awn5BsBXfa62Yn/hv5zEILByaPO/AKlNnNzv7b/Ik6RrJt/jP6Rw
PQrXo/W/HVpkO99PAEDbxMn9DkXhPwzSjEXT2eU/z9VW7C+79b86kst/SL/w
vzHw3Hu45Ng/elioNc079j+TOgFNhA37P+M2GsBbIPK/aam8HeG06T8cfGEy
VTDCP65kx0YgXtU/G2SSkbOw2T+nRBK9jGLrP+B/K9mxEem/mLwBZr6Dt78w
Ub01sFXrvwH76NSVz+4/LiEf9GxW/L/s+gW7YdvUv9Fcp5GWyue/iUFg5dAi
A0DRs1n1udr3PyC1iZP7Hc6/n82qz9VW9r+xUGuad5z1PxWMSuoENATARbbz
/dT4BkAuUigLX1+rP/JBz2bV5/w/FR3J5T8kAsCBJsKGp1cAwPIk6ZrJN+8/
4L4OnDOiCkDmP6Tfvg4AQMCy0qQUdM+/R3L5D+k3AsCYu5aQD3r+P7gehetR
OALAgZVDi2zn+b9kIxCv6xflP7FyaJHtfArAH9ydtdsu5L/gLZCg+DEAQFwg
QfFjzAbAMQisHFpkCEBgB84ZUdrvv8iYu5aQD/s/+DHmriXkAkDtEtVbA1vN
PyqpE9BE2AVAbcX+sntyDkDYEvJBz2biP/YoXI/C9fw/jblrCfmgAMAhH/Rs
Vv0AwL8OnDOiNABAc2iR7Xw/CsB6xyk6ksv7v1sqb0c4Leo/D3o2qz7XAMAA
kX77OvAHwONrzywJUOA/+3wsEQ==
        "], "Angstroms", {{1}, {2}}}]], 
    AtomDiagramCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQQO4bd5HRigbFT6w35UeTCfIVZXDMR3kDrw0h5I
J0x8ywaVf2CPJg9Sn1CSIoQsj8xHNx/dPLD8jyYJmLvQ3XsAiBVas8VB/Iat
on/s0dwP4jfc/CuFrH/BlKccyPph5jUc+soC4j/oyRBEll/w7ZgkiP8gg+En
2Px9BmD3LNh7kAms7ye/KNi/M7X+g+QdHlZBxFWm/wDbfzvjuz3E/C9g2pbr
N4hWyFt81x4AjFdTAQ==
     "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.896553941837287*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"2563f8f1-02e6-406f-9831-aaa1c21ebf73"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"toast", " ", "+", " ", 
  RowBox[{"orange", " ", "juice"}]}]], "WolframAlphaShortInput",
 CellChangeTimes->{{3.8966172091152697`*^9, 
  3.8966172278667154`*^9}},ExpressionUUID->"9714372e-c09a-4549-a230-\
6be272c59283"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Propane molecule", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "3DStructure:ChemicalData", "3D structure", 1, 1, "Content"}, 
      "ExtrusionOpen" -> False, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {
     "StructureDiagramPod:ChemicalData__Lewis structure", 
      "StructureDiagramPod:ChemicalData__All atoms"}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Chemical\", \"Propane\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"propane\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {ChemicalData, "Propane"}, 
                 "SRString" :> $CellContext`GeneralData[
                  ChemicalData, "Propane", "SpokenName"]]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Chemical names and formulas", "scanner" -> "Data", 
     "id" -> "ChemicalNamesFormulas:ChemicalData", "position" -> "200", 
     "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"formula\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{"\"C\"", 
                    SubscriptBox["\"H\"", "3"], "\"C\"", 
                    SubscriptBox["\"H\"", "2"], "\"C\"", 
                    SubscriptBox["\"H\"", "3"]}, "RowDefault"], 
                  ScriptBaselineShifts -> {0.5, 0.75}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"Hill formula\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "3"], 
                    SubscriptBox["\"H\"", "8"]}, "RowDefault"], 
                  ScriptBaselineShifts -> {0.5, 0.75}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"propane\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalNamesFormulas:ChemicalData__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Structure diagram", "scanner" -> "Data", "id" -> 
     "StructureDiagramPod:ChemicalData", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Propane\"][EntityProperty[\"Chemical\", \
\"CHColorStructureDiagram\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               CapForm["Round"], Null, {{
                 RGBColor[0.4, 0.4, 0.4], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"C\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  286.6, -25.}]}, {
                 RGBColor[0.4, 0.4, 0.4], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"C\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {373.21, 
                  25.}]}, {
                 RGBColor[0.4, 0.4, 0.4], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"C\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {200., 25.}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  246.74999999999997`, -72.49}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  326.46000000000004`, -72.49}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  404.21, -28.689999999999998`}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  426.90000000000003`, 56.00000000000001}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {342.21, 
                  78.69}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {231., 
                  78.69}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {146.31, 
                  56.00000000000001}]}, {
                 RGBColor[0.433, 0.467, 0.467], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"H\"", FontSize -> Scaled[0.11910700845336798`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  169., -28.689999999999998`}]}}, {{{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{307.54855353916753`, -12.906388673843926`}, {
                   329.905, 0.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{329.905, 0.}, {352.2614464608325, 
                   12.90638867384394}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{265.6520511418232, -12.905341305902537`}, {243.3, 
                   0.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{243.3, 0.}, {220.9479488581768, 
                   12.905341305902537`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{271.05148331135274`, -43.52946192079944}, {
                   266.675, -48.745}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{266.675, -48.745}, {
                   263.5319690695996, -52.49060950777199}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{302.1508059247849, -43.52754072674445}, {
                   306.53000000000003`, -48.745}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{306.53000000000003`, -48.745}, {
                   309.67556009084547`, -52.492683108736834`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{385.30499658697346`, 4.052246233722375}, {
                   388.71, -1.8449999999999989`}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{388.71, -1.8449999999999989`}, {
                   391.1555162390052, -6.080476350715781}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{394.1577537662776, 37.09499658697348}, {400.055, 
                   40.5}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{400.055, 40.5}, {404.29047635071583`, 
                   42.945516239005215`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{361.1150034130265, 45.94775376627763}, {357.71, 
                   51.845}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{357.71, 51.845}, {355.2644837609948, 
                   56.080476350715784`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{212.09499658697348`, 45.94775376627763}, {215.5, 
                   51.845}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{215.5, 51.845}, {217.9455162390052, 
                   56.080476350715784`}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{179.05224623372237`, 37.09499658697348}, {173.155,
                    40.5}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{173.155, 40.5}, {168.9195236492842, 
                   42.9455162390052}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{187.90500341302652`, 4.052246233722375}, {
                   184.5, -1.8449999999999989`}}], 
                  RGBColor[0.433, 0.467, 0.467], 
                  
                  LineBox[{{184.5, -1.8449999999999989`}, {
                   182.0544837609948, -6.080476350715781}}]}}}, Null}, {
              GridLines -> Dynamic[
                 Map[{{#, 
                    GrayLevel[0.7]}}& , 
                  MousePosition[{"Graphics", Graphics}, None]]], 
               Method -> {"GridLinesInFront" -> True}, ImageSize -> 104, 
               PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
               95.37710733650941, 
               PlotRange -> {{121.95500337796813`, 
                446.3839972976255}, {-102.0112080267053, 
                100.83090602002898`}}}], ImageSizeAction -> "ShrinkToFit", 
             ImageSize -> {440.}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "4"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "All atoms", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Skeletal structure", "input" -> 
           "StructureDiagramPod:ChemicalData__Skeletal structure"}, {}], 
         XMLElement[
         "state", {
          "name" -> "All atoms", "input" -> 
           "StructureDiagramPod:ChemicalData__All atoms"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Lewis structure", "input" -> 
           "StructureDiagramPod:ChemicalData__Lewis structure"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Show bond information", "input" -> 
         "StructureDiagramPod:ChemicalData__Show bond information"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show graph properties", "input" -> 
         "StructureDiagramPod:ChemicalData__Show graph properties"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step", "input" -> 
         "StructureDiagramPod:ChemicalData__Step-by-step", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "3D structure", "scanner" -> "Data", "id" -> 
     "3DStructure:ChemicalData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnWd4lNXW98/1Ps+H9+P7zQ/nw8lzmqconKPnHAQMGWqEIFWK0obeiYQS
EkSGGgKEIC00mdBBiJSIdAaQXgJIB2EoAipIryrud/02s/LcxgRRA3fKva5r
MyGZmbv993+VvfZa/9MmvkGH//Ob3/ym1/+Vfxq0TqyckNA6qeH/k/806tGr
c8ce7dvV7NG7fcf2Ca+0+S/55SAZ82T892888cQTT0qXlKtY0Ve+UqVg5Ro1
QrXq1jV1GzUy9Rs3Dtdv0iQQGxfnc/v8PCldUi4mJqp8dHSoYkyMqfraa6ZW
vXqmXuPGplHz5uZNv9+07NDBtO7c2fg7dAjFxMZGuX2+npR8qRAd7a9QqZKp
6PMZX/XqBp4UfjRvtW5t2ggWOyckmB6JiSahf3/Te8AAXsNtu3b1uX3enpRc
gSfBJEN0t6ldv75pLBzp79jRdOnVy/R5910zYPhwMzgtzaS8954ZMW6cGTZ2
rBkyerSJa9jQ5/b5e1LyxGIyOjr8qvCkYrJJy5ambZcuJr5fP9N/6FAzLD3d
pGVkmPEzZpjJc+aYafPmmalz55oJmZngM+T2NXhS8gT9je7GnoyL8GQbweTb
SUlmQEqKSR0/3owTPILFWR9+aOZ/9JFZuHKlHfOWLzfTFywwiUOG+Ny+Drel
bLly2OYBfMWadeqEX2/YMFyvUaOw+IyBsi+/7HP7/Iqb4OdYH0fsyQZNm1rf
BjvyHdHbqRMmmInCiTMWLbJ4zN640azats2OlVu3mhWffGKy1q41k2bODLp9
HW6J9RVffTVYqWpVU6N2bSN4tPexcYsW1jZv0a6dvafN27YNx9Wt63P7fIuD
cE+5nzUFk/jdTVu1Mp179jRJgwdbO3JCMGiCgsmFH39slodCZs+JE+bw2bPm
+BdfmK2HDplN+/ebNTt3miXr1xu3r8UNUbs8ukoVUz0uzrzeoIF54623LB6J
W3SMjzddxT7v0bevtYl4bd6und/t8y7qQpyyeq1aNj5JLIh7mZCcbAaLPzN2
2jTz/sKFZsGKFWa58OT63bvNmStXzANjzP3vvzdHLlwwuwSnWw4etPzp9rU8
a1FMYpfHCk9q7KJdt26mu+APXxHbfGBqqgmMHGnHu2IXJcvvBK9+t8+/KMvL
5cr5iFE2fPNNe087vf22SR4yxIwU/Y1/M1fsx2XCk2uFE+HH89evm4eCy3sy
wteumU/PnTN7PvvM8qbb1/IsJddXrFzZYhKObNm+vemSkGBjaO+OGGGGjx1r
Rk+aZMZOn27tc3xGfh45caKd9606dvS5fR1FVZ5//vko7KEmYgsRE0LPBGR+
w5UzPvjALFm3zmwTPO4Ph83B8+fNlbt3zfeCyRsyPvv6a3NU9PkB0esbc3LC
bl/Ls5RyFSr4K4nuBpNqk3fr3dv0GzTIDBkzxqRNnmxtoKniK2IH4S/OXrLE
vqKDwOmgtLRSa5M/idR5440waznoH2LmQ+W+Ev+ZvXSpWbdrlzkj2Lt57565
dg+WfCS3ZZwSvjwpev3Q55+Dy1ITK4IriV/UEHuyrtjk4s/YGC82OfE05jQx
tJlZWdZXzFqzxizbsMEslYEdvnj1ajNn2TIzXnCbOHBglNvXU1SlZp06QdXh
fQcONMPF38mYPdvMy842G/fuNbcfPrRYvC/juwguv/72WxO+ccN8JriER5eE
Qj63r+NZidrk6Bl87g49etj7xnwGk9Pmz7e4W7RqlY1XbNq3z+w8dsxsPnDA
zvNV27dbH5L3iD73u309RVXIz6jy2mt23vdMSrJ+OLYlc321+DOHhQ8viF15
Rvjx8v375pLw5pmbN01Yfnf8q6/MruPHS5UOJ0ZJnLeB2OTEgIjz4tOgu+FJ
8Pbh2rXm4y1brA10VOycaw8emAu3b+fiEx8S/pyYmenp8nzE2u8xMdZOIkaE
Hh8ldjlzHr78aNMmE8rJMbtPnrR25JFLl8yJy5etbcnr/jNnwvOzs31uX8ez
lJjq1QPE1FgTgyuxKVmXnTRzprUf0dtgcv2ePdYnvCTzF3n4/ffWHt8j9xIf
cs2OHSYzK6vU2D8/R+DKmGrVjNiY1r4kpjFR7i/xSuKSOTK/14ru4T7uPXXK
+t+HL140R2TknD4dXrR6dcDta3jWUjk2NtBQ/G/0C74Ovnf61KnWn+G+Zctc
3iCY3Hr4sPlU5vL1+/cf2eRi+2CPawxjo+h3sUFLla55EimIKzMXL7bxyt0n
Ttj7eVl8cHDJ2Hn8uJ3vWw4eDKeMG+d3+xrckCqxsX7sSmK9PZOTrf+N7w1X
LhW/Bj194ssvzRmxv8/dumVjvchdeT119arVOaJnbNwXLMcnJvrcvqaiJD/i
Spn3ypXrZL5/KfbkN3I/z+LfiN7mfot+Ci9csSLg9rm7Lehw7hmxSuzxjFmz
bKwX/X1K7tVt4cj74i/eMf8r/IxNjv2Dr8g8hwNGjB/v2ZgR0bWKGg6uHOng
SvFl7L28Jff2hOge/JsNOTne/YuI8GVI/XDRG7l+IrhkHexhBItwpf58VX4+
LXMdXKLLV0f8cjjT7espKpKXK7GRyM+wXCm+4hd5uFLuYzg9GIxy+7yLipBz
yn2zcbWxY3NxuWLzZrNV9PNZ4cVLosM/v3PHXLx3z1wSWwi9jh4/JjpebHPz
wcqVNpZE3kuTVq2i3L4mt+VHXCk2ElwZhCtl/uZypcxvuPKEcOXm/fs9rswj
zdu1C/V+5x0zJC3NzmniQ+gafB7uofqIGr9ggEniGthEHwmGWQ8ixhnvxdcf
cWXVqo+4smvXH3OlzGm48pyDKzM8rsxXOvfsGeL+jZkyxa43EiNCP3/y6ae5
sbXDotfxdcCo+js7jh2z/jgcy+fcvg635QdcKbZ7T+VKuTdwJXFf5cqTHlc+
kbTv3j00ND3drivCmcTLWdcBm9xP4hfEheBQ8lvA6sHPP7fYxB4lVuz2Nbgt
ypWsoVmuTEmxXEkuG1x5KR+u9HJZHy/Va9XyEzMit598jJmR2Dr6mRgw9xUO
JQ7MPEevHxX+3BcOW5xy77v17u13+zrcklyujIuzaxWWKydMsFy5LD+ulPu3
+dNPPa58AsHWJKZhcyxFr/P63vTpj3KJliyx3Ii9iX3JfSW+Qb4LHEre/5S5
c0ttfP2FMmWC/ylf3nJl2whXTohwJXP5onLlzZseV/5Mia1bNyo+MdEERo2y
MfZe4g+xX5RcQXwh/JycU6ce+UGCyZNw5hdfWHuTv+Gby+f9bl/Hs5bf/e53
UX/84x/N3//+d1OhYkXTzO+3e3cex5WfeFz5s6RZq1a+d4YNM6MmTTL95ZV1
8/Rp0x7Ne9HnO44efcSZgkfu7wnlzBMnbL5/n6Qk88ILL4TLlCkTevHFFwPy
rAJuX9PTlj/84Q/B559/3pQtW9ZER0eb119/3TRr1sykjBlj/Z0Lwo95uTJj
9myf2+dd3KRVx45RosdDY6ZOtWsVxJDwa5j72JLkGOCfH1c7U/S6cmbSgAGm
onDGv/71L/Pvf//b/Oc//zGvvPKKefnllwNuX9fTECdXcq3Vq1c3b7zxhmnT
po3p3r27effdd81RmcseVxaeiE6OElspwB6fMZMn29wsfJ/tR45YfxzOPBnh
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
ADUTUtLTfWkZGYEp8+cHxAYILlyxIqR+j8Wt+PRr5bvWReqBZInvoz2NwRED
3QtewA06Fwzhl2tPw4L6bKK7sRvhQL6H34NdYuvgl2OAe/rOal95jsHv4Uz5
Xp/b992TnxZy51InTAgR1yG/Ez8bXY0Ps/vkSRu3FA4Mz83ODjzJ94FbehSk
T53qnzhzZmDmhx8GMz/4ICT+Dr3rcvtsYlvCYdrTmIHedvbKdvZPUP0NT2pP
PDhV+xiq/tc1Sj4Dj6pNC4bl2N56ZDGTxIEDo+DAzKysoHBnaN2OHaFFq1YF
p82f7yvM42DbEt8WHvTTb1P4LkCPO9HNYfxuYuhOHa716fFZ0MNwH9yKvneu
nasPr30M+Q7wq31v4Wf5vLfm48nPFuE8v7OHu7M/F3YlXAkuiR2xdu7s/ar9
NZUz8ZuIv7MnF1xiM7R6xrmjnpQcAZesgWs+ELjE33H2M3T2MXSuWTr7ZWt+
B5yJjSmvng735BeL8J0/P1wSeweX+EHgkPVKZ79s8j3AZAw5mGKbVhG/CTuV
tUo4tqvYt25fmyfFWwRPIe3jTtxS+2ziN4FT9DZY1J7Ef5P/x+C/5+nFxagr
OOZz9ju8Xu6e/EoR3zyk/rj22dT+r3Aj/g46vKzo7uhI3w76IVEvj9xkcj9b
iK9EnYge4v/z2QH05vH6dnjyK0T0dJRwZghdzjoQcSLtswmXosv/IX4OvWRs
nwTR3TXy9COGL9nH2SUSk8rIzCRPxdPnnvxqETszwNo48UhiRaz1oMvhzFcj
fYgrRF5tHXBnz9cIZ1KLLDB8uM0rJfcZrLK/4/WGDQMxXk8uT36hiF9texmy
Pq79iV8Rvx0c0r/Q2fPV9tWkTnikrya5U+zzJCef9QJyR6n7BJeCWfLoG775
ZsDta/SkeIvgM6qh8FztevWCNSK9uKIj/YjBKHuXtE49NcFtn2yxTck3XbFl
i90PQn0yck/J9aPWKDUfBbtezrAnhSL04sLfiYn01cT/qRKpZUNvBeo0sOeN
fXD0iiPXlPVVq88XLLA1mW2/OBn83LVXL5/b1+RJ8Zc44Uz4EZ8HPV5R/R/2
EImdGRvpCYufzp4m+JN+Hehz8qDZ28lgPxJ7kdg/5/Y1eVL8RfwbP3084Ej1
f+BMehDzMxjl77UjcU32tYPNNsKd9JpjPzJ76KjxyD4kcv4SBw/2u31dnhR/
ES4MO/0f2/NVXnP1OfFM9HkkbtRCbE36yLVkvV1sy6UbNtg8KvY30R9p1MSJ
np3pya+W1xs08KO3LV9G+hDjC2F7gkk4kvoN1FugVxd1HNjTDibJ2acGE3mi
5Iziqwt/evFNTwpFwKX2x4Y3wSR6G58HbsQXB4fUB6e2CHn69I3llToM1BjB
5iQHf8GKFR4uPSkU0dp0cCY+DhyJD96he3dbJ7FfpC44MUz8G2ouMOiPRN0F
9t+x/x1srtm2zcOlJ79aylWs6MvV3YJJbEntzQU/vpuSYrE3Rnxu4kT06cLH
oVYIPMm+O/xx8vXZvyS2ppc77MmvlvKVKgXVx6H+IWs4rIdTIwkepF4idRLZ
w0QdEPYkU2uBvobUW6BGyPSFC219hz0nT+Kb+9y+Jk+Kv/iqVQup3611RKgF
RiwSHqTGDXGg+aKniVluzMmxvZDYF0e9BeqDfCC+OHH2dbt3ezrck0IRcog0
t406h9TbZl88NecyIv3a4Ufi6ex5v3D5svny5k1z6Nw5u6+Yvcbs4aR/0sCU
FJ/b1+NJyRCNTzYn16hXL+tja2/szAgm2T9MH2LqMty6e/dRzaVvvrG1wdjj
zv53anwOSU/3uX09npQMIV+NeBC9CqgV6+yNTU1EeJL4D/vi6Z95/+FDi8sL
N27Y+g3sQ4ZHiV/GxsX53L4eT0qG1GvcOEguG/0ziAeljh9v9Tf+DJjceujQ
o/p0X31la35Rdwlcnrt929Zt4G/sk1+7c6dnW3pSaMJ6T4uIDs+tmxjpXbhp
3z5z4do1W5/ugYy7332XWxfs0p07ttfrkYsXzd7PPjPZmzd764+eFKo0b9s2
rD3bqcdNvwLqxlKr81qkXqLt2y7jAT9//705I9xJ3SXq3BwIh036tGk+t6/D
k5IlDZs181lcpqRYXGZGehCz7o2vQ026c4JDsHjh3j1bn872bL9yxdZeEvvT
40pPnoq079o1yJq39iamd4GtAyb2Zc7p09bncfbGpm4i9uXO48c9u9KTpyrx
iYkB+mPQMwNfnLi5rRXv6I1N/URqJlJjdteJE96aoyfPROIHDowaNXFiGN8H
zqS3C/HzHUeP2pgQ3Lnz2LFw9qZNAbfP1ZPSJ9Q7TJsyJTB76dLg4jVrQtkb
NwaXrl9faL2xPfHEE0888eRZyv8Hlc9mHw==
               "], {{0, 0}, {166, 129}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              Method -> {"ShrinkWrap" -> True}, ImageSize -> 183, 
               ImageSize -> {166, 129}, PlotRange -> {{0, 166}, {0, 129}}}], 
             ImageSizeAction -> "ShrinkToFit", ImageSize -> 400], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show bonds only", "input" -> 
         "3DStructure:ChemicalData__Show bonds only"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show space filling model", "input" -> 
         "3DStructure:ChemicalData__Show space filling model"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Basic properties", "scanner" -> "Data", "id" -> 
     "Basic:ChemicalData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"SOLV-DB"}], "\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n    ", 
         XMLElement["datasource", {}, {"CRCHandbook"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"MolarMass\"], EntityProperty[\"Chemical\", \
\"Phase\"], EntityProperty[\"Chemical\", \"MeltingPoint\"], \
EntityProperty[\"Chemical\", \"BoilingPoint\"], EntityProperty[\"Chemical\", \
\"MassDensity\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"molar mass\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["44.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "44.1", "SRString" -> "44.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"phase\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"melting point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["187.63", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "187.63", "SRString" -> "187.63"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"boiling point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["42.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "42.1", "SRString" -> "42.1"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"mass density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.00187939", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.00187939", "SRString" -> 
                    "0.00187939"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20", "SRString" -> "20"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Basic:ChemicalData__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step", "input" -> 
         "Basic:ChemicalData__Step-by-step", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "2"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "g/mol", "long" -> "grams per mole"}, {}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Gas properties (at STP)", "scanner" -> "Data", "id" -> 
     "GasProperties:ChemicalData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CRCHandbook"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"mass density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.00187939", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.00187939", "SRString" -> 
                    "0.00187939"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20", "SRString" -> "20"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"vapor density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{"  ", "\"  \"", "1.5`", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"relative to air\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowWithSeparators"], {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"molar volume\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23463", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "23463", "SRString" -> "23463"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    SuperscriptBox["\"cm\"", "3"], "\[InvisibleSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"mol\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"surface tension\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.01515", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.01515", "SRString" -> "0.01515"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"N\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"refractive index\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.3407", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.3407", "SRString" -> "1.3407"]]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "1.3407"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"dynamic viscosity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"8", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-6"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"8", "\[Times]", 
                    SuperscriptBox["10", "-6"]}], "SRString" -> 
                    "8 times 10 to the negative 6"], SyntaxForm -> CenterDot],
                     "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"Pa\"", "\[InvisibleSpace]", "\"\[ThinSpace]\"",
                     "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "25", "SRString" -> "25"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Thermodynamic properties", "scanner" -> "Data", "id" -> 
     "Thermodynamics:ChemicalData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"CriticalTemperature\"], \
EntityProperty[\"Chemical\", \"CriticalPressure\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific heat capacity \"", 
                    SubscriptBox["c", "p"]}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.669", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.669", "SRString" -> "1.669"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"g\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific free energy of formation \"", 
                    SubscriptBox["\"\[CapitalDelta]\"", "f"], "G", 
                    "\"\[Degree]\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.5306", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.5306", "SRString" -> "0.5306"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific heat of formation \"", 
                    SubscriptBox["\"\[CapitalDelta]\"", "f"], "H", 
                    "\"\[Degree]\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["2.354", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.354", "SRString" -> "2.354"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    
                    TemplateBox[{
                    "\"specific entropy \"", "S", "\"\[Degree]\""}, 
                    "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6.123", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6.123", "SRString" -> "6.123"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"g\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of vaporization\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.447", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.447", "SRString" -> "0.447"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of combustion\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50.03", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50.03", "SRString" -> "50.03"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of fusion\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.079", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.079", "SRString" -> "0.079"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"critical temperature\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["370", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "370", "SRString" -> "370"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"critical pressure\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.257", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.257", "SRString" -> "4.257"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Thermodynamics:ChemicalData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "5"}, {
           XMLElement[
           "unit", {
            "short" -> "J/(g K)", "long" -> "joules per gram kelvin"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "J/(g K)", "long" -> 
             "joules per gram kelvin difference"}, {}], 
           XMLElement[
           "unit", {"short" -> "kJ/g", "long" -> "kilojoules per gram"}, {}], 
           XMLElement["unit", {"short" -> "K", "long" -> "kelvins"}, {}], 
           XMLElement[
           "unit", {"short" -> "MPa", "long" -> "megapascals"}, {}]}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Phase diagram", "scanner" -> "Data", "id" -> 
     "PhaseDiagramPlot:ChemicalData", "position" -> "800", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n    ", 
         XMLElement["microsource", {}, {"ThermodynamicData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"NISTREFPROP"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              RGBColor[
              0.9921487999999999, 0.8385818666666667, 0.6927381333333333], 
              PolygonBox[CompressedData["
1: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
feZCrxdYchP/x5EkDfwPVqH1RA==
               "]], 
              RGBColor[0.998154, 0.933974, 0.820264], 
              PolygonBox[CompressedData["
1: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
/CCUbqzpbbh/hOUpOvN/TF8r+W44jYn/Ao44UdI=
               "]], 
              RGBColor[0.9888385333333334, 0.7798814666666667, 0.5990192], 
              PolygonBox[CompressedData["
1:eJw9k3tMk2cUh1totaWlLaybBDZuiWDYqCyDMZz4vlhEwMtSVrAbCOXS7xOk
XBMDDhghoKIyayjMjYsVhkPRFhAGCMoZsjJkQ2wUkcmGoYFOUKCgIgjsc8l2
kpOT549znpw/fi5xqWEKCxqNto3qN5N4U7bpYBvCnJg97QK1af5WDzLJ/3lL
aXGbjmK5td2V94tMSF+tMRAUqzyGfzhZ+QSpeyzsbClu3K2u+vvaDGqPeVqh
yyBhKCGsPHjgGZKOPXD1p5gWcKLv8/Q5lDx5TNieTu1/NiW2zJ1HBJ2tfI9i
5+ggaD5hRryqoIbENOpect32OPUCyuP3dJ1LJQF/xeiw0SyiJyHCyboUEkaK
431+bniO8oyaH08pSTh0rqcpre0Fit09VSVOJmHpoovI+dZLpL5+M0qfRPla
8y/fGVxCAzW6QE4i5ev9y+3r0VdI05wjYZGUz7CjVjS5jBYf3x5vSqB8j6uc
/pxfQXprbepyLPXP7OuKktXXKKWlaZ8hmvKtRdr5s9dQyyCI3SMpH7dTPSNc
R8/uCj2NEST0Wpew9gto2Ippmz8nIUFQ1qXfXE7DNj7a3q17SZC9O1O46kDH
JVHa5/m7SNDUOojvX6DjPKfG/hv+JJg89tCvulvgwLNl4x3eJHg1H+0uvGqB
J4qL7gZ4kJDjdzk36iNLTCSGvm3vSPng4afeHZb4y99Tfl3lk8ANZi9zEAMb
snm4ap0A2Z1P2id6Gfh68tPDlTMEaCIOHekMZWJHGZd2dpgA09i33qVDTKy7
WBdDu0GAl6LPnBSxAUdf2SU+eJ6ArJkXjTsfbcA7W8+8xcwloDfTLdU+biOu
NvqZt4cTwF0J9zRPbcRu2pEkkTsB0oKi6X4lCx/YtPWXiXkFaNitly4ssLDG
OGQWtyjApDKS2dls7LBv1IanVICXndBNss7G7Uc+yLtnr4Cs82LjliIrHCy4
nfiyMwHALbOGxuFgYUbMQvX+BOBqa+QjKg4eZ2frWobiQepjcGx8h4uHo33L
HqF4qOyijx2v5OIE5oFtyu/iwCT+sCLG1RqbN3sGkqOx4DUg/8K33hr/1Pdq
+vC6HLLCVJv4Ih4u4FgqmxlygIfd9yev8bB3+qnwpYGDwIqdLb3px8eyhoAG
nn8kSE2OYeXdfHwvx+f7dYkMBn3dWW2uAry4dmvujzUpZKzsmKpRCHA9o/9M
0McSsOuO0H9TL8DOTloflSEEugpS6o5OC/DpSyjUj4dBHnSskBDZ4P/y+Jvi
+L/8D8fsvpc=
               "]], 
              RGBColor[
              0.9954590666666666, 0.8972822666666667, 0.7864570666666667], 
              
              PolygonBox[{{96.74000000000001, 1.6227949246524718`}, {
               664.3490625, 1.6227949246524718`}, {664.3490625, 
               4.2953129489555515`}, {96.74000000000001, 
               4.2953129489555515`}}], 
              RGBColor[
              0.8980593333333333, 0.8971646666666667, 0.9449146666666667], 
              PolygonBox[{}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"gas\"", {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.703033268101761, 0.29618395303326794`}]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"supercritical\""}, {"\"region\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.05}}}], 
                   "Column"], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.8182583170254405, 0.9002152641878671}]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\"solid\"", {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.0734637964774949, 0.6484931506849314}]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\"liquid\"", {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.2551859099804354, 0.7261839530332772}]], 
              GrayLevel[0.3961454], 
              Thickness[0.003], 
              LineBox[CompressedData["
1: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
+D9HFT/q
               "]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"saturation curve\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.40039138943248476`, 0.4722602739726027}]], 
              GrayLevel[0.3961454], 
              Thickness[0.003], 
              LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAo3A9CtdzZ8ASSQXj74whwCiTibev
c2fAYA0YrCuF6D/GnqDSZnNnwJAq1qSKnOo/lMICGBJzZ8CwR5Sd6bPsP7hf
7ZuvcmfA0GRSlkjL7j9U3dciPXJnwABBiMdTcfA/bOaGFLhxZ8CQT+dDA33x
P2YBCW0dcWfAIF5GwLKI8j8OnUaraXBnwLBspTxilPM/fg/CvJhvZ8BAewS5
EaD0P+pJFOalbmfA2IljNcGr9T9+5KCni21nwGiYwrFwt/Y/YUfnnUNsZ8D4
piEuIMP3P5S6vlzGamfAkLWAqs/O+D/Loq9EC2lnwCDE3yZ/2vk/oLJ8UQhn
Z8Cw0j6jLub6P/ThyuCxZGfAQOGdH97x+z/GDa5v+mFnwNDv/JuN/fw/brSx
TdJeZ8Bo/lsYPQn+P7TOwEMnW2fA+Ay7lOwU/z/u0RQt5FZnwMQNjQhOEABA
CgUSgPBRZ8AQlbzGJZYAQBE1rsQvTGfAWBzshP0bAUCNXK71gEVnwKCjG0PV
oQFAfh+wyb09Z8DoKksBrScCQESRleC5NGfAMLJ6v4StAkDjiYXRQSpnwHw5
qn1cMwNAZmlKFRoeZ8DEwNk7NLkDQFrNbsj9D2fADEgJ+gs/BEDSeQ5Anf9m
wFjPOLjjxARAumzta5zsZsCgVmh2u0oFQB5YDACR1mbA6N2XNJPQBUCvpqVf
AL1mwDBlx/JqVgZAXqxFQ12fZsB47PawQtwGQEK1jxMFfWbAxHMmbxpiB0Ce
5DnyPFVmwAz7VS3y5wdAJq7Yai4nZsBUgoXryW0IQFcXL8Xj8WXAoAm1qaHz
CECg5NDyQ7RlwOiQ5Gd5eQlAG03aEQ5tZcAwGBQmUf8JQLh2LH7UGmXAeJ9D
5CiFCkBIEMpp97tkwMAmc6IACwtAFHJf855OZMAMrqJg2JALQOAJea+00GPA
VDXSHrAWDEDWXjeV3D9jwJy8Ad2HnAxAZAVXOm2ZYsDoQzGbXyINQPIlLURn
2mHAMMtgWTeoDUC2x/nra/9gwHhSkBcPLg5AggsDbbIEYMDA2b/V5rMOQDRx
i1X4y13ACGHvk745D0BYq0GrDj1bwFToHlKWvw9A1Hw1mv9RWMDONycItyIQ
QPT+w/Db/lTAcvs+56JlEECoBMmPRjZRwBi/VsaOqBBAIB+uNZDSScC8gm6l
eusQQIypP0o5DkDAYEaGhGYuEUCeZbFT
               "]], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"melting curve\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.31215264187866865`, 0.9248923679060665}]], 
              GrayLevel[0.257923], 
              PointSize[0.021], 
              PointBox[{96.74000000000001, 1.6227949246524718`}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"critical point\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.7256360078277884, 0.770215264187867}]], 
              GrayLevel[0.257923], 
              PointSize[0.021], 
              PointBox[{-187.61999999999998`, -8.775267691035456}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"triple point\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.2651859099804299, 2.0362696137702423`*^-18}]], 
              GrayLevel[0.5343678000000001], 
              PointSize[0.021], 
              PointBox[{20., 3.3875862701648884`*^-6}], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"STP\"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], TraditionalForm]], 
               Scaled[{0.5463502935420741, 0.6823091976516634}]]}, 
             AspectRatio -> 0.8, ImageSize -> 300, 
             PlotRange -> {{-273.15, 326.85}, {-8.775267691035456, 
              3.99428338758627}}, Frame -> True, PlotRangeClipping -> True, 
             FrameLabel -> {
               FormBox[
                TemplateBox[{
                  StyleBox[
                  "\"temperature\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  TemplateBox[{"\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
               FormBox[
                TemplateBox[{
                  StyleBox[
                  "\"pressure\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  TemplateBox[{"\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"atm\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm]}, 
             FrameTicks -> {{{{-9, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-7, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-5, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-3, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-1, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {1, 
                  FormBox["10", TraditionalForm]}, {3, 
                  FormBox[
                   
                   TemplateBox[{"10", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}}, None}, {
               Automatic, None}}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> "atm", "long" -> "atmospheres"}, {}]}]}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Chemical identifiers", "scanner" -> "Data", "id" -> 
     "ChemicalIdentifiers:ChemicalData", "position" -> "900", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"CASRegistryNumber\"], \
EntityProperty[\"Chemical\", \"BeilsteinNumber\"], \
EntityProperty[\"Chemical\", \"PubChemCompoundID\"], \
EntityProperty[\"Chemical\", \"PubChemSubstanceID\"], \
EntityProperty[\"Chemical\", \"SMILES\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"CAS registry number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"74-98-6\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"Beilstein number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"1730718\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem compound ID\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"6334\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem substance ID\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"24857802\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"SMILES identifier\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"CCC\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalIdentifiers:ChemicalData__More"}, {}]}]}], Typeset`pod10$$ =
    XMLElement[
   "pod", {"title" -> "NFPA label", "scanner" -> "Data", "id" -> 
     "NFPALabel:ChemicalData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Propane\"][EntityProperty[\"Chemical\", \
\"NFPALabel\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{
                InsetBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[0.009], 
                    GrayLevel[0]}], 
                   RGBColor[1, 0.87, 0], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{
                    0.7071067811865475, -0.7071067811865475}, {
                    0.7071067811865475, 0.7071067811865475}}, {0, 0}}], 
                   RGBColor[0.9, 0.25, 0.1], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {
                    0, -1}], {{{-0.7071067811865475, -0.7071067811865475}, {
                    0.7071067811865475, -0.7071067811865475}}, {0, 0}}], 
                   RGBColor[0.1, 0.37, 0.9], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{-0.7071067811865475, 
                    0.7071067811865475}, {-0.7071067811865475, \
-0.7071067811865475}}, {0, 0}}], 
                   GrayLevel[1], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{0.7071067811865475, 
                    0.7071067811865475}, {-0.7071067811865475, 
                    0.7071067811865475}}, {0, 0}}], 
                   GrayLevel[0], 
                   InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    NCache[{2^Rational[-1, 2], -0.05}, {
                    0.7071067811865475, -0.05}]], 
                   GrayLevel[1], 
                   InsetBox[
                    FormBox["4", TraditionalForm], {0, 0.6821067811865474}], 
                   InsetBox[
                    FormBox["1", TraditionalForm], 
                    
                    NCache[{-2^
                    Rational[-1, 2], -0.05}, {-0.7071067811865475, -0.05}]], 
                   GrayLevel[0], 
                   InsetBox[
                    FormBox["\" \"", TraditionalForm], {
                    0, -0.7571067811865475}]}, 
                  PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, ImageSize -> 167, 
                  BaseStyle -> {
                   FontFamily -> "Times", FontSize -> Scaled[0.24]}, 
                  BaselinePosition -> Center], {87.675, -87.675}, 
                 ImageScaled[{0.5, 0.5}], {167, 167.}]}}, {}}, {
             ImageSize -> {40}, ImageSize -> {187.35, 187.35}, 
              PlotRangePadding -> {6, 5}, ContentSelectable -> True}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Table", "input" -> 
         "NFPALabel:ChemicalData__Table"}, {}]}]}], Typeset`pod11$$ = 
   XMLElement[
   "pod", {"title" -> "Safety properties", "scanner" -> "Data", "id" -> 
     "SafetyProperties:ChemicalData", "position" -> "1100", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Propane\"], \
{EntityProperty[\"Chemical\", \"FlashPoint\"], EntityProperty[\"Chemical\", \
\"AutoignitionPoint\"], EntityProperty[\"Chemical\", \
\"LowerExplosiveLimit\"], EntityProperty[\"Chemical\", \
\"UpperExplosiveLimit\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"flash point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["104", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "104", "SRString" -> "104"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"autoignition point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["432", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "432", "SRString" -> "432"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"lower explosive limit\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.1", "SRString" -> "2.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"concentration in air\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"upper explosive limit\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9.5", "SRString" -> "9.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"concentration in air\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "SafetyProperties:ChemicalData__More"}, {}]}]}], Typeset`pod12$$ = 
   XMLElement[
   "pod", {"title" -> "Toxicity properties", "scanner" -> "Data", "id" -> 
     "ToxicityProperties:ChemicalData", "position" -> "1200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"MacmillansChemicalAndPhysicalData"}], 
         "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Propane\"][EntityProperty[\"Chemical\", \
\"RTECSClasses\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"RTECS classes\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"agricultural chemical and pesticide\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "3"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ChemicalDataSourceInformationNotes.html", "text" -> "Chemical data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ThermodynamicDataSourceInformationNotes.html", "text" -> 
        "Thermodynamic data"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "12", "datatypes" -> "Chemical,Element,Thermodynamic", 
    "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.4090000000000003", 
    "parsetiming" -> "0.148", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP128118c1a02bfeah78g000006a5689afcdfe1gic", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa128218c1a02bfeah78g000001hd7faca82cd64h94222294402565530544", "version" -> 
    "2.6", "inputstring" -> "Propane molecule"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 6, 23, 19, 17, 53.5679632`9.481479978227489}, "Line" -> 
    3, "SessionID" -> 26807338710386329787}, Typeset`showpods$$ = {1, 2, 3, 4,
    5, 6, 7, 8, 9, 10, 11, 12}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {
   "3DStructure:ChemicalData", "3D structure", 1, 1, "Content"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Propane molecule"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{132.09765625, {32., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[3]:=",ExpressionUUID->"74901a7a-0e80-4070-b10c-f1175498ce38"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     PaneBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJztnWd4lNXW98/1Ps+H9+P7zQ/nw8lzmqconKPnHAQMGWqEIFWK0obeiYQS
EkSGGgKEIC00mdBBiJSIdAaQXgJIB2EoAipIryrud/02s/LcxgRRA3fKva5r
MyGZmbv993+VvfZa/9MmvkGH//Ob3/ym1/+Vfxq0TqyckNA6qeH/k/806tGr
c8ce7dvV7NG7fcf2Ca+0+S/55SAZ82T892888cQTT0qXlKtY0Ve+UqVg5Ro1
QrXq1jV1GzUy9Rs3Dtdv0iQQGxfnc/v8PCldUi4mJqp8dHSoYkyMqfraa6ZW
vXqmXuPGplHz5uZNv9+07NDBtO7c2fg7dAjFxMZGuX2+npR8qRAd7a9QqZKp
6PMZX/XqBp4UfjRvtW5t2ggWOyckmB6JiSahf3/Te8AAXsNtu3b1uX3enpRc
gSfBJEN0t6ldv75pLBzp79jRdOnVy/R5910zYPhwMzgtzaS8954ZMW6cGTZ2
rBkyerSJa9jQ5/b5e1LyxGIyOjr8qvCkYrJJy5ambZcuJr5fP9N/6FAzLD3d
pGVkmPEzZpjJc+aYafPmmalz55oJmZngM+T2NXhS8gT9je7GnoyL8GQbweTb
SUlmQEqKSR0/3owTPILFWR9+aOZ/9JFZuHKlHfOWLzfTFywwiUOG+Ny+Drel
bLly2OYBfMWadeqEX2/YMFyvUaOw+IyBsi+/7HP7/Iqb4OdYH0fsyQZNm1rf
BjvyHdHbqRMmmInCiTMWLbJ4zN640azats2OlVu3mhWffGKy1q41k2bODLp9
HW6J9RVffTVYqWpVU6N2bSN4tPexcYsW1jZv0a6dvafN27YNx9Wt63P7fIuD
cE+5nzUFk/jdTVu1Mp179jRJgwdbO3JCMGiCgsmFH39slodCZs+JE+bw2bPm
+BdfmK2HDplN+/ebNTt3miXr1xu3r8UNUbs8ukoVUz0uzrzeoIF54623LB6J
W3SMjzddxT7v0bevtYl4bd6und/t8y7qQpyyeq1aNj5JLIh7mZCcbAaLPzN2
2jTz/sKFZsGKFWa58OT63bvNmStXzANjzP3vvzdHLlwwuwSnWw4etPzp9rU8
a1FMYpfHCk9q7KJdt26mu+APXxHbfGBqqgmMHGnHu2IXJcvvBK9+t8+/KMvL
5cr5iFE2fPNNe087vf22SR4yxIwU/Y1/M1fsx2XCk2uFE+HH89evm4eCy3sy
wteumU/PnTN7PvvM8qbb1/IsJddXrFzZYhKObNm+vemSkGBjaO+OGGGGjx1r
Rk+aZMZOn27tc3xGfh45caKd9606dvS5fR1FVZ5//vko7KEmYgsRE0LPBGR+
w5UzPvjALFm3zmwTPO4Ph83B8+fNlbt3zfeCyRsyPvv6a3NU9PkB0esbc3LC
bl/Ls5RyFSr4K4nuBpNqk3fr3dv0GzTIDBkzxqRNnmxtoKniK2IH4S/OXrLE
vqKDwOmgtLRSa5M/idR5440waznoH2LmQ+W+Ev+ZvXSpWbdrlzkj2Lt57565
dg+WfCS3ZZwSvjwpev3Q55+Dy1ITK4IriV/UEHuyrtjk4s/YGC82OfE05jQx
tJlZWdZXzFqzxizbsMEslYEdvnj1ajNn2TIzXnCbOHBglNvXU1SlZp06QdXh
fQcONMPF38mYPdvMy842G/fuNbcfPrRYvC/juwguv/72WxO+ccN8JriER5eE
Qj63r+NZidrk6Bl87g49etj7xnwGk9Pmz7e4W7RqlY1XbNq3z+w8dsxsPnDA
zvNV27dbH5L3iD73u309RVXIz6jy2mt23vdMSrJ+OLYlc321+DOHhQ8viF15
Rvjx8v375pLw5pmbN01Yfnf8q6/MruPHS5UOJ0ZJnLeB2OTEgIjz4tOgu+FJ
8Pbh2rXm4y1brA10VOycaw8emAu3b+fiEx8S/pyYmenp8nzE2u8xMdZOIkaE
Hh8ldjlzHr78aNMmE8rJMbtPnrR25JFLl8yJy5etbcnr/jNnwvOzs31uX8ez
lJjq1QPE1FgTgyuxKVmXnTRzprUf0dtgcv2ePdYnvCTzF3n4/ffWHt8j9xIf
cs2OHSYzK6vU2D8/R+DKmGrVjNiY1r4kpjFR7i/xSuKSOTK/14ru4T7uPXXK
+t+HL140R2TknD4dXrR6dcDta3jWUjk2NtBQ/G/0C74Ovnf61KnWn+G+Zctc
3iCY3Hr4sPlU5vL1+/cf2eRi+2CPawxjo+h3sUFLla55EimIKzMXL7bxyt0n
Ttj7eVl8cHDJ2Hn8uJ3vWw4eDKeMG+d3+xrckCqxsX7sSmK9PZOTrf+N7w1X
LhW/Bj194ssvzRmxv8/dumVjvchdeT119arVOaJnbNwXLMcnJvrcvqaiJD/i
Spn3ypXrZL5/KfbkN3I/z+LfiN7mfot+Ci9csSLg9rm7Lehw7hmxSuzxjFmz
bKwX/X1K7tVt4cj74i/eMf8r/IxNjv2Dr8g8hwNGjB/v2ZgR0bWKGg6uHOng
SvFl7L28Jff2hOge/JsNOTne/YuI8GVI/XDRG7l+IrhkHexhBItwpf58VX4+
LXMdXKLLV0f8cjjT7espKpKXK7GRyM+wXCm+4hd5uFLuYzg9GIxy+7yLipBz
yn2zcbWxY3NxuWLzZrNV9PNZ4cVLosM/v3PHXLx3z1wSWwi9jh4/JjpebHPz
wcqVNpZE3kuTVq2i3L4mt+VHXCk2ElwZhCtl/uZypcxvuPKEcOXm/fs9rswj
zdu1C/V+5x0zJC3NzmniQ+gafB7uofqIGr9ggEniGthEHwmGWQ8ixhnvxdcf
cWXVqo+4smvXH3OlzGm48pyDKzM8rsxXOvfsGeL+jZkyxa43EiNCP3/y6ae5
sbXDotfxdcCo+js7jh2z/jgcy+fcvg635QdcKbZ7T+VKuTdwJXFf5cqTHlc+
kbTv3j00ND3drivCmcTLWdcBm9xP4hfEheBQ8lvA6sHPP7fYxB4lVuz2Nbgt
ypWsoVmuTEmxXEkuG1x5KR+u9HJZHy/Va9XyEzMit598jJmR2Dr6mRgw9xUO
JQ7MPEevHxX+3BcOW5xy77v17u13+zrcklyujIuzaxWWKydMsFy5LD+ulPu3
+dNPPa58AsHWJKZhcyxFr/P63vTpj3KJliyx3Ii9iX3JfSW+Qb4LHEre/5S5
c0ttfP2FMmWC/ylf3nJl2whXTohwJXP5onLlzZseV/5Mia1bNyo+MdEERo2y
MfZe4g+xX5RcQXwh/JycU6ce+UGCyZNw5hdfWHuTv+Gby+f9bl/Hs5bf/e53
UX/84x/N3//+d1OhYkXTzO+3e3cex5WfeFz5s6RZq1a+d4YNM6MmTTL95ZV1
8/Rp0x7Ne9HnO44efcSZgkfu7wnlzBMnbL5/n6Qk88ILL4TLlCkTevHFFwPy
rAJuX9PTlj/84Q/B559/3pQtW9ZER0eb119/3TRr1sykjBlj/Z0Lwo95uTJj
9myf2+dd3KRVx45RosdDY6ZOtWsVxJDwa5j72JLkGOCfH1c7U/S6cmbSgAGm
onDGv/71L/Pvf//b/Oc//zGvvPKKefnllwNuX9fTECdXcq3Vq1c3b7zxhmnT
po3p3r27effdd81RmcseVxaeiE6OElspwB6fMZMn29wsfJ/tR45YfxzOPBnh
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
ADUTUtLTfWkZGYEp8+cHxAYILlyxIqR+j8Wt+PRr5bvWReqBZInvoz2NwRED
3QtewA06Fwzhl2tPw4L6bKK7sRvhQL6H34NdYuvgl2OAe/rOal95jsHv4Uz5
Xp/b992TnxZy51InTAgR1yG/Ez8bXY0Ps/vkSRu3FA4Mz83ODjzJ94FbehSk
T53qnzhzZmDmhx8GMz/4ICT+Dr3rcvtsYlvCYdrTmIHedvbKdvZPUP0NT2pP
PDhV+xiq/tc1Sj4Dj6pNC4bl2N56ZDGTxIEDo+DAzKysoHBnaN2OHaFFq1YF
p82f7yvM42DbEt8WHvTTb1P4LkCPO9HNYfxuYuhOHa716fFZ0MNwH9yKvneu
nasPr30M+Q7wq31v4Wf5vLfm48nPFuE8v7OHu7M/F3YlXAkuiR2xdu7s/ar9
NZUz8ZuIv7MnF1xiM7R6xrmjnpQcAZesgWs+ELjE33H2M3T2MXSuWTr7ZWt+
B5yJjSmvng735BeL8J0/P1wSeweX+EHgkPVKZ79s8j3AZAw5mGKbVhG/CTuV
tUo4tqvYt25fmyfFWwRPIe3jTtxS+2ziN4FT9DZY1J7Ef5P/x+C/5+nFxagr
OOZz9ju8Xu6e/EoR3zyk/rj22dT+r3Aj/g46vKzo7uhI3w76IVEvj9xkcj9b
iK9EnYge4v/z2QH05vH6dnjyK0T0dJRwZghdzjoQcSLtswmXosv/IX4OvWRs
nwTR3TXy9COGL9nH2SUSk8rIzCRPxdPnnvxqETszwNo48UhiRaz1oMvhzFcj
fYgrRF5tHXBnz9cIZ1KLLDB8uM0rJfcZrLK/4/WGDQMxXk8uT36hiF9texmy
Pq79iV8Rvx0c0r/Q2fPV9tWkTnikrya5U+zzJCef9QJyR6n7BJeCWfLoG775
ZsDta/SkeIvgM6qh8FztevWCNSK9uKIj/YjBKHuXtE49NcFtn2yxTck3XbFl
i90PQn0yck/J9aPWKDUfBbtezrAnhSL04sLfiYn01cT/qRKpZUNvBeo0sOeN
fXD0iiPXlPVVq88XLLA1mW2/OBn83LVXL5/b1+RJ8Zc44Uz4EZ8HPV5R/R/2
EImdGRvpCYufzp4m+JN+Hehz8qDZ28lgPxJ7kdg/5/Y1eVL8RfwbP3084Ej1
f+BMehDzMxjl77UjcU32tYPNNsKd9JpjPzJ76KjxyD4kcv4SBw/2u31dnhR/
ES4MO/0f2/NVXnP1OfFM9HkkbtRCbE36yLVkvV1sy6UbNtg8KvY30R9p1MSJ
np3pya+W1xs08KO3LV9G+hDjC2F7gkk4kvoN1FugVxd1HNjTDibJ2acGE3mi
5Iziqwt/evFNTwpFwKX2x4Y3wSR6G58HbsQXB4fUB6e2CHn69I3llToM1BjB
5iQHf8GKFR4uPSkU0dp0cCY+DhyJD96he3dbJ7FfpC44MUz8G2ouMOiPRN0F
9t+x/x1srtm2zcOlJ79aylWs6MvV3YJJbEntzQU/vpuSYrE3Rnxu4kT06cLH
oVYIPMm+O/xx8vXZvyS2ppc77MmvlvKVKgXVx6H+IWs4rIdTIwkepF4idRLZ
w0QdEPYkU2uBvobUW6BGyPSFC219hz0nT+Kb+9y+Jk+Kv/iqVQup3611RKgF
RiwSHqTGDXGg+aKniVluzMmxvZDYF0e9BeqDfCC+OHH2dbt3ezrck0IRcog0
t406h9TbZl88NecyIv3a4Ufi6ex5v3D5svny5k1z6Nw5u6+Yvcbs4aR/0sCU
FJ/b1+NJyRCNTzYn16hXL+tja2/szAgm2T9MH2LqMty6e/dRzaVvvrG1wdjj
zv53anwOSU/3uX09npQMIV+NeBC9CqgV6+yNTU1EeJL4D/vi6Z95/+FDi8sL
N27Y+g3sQ4ZHiV/GxsX53L4eT0qG1GvcOEguG/0ziAeljh9v9Tf+DJjceujQ
o/p0X31la35Rdwlcnrt929Zt4G/sk1+7c6dnW3pSaMJ6T4uIDs+tmxjpXbhp
3z5z4do1W5/ugYy7332XWxfs0p07ttfrkYsXzd7PPjPZmzd764+eFKo0b9s2
rD3bqcdNvwLqxlKr81qkXqLt2y7jAT9//705I9xJ3SXq3BwIh036tGk+t6/D
k5IlDZs181lcpqRYXGZGehCz7o2vQ026c4JDsHjh3j1bn872bL9yxdZeEvvT
40pPnoq079o1yJq39iamd4GtAyb2Zc7p09bncfbGpm4i9uXO48c9u9KTpyrx
iYkB+mPQMwNfnLi5rRXv6I1N/URqJlJjdteJE96aoyfPROIHDowaNXFiGN8H
zqS3C/HzHUeP2pgQ3Lnz2LFw9qZNAbfP1ZPSJ9Q7TJsyJTB76dLg4jVrQtkb
NwaXrl9faL2xPfHEE0888eRZyv8Hlc9mHw==
        "], {{0, 0}, {166, 129}}, {0, 255},
        ColorFunction->RGBColor],
       ImageSize->183,
       Method->{"ShrinkWrap" -> True},
       PlotRange->{{0, 166}, {0, 129}}],
      ImageSize->400,
      ImageSizeAction->"ShrinkToFit"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Propane molecule", {{"3DStructure:ChemicalData", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{3.896554657740714*^9, 3.89655472292957*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b4d87548-e940-406a-b46f-58e6b716312f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Last output cell", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 
  3.89661812307841*^9}},ExpressionUUID->"6055b929-8ed5-48c3-a199-\
b132800b876a"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9},ExpressionUUID->"f60b91e1-3f9d-41cf-8866-\
ff8b73fdaa30"],

Cell[BoxData[
 RowBox[{"Total", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8966182090687*^9, 
  3.896618238952159*^9}},ExpressionUUID->"7e2b1202-ed76-4988-bf76-\
c968c0833ca7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"=", 
   RowBox[{
   "Visualize", " ", "the", " ", "table", " ", "of", " ", "values", " ", 
    "for", " ", 
    RowBox[{"i", "^", "2"}]}]}], ",", " ", 
  RowBox[{
  "where", " ", "i", " ", "goes", " ", "from", " ", "1", " ", "to", " ", 
   "15."}]}]], "Input",
 CellChangeTimes->{{3.896618310717902*^9, 3.8966183351028996`*^9}, {
  3.8966184881205626`*^9, 3.8966185055255537`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[5]:=",ExpressionUUID->"6d2dd7f5-9501-4a14-a2fd-31ed4b034569"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create a function", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896636260624796*^9, 
  3.896636263408591*^9}},ExpressionUUID->"c4dfb24a-45c9-400f-b116-\
23b8c944ea9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doubleIt", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "*", "2"}]}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9, {3.896636274679034*^9, 
   3.896636318772581*^9}},ExpressionUUID->"b4fa2994-a8b7-462f-bbb1-\
e6fd782b588d"],

Cell[BoxData[
 RowBox[{"doubleIt", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.896636297619831*^9, 
  3.8966363172230577`*^9}},ExpressionUUID->"ce96a52e-f033-4563-b3c4-\
ebf88351e5b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"powerOf", "[", 
   RowBox[{"x_", ",", "exp_"}], "]"}], ":=", 
  RowBox[{"x", "^", "exp"}]}]], "Input",
 CellChangeTimes->{{3.8966182090687*^9, 3.896618238952159*^9}, {
  3.8966363666395073`*^9, 
  3.896636412654977*^9}},ExpressionUUID->"61c2dfa0-197b-4a60-bf47-\
944740ca070b"],

Cell[BoxData[
 RowBox[{"powerOf", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966363946874285`*^9, 
  3.8966364114903855`*^9}},ExpressionUUID->"94ce6fca-a22c-4a64-9cbf-\
15353c8ac2c0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8966364090451794`*^9, 
  3.8966364090502253`*^9}},ExpressionUUID->"8b6aacf3-da81-411d-ae2b-\
9eb4cbae3757"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrices", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896637007660076*^9, 
  3.896637009243872*^9}},ExpressionUUID->"eb4db081-f279-4149-9139-\
bb99c32ccacb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "8", ",", "7", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9, {3.896637016098863*^9, 3.8966370629629307`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1d0f40c8-30a4-48fc-b81c-966e8845a8dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "7", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8966370709496365`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"cff24c36-9061-4a62-a0e6-b53b1b027f8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "amat", "]"}]], "Input",
 CellChangeTimes->{{3.8966182090687*^9, 3.896618238952159*^9}, {
  3.8966370797970085`*^9, 3.896637087692565*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b754b86d-78f2-4688-a378-edca045df1ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.8966370892065525`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"38bd4f56-3ced-4f25-8893-be59e6997197"],

Cell[BoxData[
 TemplateBox[{
  "Det", "matsq", 
   "\"Argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\
\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\"}], \
\\\"}\\\"}]}], \\\"}\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is \
not a non-empty square matrix.\"", 2, 50, 8, 26807721551325502438, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8966388572551045`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"4518d2f8-e800-4c72-a4d4-61775c2f8518"],

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "8", ",", "7", ",", "6"}], "}"}]}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8966388572801037`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"26a0906d-00dc-4e52-b4e6-ffa28b3574d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bmat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966371000847273`*^9, 3.8966371333851767`*^9}, {
  3.896637167556698*^9, 3.896637178467637*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a368c2ea-a050-443c-bfef-5ddedc05f8a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.89663714270234*^9, 3.8966371805693364`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8a889901-d0f7-4b7b-bab2-40f36d4beaa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "bmat", "]"}]], "Input",
 CellChangeTimes->{{3.8966371472578545`*^9, 3.8966371519288654`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2dd62be0-221d-420c-b531-9abc9b5a1311"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8966371538866935`*^9, 3.8966371861046906`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"09ac969b-255d-4ee0-b806-36b7b9d071b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmat", "=", 
  RowBox[{"amat", ".", "bmat"}]}]], "Input",
 CellChangeTimes->{{3.8966371921112566`*^9, 3.896637207272106*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"724eda57-a93e-4e18-9639-705d3c94810a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "19"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8966371988374925`*^9, 3.8966372094908624`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"f3e949af-db56-432f-82cc-aaf266da1cd3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "cmat", "]"}]], "Input",
 CellChangeTimes->{{3.896637215607462*^9, 3.896637220648633*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"da7befb4-64b1-46e6-b0ef-54f216d6b2cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Input",
 CellChangeTimes->{3.8966389023180065`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"f9d4998d-b3ec-4388-a7ad-1400ac76cef0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8966389023712616`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"7a0a32eb-8b24-49e1-9fe1-db9b6ce21367"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "cmat", "]"}]], "Input",
 CellChangeTimes->{{3.896638904987034*^9, 3.8966389079537373`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"ba2b72e9-c892-401a-b5ad-55f128f292c5"],

Cell[BoxData[
 RowBox[{"-", "170"}]], "Output",
 CellChangeTimes->{3.896638909156525*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"13851e7a-80c9-41bc-bb88-eca97089ad7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmati", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Inverse", "[", "cmat", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8966372260643883`*^9, 3.896637233078429*^9}, {
  3.896637289393007*^9, 3.8966372910693398`*^9}, {3.896638945387023*^9, 
  3.8966389483249893`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"0216e79d-cc78-4512-8520-8b9f0691b269"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11176470588235295`"}], ",", "0.06470588235294118`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07058823529411765`", ",", "0.011764705882352941`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896637236607276*^9, 3.8966372929748526`*^9, {3.896638202928361*^9, 
   3.8966382424303455`*^9}, 3.896638949384096*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"e2f6314b-2974-4f7b-9a40-aaf2d648738a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"cmat", ".", "cmati"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966372997081957`*^9, 3.896637315780059*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fc2a36ed-95aa-4cd4-8c53-d9fa3d17dd92"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8966373048019967`*^9, 3.896637317152793*^9}},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"6a015d42-e8d3-4308-a5b4-\
f4c6a98c875d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmat", "+", "cmati"}]], "Input",
 CellChangeTimes->{{3.896637407481142*^9, 3.8966374176162944`*^9}, {
  3.8966374617976065`*^9, 3.8966374731229544`*^9}, {3.896637846215715*^9, 
  3.8966378495849266`*^9}, {3.896639018797734*^9, 3.896639054277377*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f95972d3-4be3-4278-8587-e67ecda21a35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.111764705882353`"}], ",", "11.064705882352941`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"12.070588235294117`", ",", "19.011764705882353`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896637419471941*^9, {3.896637462790435*^9, 3.8966374740534487`*^9}, 
   3.89663785182764*^9, {3.89663902169655*^9, 3.8966390563026304`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"42c8c818-c071-44d7-9f42-b0680c7f328f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TypeOf", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "21"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8966378703323603`*^9, 3.8966380558726215`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"47451e5d-fe1d-44ed-81e5-d4d6a4a7354c"],

Cell[BoxData[
 RowBox[{"TypeSpecifier", "[", 
  RowBox[{"\<\"PackedArray\"\>", "[", 
   RowBox[{"\<\"Integer64\"\>", ",", 
    RowBox[{"LiteralType", "[", 
     RowBox[{"1", ",", "\<\"Integer64\"\>"}], "]"}]}], "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.8966379720701327`*^9, 3.8966380570382586`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"55154431-b5a5-4380-b5ef-3f76d838202b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Referring to matrix rows and columns", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896636260624796*^9, 3.896636263408591*^9}, {3.8966383907905164`*^9, 
  3.896638394917861*^9}, {3.8966385994214935`*^9, 
  3.896638627218012*^9}},ExpressionUUID->"d529fb8c-32fb-4e25-b533-\
020be0b96b3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", 
      RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966181764913073`*^9, 3.896618198657501*^9}, 
   3.896618236405232*^9, {3.896636274679034*^9, 3.896636318772581*^9}, {
   3.896638398998406*^9, 3.896638438296329*^9}, {3.896638638963355*^9, 
   3.89663868141145*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c92c7fd8-8500-4e02-93fb-5f6dbc7ab247"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896638686577357*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"ed0a4d16-5ff8-47fb-8819-3955aaa5db29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896638694532045*^9, 3.896638700437766*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"e14284a7-9d2c-470b-83de-6105f98cad8c"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.8966387018226175`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"cb955cb9-224b-4175-8b27-5318ecf9b5c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat1", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
  RowBox[{"-", "99"}]}]], "Input",
 CellChangeTimes->{{3.896638712038611*^9, 3.8966387237220397`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"66e85a9b-672d-453a-9232-879ce7012ab2"],

Cell[BoxData[
 RowBox[{"-", "99"}]], "Output",
 CellChangeTimes->{3.8966387248087626`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4866919c-b781-46df-8ba3-66b7a1d170d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["mat1"], "Input",
 CellChangeTimes->{{3.896638731319213*^9, 3.8966387321105757`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"68448ea7-6dfb-429c-b75d-d62b82b63f10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "99"}], ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8966387327317014`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"b47439e9-faab-42f2-98fc-8970d3c95d83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot a function", "Section",
 CellChangeTimes->{{3.8966181182190475`*^9, 3.89661812307841*^9}, {
  3.896636260624796*^9, 3.896636263408591*^9}, {3.8966383907905164`*^9, 
  3.896638394917861*^9}},ExpressionUUID->"8542ea68-0361-4cb8-810c-\
c3c0295082e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "x"}], "-", "7"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896647695994584*^9, 3.8966477089913225`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"96691166-fa48-40dc-b098-403bcfbf7d95"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H801Xccx3HEcrH8uG7cG+7lI+73tkuhK1+2+05Mp1w1oh3ard1Yjt+r
jhT9MErUKhUW7obupHNTTmdJndZ9L4qoO0uYtFUUYZXrR90su2tn3z9e5/Hv
66+nqyI9MsHEyMhI9n7/uXtYNmEwEPxfGoey50/3vyOMNEbYPHpz+S1hpFEQ
kDGbPkkYabxRdNz88RBhpNHcq9cF7xJGGk9u37R6XwVhpFFtvE1l5E8YaTRL
CPPhfuHGGIDs32+m1BS7Mi7DyObyzVS7gNEfs199nHJskI/X37hI2nQSbNpR
nnRhjQs+DJRd6vWUYMTxaME/p5zQ87bIxhC+FMOUP0es/IuHKq3c0z3TD2tb
d/Zsi+Ni12DQ2JV6X5Tnn+T8WueA3sHtRVvu++CeTXPOW7Lno7TBuHc/yweN
xHzNiv32uK/06KPq4CX44NCpAnW3Hb64eae5O2kxOlkknp0KtmX0xuSlIrN+
J2ts5JV8k3pEjJv9/6xrbrbEiwvS7z95sghFWbQhTWWOnCDlXv9IEVb/EdWy
c7kZdr6kBq5VCXE4lxMU5miCU2jxPbHyxKslwtDnMbOatIWrbK9GL8TFI31T
3srXmvBdktnVZwiGXO1nzcaMa4pfZgZrOG6YcfaC3pY9qPGa5kgVCgHGfEWq
7+Xc1iRI7ER3y5yx9U5fkW9Um9Rvc2TrnV08pMW/XFxbNii9+NOarkU8BzTJ
5DyM545LDSHTxbJJNs61WpurePla+u7teo32oA3mPe5ZsfX0rHQ3n7r27QYL
bKg4sHbPhDFUtU3I5ywwxfSaeJunMWYQkpl6PV01o5EnlTsX5JqDTf1H7NbJ
MU3hZ5kBvpWWgMrkmiWTTRpT+5KhvTPzQFBV52foGpb2duwfz7e2hSa5V75n
jl4ana2QlDfbwboXhX2J8+ZAiuWYmzbWHhrE5w4tS2YBX32r9INRDuSc48Xx
6qwhu2lFlHWFA7zOKKh1kbAhozalUeLNhcfhfSmp8vlgZeKv8HrGA0fTtJYN
7VwITV1XIjrhBEUP6kTRHs7geMU5PdTdhVEAx7ceLF7cy2d0hcgDa8TKRgGo
rH6IpVMJiOLyo1W7XWFdo7l65d/u0DPEqjkR7Qbn7rJDPNUeoFU8W27HJ1B5
sz3P/RMhPDE9oy9xI3CDFaFbFCqEqdrEC1wPAs9lv8l9w4XAHRtzchUT8Onp
DQiOFUL8tok33oEE2oaevtqYKYSZPEO9bD2BqbmGuIrzQvD4kcsrPEogfJWv
nx2fgoCw/k6rEwS2Hmms5npQED5SWXCslMB39wKsXcUUfC0WTJcpCQzEwqh3
IAXXLnl01qoJZCXLqmTrKYi85XugpZWA6vAWq8KjFCQkTget7CDQ3jm681gp
BVkWlyc7tATG7dOGy5QUKCPoL7u6CdDK7Tdq1RQ874GggUECnfW5WS2tFMxk
mUwmDL//qzMd6tBS8OGClrMjowR4koNRXd0U+GwMc9DpCMRfP+I1MEhBqDFL
u32aQJGJXeXIKAWfn27P1+sJNHxawtLpKEgKPRyY847A/SLHHXo9BUy/YEZb
8dRgoOBfg1k+Vw==
       "]]},
     Annotation[#, "Charting`Private`Tag$164587#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-26.99999918367347, 12.99999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.896647710511407*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"38fd88ca-439d-4346-ab2a-5a58affe6ce6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Plot sin(x)/x", Typeset`newq$$ = 
   "Plot sin(x)/x", Typeset`chosen$$ = "Plot[Sin[x]/x, {x, -9.4, 9.4}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Plot sin(x)/x", 
                  Defer[
                   Plot[
                   Sin[$CellContext`x]/$CellContext`x, {$CellContext`x, -9.4, 
                    9.4}]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Plot sin(x)/x", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x]/$CellContext`x, {$CellContext`x, -9.4,
                     9.4}]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[73]:=",ExpressionUUID->"100c934a-0a32-4540-9c49-e6f3d911bd55"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
X/rrWh3JXFM/32VSDmmx0pNLJOrJyqPzbvVsk8fZySGl+x/rSdMOZsEjT3kc
CJnj4jZdT3aDXnXEYXk8d8PbuJn2gkTLrOnTPCuP0gPqL3usXpCX9710fYvk
8eq7RSbP770gRd/fvwuVpOBaJT3WlV0NJND5X9RHeQpqH1s6WRbYQAzLtZds
mE9BQ6bSi2uxDSQr9kjsfC0KKnxri9lR3EDStMRWFq+m4Jn1rqqK0o1ke5x+
v/o6Cu5Num3zjNlIFH84XI22paB3S96g4GIjl6vShpxcKOjAbamtc20kkTuX
pP08QkENt9CZwKxGYsHetn5XCAX7Up3Yic8aycyCUz+rwyj4R3tngi+3kQSP
1W28ep6Cl1LyS+m8RuJ3xfW30R2BvvS86BYjDtGZiMhKfkDBw2nWJsHAIb1u
953+PaIg64hDPmczh7jq/8htqaDgzHrrA3GHOGRzXYzb4XYKqiglzWy/yyHS
BnkSb7somPZ75GfMYw5piH9VtLqPgq8dzBJ9qzjE0kNdVmaUgqVy9zZavOMQ
k9+PK3Mkqfg5afSHlRiX/PB8t59GoaKNZlCqKIVL8htm552cT8XE1F+DIapc
sjBpg7+tFhWfVY9KBBtyiZpxN2NwNRV9lON02xy5pCNZmOuwjopbfyz+auDK
JYl/dUOf2lIxxjHt4Mp9XCLXdLQ1xoWKVUuP7vM/yiXcpSmneG5U7LL30ko+
wSWxqZW6LvuoaL5pkXVwBJcI+0pE6ARQ0cklZvOmS1xCmhcbXAqhopd84LkN
CVwSZuLUMRZGRV/N7trJFC4xu3482i2Kiov33Fnins4l43PSl9SeF+hxUxwP
vcMlhX41XYv+R0V34anVNtlc4t86GJuQREWl+ZeWteRxyeCNZZ/33qHiMub8
rt9FXDJX3nXC/QEV3zqGLPEr5RLtyDPSOx9RUeiE9ZbEci5Z++sBy7mYir/F
LntEVHHJHu9Xyx3KqehdWBhjUC3Q925q48ZqKr7T8h9MqeGSNFuWh/ULKn5P
fJ1bV8clpeUbjmEzFTvDbCcLX3BJ++IjceZvqBhsmvDDo5FLxm4l3TJ9L/Dr
fn11K4dLaLSqIuOPVPzZu+XKPy6XLInubzTop6J4+1jkaBOX2E/IfNQdpmJl
P6c6s5lLDviZjGn+oCIzGUPntwj87XSVZExSMX6pMtdOwPc3RTFU/lDRzdfv
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

       "]]},
     Annotation[#, "Charting`Private`Tag$163682#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.4, 9.4}, {-0.21723355372267017`, 0.9999940102105066}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8966442758914623`*^9, 3.896644301370151*^9}, 
   3.896644403331836*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"a7b9aee5-4404-4891-9587-f5319ef068cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Plot sin(x y) in three dimensions, where x goes from -3 to 3 and y goes \
from -5 to 5", Typeset`newq$$ = 
   "Plot sin(x y) in three dimensions, where x goes from -3 to 3 and y goes \
from -5 to 5", Typeset`chosen$$ = "Plot3D[Sin[x*y], {x, -3, 3}, {y, -5, 5}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Plot sin(x y) in three dimensions, where x goes from -3 to \
3 and y goes from -5 to 5", 
                  Defer[
                   Plot3D[
                    
                    Sin[$CellContext`x $CellContext`y], {$CellContext`x, -3, 
                    3}, {$CellContext`y, -5, 5}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Plot sin(x y) in three dimensions, where x goes from -3 \
to 3 and y goes from -5 to 5", 
                    Defer[
                    Plot3D[
                    
                    Sin[$CellContext`x $CellContext`y], {$CellContext`x, -3, 
                    3}, {$CellContext`y, -5, 5}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[72]:=",ExpressionUUID->"dd0d3f70-d2b5-43f2-877d-8f466515c519"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3ie8lPxYq8cJ/1T9JFaPEz5X8md96aspFj9PlltfEPRT4/tgsq0j9DPj450R
1u9Ev0zrxTpCv8rRWx8R9MPUJ8P6Qn+3G4/1F0Ef0bpbnS5RDqH/Sf7N+f+G
k3eq7uKLsG9Z9NnEx/xP4Qu0XuD0yZxb/s8de1aGdSjoM0gfwK1fSPpp/qfo
J0jfrM9ZeE7NF3r45NI4rf9Z9B0lT/Yp9Nul/9YXLfpvtF7oA/LJpvGjD9D3
cfqQjD7A/1vxsT5q0f8ifUMfoP9duPVXi76L9Jb9C/0e2Rnzb0U/SfYKHPp8
2hfsU+gzyY6BQ19f9pB9Cv3fsrfg3rrbPoX+quJNcOifLVv0+ZceD/umkPMD
6sNBP+kLel7xI/oJ/Z0uzjV/DLyz7BLnAvj7sm/oFTh6iD6AF5C+se7gx5w9
T2afgueVPFlH8HHq/2H/gjeQnFlf5os/gH2G/j2da6wv9PiH2GfoO+rcZH3J
uxKvYZ+hL6G4gPWFf3/FfdgZT/6W/7H+MfljrC/fLZXoVxiew+U97HynTymH
i0/tHId+qxu/4dAPVbzA+kL/hvQB+wBO3wv7F3yo/Cv2Kfh0+WPsa/Cj2o+s
O7j5ddITxom/gT5Ajz+PPkAPzvpC305+LOsLPfEg6ws9fWKsL/SZlQdgfb11
sfWFfo3iI/Yp/U79FGexvuSxJ8qfZ5+Cs+6sCzj9G6yL8dG5gH3mu9oXtl7Q
R2UPWS/worKHrBf4ZO0j1gv+Pby+R+ivq1+R/Qg98R3rZfSKR1gv6In3WS/o
J6lPj/WC/k7lDVgvT85mb6F/X/kK9iN5+F2JcbThP7n8p/m34Gu17zh/6b9i
HVkv6HW+2HqRD39A+RzWC/pisp+sF3hjz06C51K8zHoxHuIF9pfNS/sCPtB3
0z5ifaFnXVhf6M9rHVlf6Mmzsb7Qg7O+Jk/ll1hf6Mn7sb7euth+hL6il1dE
zrOU17I4yOU/bd2xk9DfLHtrdWrR3yW7zfpCv1B+IOsIvkt+AusIni4/gX0H
vl7nC+sFfl35E6tfazx+PyH05D9ZF3DkaXGK+CB/1gV68rcWp4genHXx5Gzr
Ar1f16C/697EfLLVfcC9ukZAftKrRwSqR/j1i0D1C78eEage4dcXAtUX/HpE
kNnb19CrjuDXHQLVHfz6QqD6QtSrLwSqL0S8+kKg+oL5yfC507Pb0JP/8eoR
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
w75xne85dD/a3leRntyZoVq7lO8227zgU9rlQyLoLeNv9/m8lZ3rn47gj2F/
stduVTxSJi3aRv4DeFB42NW8G5fJfobvkLdSf8LeOL7V8NbN82W4t+tp6fOc
VPi4v9clb3T0ZveufZT0Wuv+p6NbZPfAX+jW650/Jk6PtI6P56zhr41OP/lu
x9P4P1aviamv4HadF+Bz/yharNiL+8z/pK56atnCT5My/yo7eM3e697V8K5y
2edus/GD++MHH9z3xMI1H4XjB+908OmzcwbssO+izz0q31L9yYmnI8gZ/IMP
C23rM3WBfRfc/b3Kvguesv3ar1XLnrTvGv7F/rT+449HkRt4+X/yvXnbzTNs
3dnXgzvtmvhilYNRvgvu/l5m3wXf0WxIztsPHLHvgh95KuvcRaXS7bvgY/dX
XVntyiGTA+fXnox5fxqQfMD0DfyF0a8MuK3Vb1HWBfzE7btXNH9+VwR9A690
btLJ94rsM7mBu79jNn7wBxy9jRO8cuZOE27+v/NI4ySP8VzdikPu7pcWQf/B
i+d7rl+5R8Lvgru/f7Pvgg8/vuSWcUfXmdzAe419bNertcLxGP9Lo+ZO/O+I
jYd77u323rLgRuREMnID7xMtsOLG+0eSkRt4yui8G29EDyQzTnD376jHGCd4
zfj//69Uxgnu4onVqYwTvGf8u1tSGSd9sy86uZle2XvXTj6pfBd8oJNPhO+C
55Sc+S74zU4+ps/4P7OcXtn+As/xQ1yvTH/Ay0sfGCe49MfGae9/St8YJ3iv
dWXLDf37pI0Hv2vr+WcrpnU9aHoCrv1l/MGbP3Rg0Krvjxh/8KNuf5kcwH93
+8u+S578VWdnbH+BX/kgbmdsf9m703syZM8x+piNE1z2x8YJPszZHxsn+Ehn
f2yc4NPOxu2P6TP9EhkKV/xw5ehJNk7wDV//nLvNw6dtnODjnX229TI+zj7b
OMEHOfts4wTv5+yzjRO8/pMXP7lyR9hXSb59yO3jO/42/ZTpFfi6W+Lno8kN
3B8P+HV33tl4rC+0a/y8MzsA/oY772y+5EPc37uNP/jrOn8Zf/pXebbceP9/
8X7/lG9yJR337Dzn8g6zV2dEX7XQt/fVeDa0h+fbF62dVCt3bGSLfXfOOrzY
+HybcD5uNT4XRX+h0/5fKqelGR/3rm722MTRDe4q2Oq0Z7ezYc+MTy7R94s9
csvO2qeMT0nl8Xp07Vu8edetNp7FCefXWuNzl+h/39r5vse/PGpy3i2/MWOW
9Gyd391p/F+P+6WXotvLLLi6bvUR08ODcX/sv+iS7C80+fbZ6fbd2QnnTnhe
dxGf5jVbtZy6NPRDyir+Xrzm7h03NT1hcliQcI4sMj4VRV9md/eZDYpvCM99
3Y94Mnbiw9YvhXm2Qrn+j8/saNmR/1dfXm384/98cFT2f7zxbyv6H0bVzXZX
y+9NPmeU5yx//uzpkqfWG/8ycX07GAmkJ7YfE+z8CNPPEqKfNLv+wq3BmtBu
KE8zp/3YTxpO3m56e9zlBSODdk2a/PDKLTb+HxLs81jjf0j0M5O6tbmnyl7j
X0b9jeOzbhpYqfJx499S+dUbRT/qlWVDaPfmJdjnVOPfQvRLpzaavDRPeO48
6+KRYPyr0178vPMJ7xzBfi4yPs+I/nCN7JkGlztp9ucz+ecPf9Pp6TbjVhj/
R+Lv/twc7LhY98ebKm0wPXzX5YuCx3M2+bZm23k2/qEJ9jA8Xx4Wn28afpy/
9QNpxn/o1dyvJS3PF0wY2D910vV0s2+tlO+q+lzlmzosWm7zSk2wb5uN/xDx
WVO58vmsZ9JsPBUS7NVOo8+qePOt3h8/eKFb6A9v1f1BvdscnlOqU2Q+2LPA
g9v3RXYo/9BbeYNNqseB9xS+lPtoTs7RieKTdt/rjYa8fywK/qzi0w8vRFdm
KHba9H+86PPdH6fnXQvFfQViG1T3B39X+BjhdRR/ThKf0wfi4zec754t1aLn
9bFH7Bx8RXnUKXpPADlUiOcF8sUmFBmbZ2CtNJtvHuVtiuo9f/AcwusLZ74V
xadfja+rTDxw2vBJ6uN64alnat5oFMqB7/Z09CaHvOIfqA4Lrrpz7H3hzJfv
TnXjNzlM1HdTWkwb2mb20ShxXLrOkS3L5l/+Lf9vpic7lEdt4vLeJp8+yqNO
2NZjW41Lf5gcktSX9Zt+JwK8hHB+PwK7sV38p6ueyLxK8/vXut8Brng8NlM4
4zzDvSi9B2L+jPK3q1/vnV5gWjieKsobdFN8Df6I8JeEs17fiM/o3ZVavfrd
StPzrTrX1u3rXeK9kzvMHpIXbK/3olnfL8Tn5PC4/bH5Pq7vdlU9HbyCcO7B
sY4jxGe5m5fhWzhnm+fLVCB/msknl/KELd17lTbf0erXClSXB/9aeF/hzLe5
5Hpi6tAX79x6wvDtOq8LnL/68sEn0kwOOfTdbXp3CDlQN7vu+Jgcxui7vM8G
niJ8RGL/VXCb8jElnmp8bnuP7TbfSqoHTdK7NOiDs2P/RPvsrdz7yeCEzXe5
8uXF9Lse4FHh/N4H8/1IfMotLv7t4v5phrv9+D97Wnr5V4f6nLI46D/V33br
3MRuT0jwZ8YmQ3+b/JAk54dEsOdp4hN1fEye72o8d7vxmNxWafz8HhN4auJ8
zT58LD7tnXwMz6J55Tv8+/YsudNsX8Ti67Ir2jfHQ8NLbdljcvhT/sy5c3F/
xuL6LaovXZcfgp6kCt/kcJvXZ+L/1Mftauwcs8e++6Xqv8scf8Odn7wr0kj0
fHeh/J9D4s9356jfr170z1Y9iiwwP2GZ+Gd1/pjp1TD1AXbQvkavtO6RPJIP
+vO76hvcE/H0KlJcOOM/V87xqeH0x3DpbeQ+rS96ksPpSaSw/FX0akqCf7go
Ffqz8t/WS3/MbxefYtI35JBL80Kf0Z/fEsdvOPUc9gv6c0bzKu7kY3gfzYv9
iJy1ryOVtK+R22DVC+bIDnj2KtJbOHJb6+xSpJizS4Zr3SIXZH/Qhzv1Xd7H
Qw67xKeQ7BvzHajvrpCdBB8hfIBw5tVL9YhHzpfZ/diJk2aXdI4E59U/wLzK
K8/8lOy/d04FTYUzrw3iU0dxlu0X+b19dO4w394az0vuvUGb7zbx2atzjXk9
qO/ep/MRvKLwxsJZ3/Xic71Z/DwynPFwLuOHFFZfxGPdXLyJ3Nqo/jLv226N
Ro7fbuteTPl5fr8MvKTwWcKZbzvx2a533hj/raKfLf8E/E76FYUz/lTXZx4s
zLjg1xwjthmu+nKwS34R/v8Z518FZZY7/4p1n+z8saBA9+BGsPqwzSsL97Dk
14HnFF5NOOs7XnzqOH/S8EecHxi8L38SOTyvvoXNOh9Z9yni87z8UuSQWd+d
JP8WXHXM4A3hyGGc+PR3fqbtd8bzi/xq5HPa5UOCH4v83GZKicOhHVB9P8PW
OZ2v1ttmclOdK1gpf96LRwLFI1EvfgkUv/jxSNDfxSN+/BIofjH51BH9AMUv
XjwSKB7x45dgnXDkUEt8zrnxR7z4JVD8YvKhbrv4yPelp3fZYvuC+svf+n20
RDtTIPZo8aHzxl89aucU9GWmNIp8+cUEmy/0PefMSmo87nh4vit/1VT5MfRn
i+JHfq8QHP41ZZfA4d807WCHYsvD88V+x7lq1mqP7Qv9W77brMJHEyf/Eua1
qJufOv9i45VPH7N5gf8zoNP271NCvw68vBevUT86OuHP3V2/PG5+AvQ/Z2ld
8PL4JSafD4l3fu66YOPOfSafBbpv8lX+jrv+vXmr8YH/08p/Igf1t8TOHGv5
0r6iY/x9FGvqxXfwuejGafrA/Zcro++p3vL5E7YvwPPUe+Sj515fY+MEP3HX
9qTDk3eaHKhbZXO/X2bjh75G45SXni5+yPzVLxPykMuSoYfPQOWl8Svsns5n
E8u/8HMYB/WWPN938jR9gH6dG6fVGcGz/xifr+kD9d+lH9TqXSX7epMD/37v
rQv0bZS/RT7U0UYoz898f03Ily5KTvQnM8YOq17AfOH/6Y+rs9ccdtz2C3h7
912LX+w+kd6TQf9baPy73PgN36Y4q162eF7U9IF7N3m69p6ZZVvoT9o75CN/
H3fpm1O2L6jH/ezuNZt/Dv2shPd+zxr9TT3ODvnxQLrFNa+qn3O38nXILZqQ
H061uKaN8rQtXJ7W5MZ3n+h38+/XRh00uYHXTvv5q3Nfppn+gF9y87J9BP62
/ED0x5OPyY17QzmOTZ6275tNdu4sUjzCOy3o0wjFIwdqDT/z6utHTZ4b9L73
OvW9g08UPks4cg4Un85XvhQ8RXnmR12e2eRvvwuvehxyZvzu73kmZ+hHe/W+
CvruUPVPIre9Gudm3XsCHyV8inD01nt/3s79pZLPdScfw2crHpyaNPOxT4bt
sXWBTy4nf9unvJe+fn+9AsVPrzN9A3+nefLUWrcsMLm5+fM++Wqrw0Lv/h5j
8oG+qavDWn4e+s6Ov+kh+Go3nrB+JHzL6BevDMq83eQGvlByQ69GKd7MoHfp
0atUxZt/ST7oTz+9szdSfDy9iswWjp7wLt90jQd66rl51Odm55Tof9e84GP0
qo8jN+ibST7w6au4+F7VR8Arqi7wh9Nzi0/ho3Wx+JTvfqE6vvWBiL6e1t36
QITPkJ4g/7eFp2jfgf8h/E8P57u5nHzM3g7Rurzp1sXw0cozHJIdADc+99d+
97s7QjvD/b720nPmC168auTWjifCeiu49rX1CYyQnB+RfQCHfpPrG7F5UTef
IzvP/oVe9y9s/GsU51bO6upu4A3073Cdp+xf+HSR/YQ/3139veszQQ70++WS
HUb/lT+MrJteJ+nhxb+Y3YP+iuw8egWud+lNns3c+RJprDog8pycUM9aZfrW
RvWm7e78Mn1rLz4NvXOK71Zy55T5LeAZv3PnLPIHH688APIBL6n7dMiZfoMs
z/WInXjjmMnZ+iR1voNDn6r+IuRDf1oH+RvIIZZQd1uXCr31G6ivyepZ4jPA
+TOmb+BvyI9ivvC56H7P1M4L6Fvp/h3zhb5MyTHZjtQ4bvOCvpH8OvhAv8H1
V9j+ok+vkPxD9Ocvxemd5UeBv6c4fYT8T+wk/Qn428htUkKdcZPJTfWj4Mcj
zp9HboyndOzM9aNdwzzS3xpPf+0j5AD9EvntiXnvXEGWX12cghyg/13v98IH
+g/UX4c8oS/q5GNyoP+hmfr9GD/3GVvHsubpsi7MG4BXzOriI68OFQzw8gDg
6xSXMX7whXqvG3rG09LFfTZ+6Nco7oMP9B+6/hA77+jTmHn7I5cKZwnzfuBZ
FW8yrxK846H3o7y4NVDcauc++HDFy8gBfI6XB+C7Y914TA7Ql1GcjhygHzbN
xenIAforygOgh8TXQzVO7JvF9cntspcfc8rWF/wNh4f+A7+Lrf4c+BCfdpE+
wAe8lcONnnhtlYv7zH8j3kmRPWG+xFO3Obtn9Pjtz8jesr74t+rbNz8Qf/Kg
zkHGCX6bzlnWBT7F5BcxHvBb3DlucuZ876p+Qug576qUSOyfxG4/qbgGHPvW
79UfN5e6J8y3sE+XKf6FHny54ujEeCFX0Fx9sOgt9C8rfocP+0jr6OtPIP2J
ePoTSH+inv4E0h+jJ2+T62PXf2V+o/RqpPrE0H/W9+hn9698r9Qxs+fm//eI
DVuw9HjYDyb8RPFcF77LctT8B/AZ9+R7q+COUE/AF8nfM7snfLvzk0P7I3y6
4xPaGeHH3XftnAJf68YZ9j/jlwpn/OArxMf6ooV/pe9ankr4RPn52B/wyRq/
5YuET9B8mRd4iuTDvLzxmJ2xOMKTP/q8RuuF/nj9k6bn6Oe36t+2OE52O7fT
E5Pbc+rTGB+b1rrvoLBvWfY5Vt3d2416+eFYReHIU3na2HLlV8GVZ46dHPLu
hWW508w+0B+S1KTC9bPvhPlG5cNjczfn+LBag4P23Qa617PB3fsz+dQVflI4
350uPqnKh4OfVd9FlfsPj67y+n4bD30aOxccqNhjazge+Q+x4xo/331V9zsq
uvsdhrcVXko4310iPrerfmF1TPUBThh38vOf7wj7ZPrq/kVJV7fy8syZYo8K
h88u9SHkdn0Iht+u/sCeD+y8dNdnYV/9++Lzon73Cryn8ObCkcNu5cFqPjCh
z6qUUD75VKde1WV7cCU9lMNY5VUaurqt4Yqnoq8IZ5zFxSez6pWJ+dXj0bHd
d37XfUq6+Yc/J+QZPrb+q7nKewzY9+gjf+6cZ/PKkcvddx7s6s6GKz8QfUY4
8xqoePP5jcWmXRt2yuQ/XXXteXrnDVz1dPudbsbfRXyWKz9j/U7qG8x4bkip
ZedOWbwwIyFOn2XzGiU+5f67aWmNuYvMv20v/E71A4BXFv+3xs8aUOWTQ4a/
qfrvneqjAKdOfeNSh0yPHg/7fDLpHndD/e4quPpMIo2EI8/r5Ry+xfWfGK5+
GH633b5bXfbypmmuvwWcOPGrS8ei/ecfNT4ndM+ok/QHXP1IwWvC4fOO4o4u
qiOYfNQ3GP0pw/xJlcI4lHrZoBWR8v+0C8f5kPAe6iuz/iL1B56Kthw2OZZu
fKgrzb16vu6SUaGc1XcXqO/O+ORQ32Cz5NFF7tt82PRqu+o+c9Q3mFiPLhiT
v23nrPoPY03FB5z+5zevDKt578DT5keBH3H2zfRf84qNd/2T4T139bnVnZR/
9p/ZTpg+fyn6C2+VKTh4WJjnHyb8pOQDTh/1+YcLvHGxS3ivBz6SZyQxz5wr
dlpxIvLZo362huqXQz5fJdZxTG5TVV/IqvqLF/fFLos/53JW2ecxrq/b5FBX
9/UWuv5Y86O+Vp/Y3vJb+38zcLfZsfqiP7Twx9yfnDvh5RWzxTJ69aAL6mdr
In0G9/rcDMdut1BfATh2vqFw9gv826ivBv8EPhXULwEOnyThzLct9QjXb2zy
aax5d5K+sV4F1J/WWn1x6MMr4jNM+x28s+oXOQdNL9W1TDivwuKj39cznP63
XcIZP/QdZa/Aoa8rnHVvre/+5vrkDT+qc7CBOwdtfS+rT+yzt9JTDjxywKtH
XIxOVj4w0U8+Ei2peIr5posPdhj9XCT6JC9uqqzzcZw7H6OJ+a7/xZne+tJX
X18439V5FO2m8wJ5cj4G6tcyOes8HSkcP7O2+FxTPzz4ENUpOL8478Yl3AsY
YXWE7Qnn+yyrIwy72fXzv/ldvJ/f+Kfp3N/jzv1IYj7tYHSZG4/Z50UaTx03
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
Z0meoG8w/kzZf+Af8JNkjxoUy9X0xg6hf3pJXE87XSE5Sb4b+AHJyaoPRXI1
zav+dtVYrqYrJZ8bxPW30w/XltXftngMy0t9O/TDdXnr+UT9Uqs5u8o1umfx
e1r+qerMU6+Dc52q7y1ymPGL1C+Vc+r6khg9XXyynUfmP0b19rnXwOerPxT3
oNUHVn+o9c5/d6v8Mj3cvaM8uCT2+5Qkk2SXiP0+JYnsJOb3d/kavFMMp983
9kn48y81Qv3t2F/2i34oPgS3+g/q37rc+ZvO1Xe1cv6pw+WvGRO9CwrTTMtQ
PzyOoytMT1X/1umK+4KvLs0vbfj0xi0mh83eeEzoRwBfWV04zQP/WJ009VOA
T8CP1nctk/0Qef5h/eM6Zx6werBml5gveq6P9N7SZJ7Gz3B6Pv1qiZ+0/A7x
Sfx+KUynim/rujqKF6mO4lyXxyH/TuLqBKYn6XzdE+c/pmNUx744zn9MW6kf
seubkF+7IPQRcH0T8uqb4PsX5NW/wHCLawp9HHz8W/52yUPXj4C+QuY/ZZ69
N4W4hTWu7v142X/4XfZ3V+hzkUNvBx8guY1dEfyp0A80WaK4OPPXqy7K8ZJ7
lj8e3mVmN7b63uorSl4w+Cy9Z5VvaPjzuh/R/y2fXX0h67u8yEOVF8m7DL4d
rnv8GpeHvlf5tsTXgf9V768WTq8bJr2O+x38Rd2D0I3fHR/6pZo+xviZusfB
Gb9c+snTbvxCjeceNFx9OWe5PPfN7h3N/Bc0Htxw64hvc9Wc/1TxRXZPgY8R
/xQ7e6D6vGTYX877ZH1vXLeqIL1J/c7i911pcpHWQzw8eAv1QY7r25QmU9Qf
sE7k3yxIl4kO050+9oH0MfywpkfpHmG/kD9Piz+fdnrRgkgvKs/vHqn8bujA
PP11XmJ9tSBtKr662NHnY9EnrtNVQL9Rixdl/pvE/zH9f3lfq55nrMcWpmfL
HuL8aGk/9eNz/cvoe5JzfV7y6vOSc31b8urbkvuIvqI6j/uC/mnyHD58XfuI
Hgv+tvRw7Ku8F75W/F6xq7OUFX/GdU4K0y2qX0oeIuu8WH0hz9L7Ebz79K5l
fSGbxXln+U9C3pnvI5PfHPrI5Jxemj9b9Kwf553le6lf5+w47yz/mPp17pB+
YnVBtY+dFF8NfmiDb6ttr/aV+XM5F/v+evGQ8b1GmF4N/ywO8eo2D3iNMI/h
8NWGJZdd1vjgN6Z/go9W39jiOM8uz/1IfQnunQ66l7GDIU/o40ncIHh11V2n
jwm/O119OfG/sL/02aRONetpPK1sH5Pxuk+tX4z6/U10eBPhvNOh84Ohf2Vu
b8w/6RHq19M05p/04ffC77KPFgd1wYpXC0t35JZFfFuazA16US74eb82fMOl
FaudunOnjYcOm5r0uaXumi255orDt3z/+mEfd7n136D1T1DcDvNcE/ql2jsO
/InQt9He19Cz3YJHzzr2yS8dX5Ukq+UX+F56IPTsLj/Cfoc/LBw9mXVeKPnW
yt2zF8T9MQ3Hzj/a2auPlr063E9zMowPcmhVFv0BfFTNXTd2OD9ncdQWHxL6
bFq8vcWfhL6flu8D/tJp4dzxu1bXPfxu5j7FJ0Dn2/780xsP3T7H9AHwz2v9
peXmNZsS8u5Z50u6d9o7fJxw/EHg1RT3Nc59b2t9b2XnL2gsf0GP6J1ldUiS
Mb8hT15QXj/zf9/klM3JY19ln5FdF/ynUwdOvGDX4hzjy+P9bup102lfZxgP
vj+MT8Chz+Ih9ao9WXW57QvjG4f71PQ68B+0/gZu/Okav+n2yA6cbxDswMkO
Z9/7i+x7f3ZxsGsVB9vZ1YNaondQI9mTuQf/E+oEJvhboU9e+T5zXDzeldJb
PtQ6rd7pi6FexA4XZ95BdtRaWif4S8tDf41ukfwvSfaoTwfrhB9WhXqYlv8C
fqPqGMOf0PN/0kvnOLvQ5dKH1T/F6PCx6vk3k/wEr67+AuTNmf1T/YmoswT+
o/pQ4J81vCD0ORrn8kw/U55pnd/IM63o/PXF8tdXcXoy8W8v/IYff5Lz1y+U
nDxGch59Zpb6ZGEvAl8UcMujB182oeO4jw7fYu8R9PB665Z0aPLjzAx2RavL
ofGa3/APNX9r5wc/IcyTJR7M/JLrm3XrOXyh3Xfgf1QfH/aLc7pU9h/2Bfww
1SUbF8nbX971w27r+OLrxRZ/CP6D/GsVnb+pvexgxc6/Nk/+NfYL/HLlnbFf
4HWUTzTJ1W34u+o2FMV9/dK182f8OLnWZPtd9neI9BnkD/S8M9QxzhCfDx2o
w99EfTeszqHqG/xdOOdipPpWVHbxQlcpXminyy97X/kRl7o6h9jH6PcBP5Av
zO9aHKb6GY1Qnw67L9R3ifk577UVd0SdVb7rXtV5aK//D/6F6lF0cXXe3tV7
iv53nOs7NQ/8DE6dMdXTM7/DV6pjRh8EzpH6WWsfV9r5WqE6NqzH4lJCHRjV
xy6vq9PzjtEb+93+ZqZ/9e0nThna3+rbnDVl6OKuzYcr7re8/sxNYXwWuoEP
DHV7soO1fui8XfWXurh3a1bv1raujm6dcO9bn0r4bZ/oLH42f/FZqjfYNt6X
lHqMrMfwLqGvJXzi8s1tHvCCkF+fYx7wH9SvkDr/8KHG2z6C71XdgHVxv8uU
OgatXR7BWuURHCs+4RxlFSfAeOj/yomv3zvzqjmZyi5O6e4Qb5PZ6eKOVvzr
js4NNs7O0N/H4mqeu3XVW/NnZEtcPM+qMD47y8X/tAjxTln2EXxcWE/22ij+
oSSZqnfu737jvVDZxTP3Vzwevwu+RfXB6mgezuNE+Sm+FZ3hk0O1L7+Lx6d9
wvhkpOSD1Zm5OPivxQ92L/QKdSz1rrfx+a3tg1+G/WW/Kol/hms8+E3qN8T5
cvGQFv8GrjgQ6Y1f23omyD7JPNDnKMVVct5Nr3Y444Xb+eK7eoTzkux0foTZ
8iO0dXp7d+nt20UH5NiDQV7l2nX89d8jWcan02td2q7jHdlB+l3oc3E419a/
nvWcpvjtlS4v7F7FhzMePRZ7UXfJT/BWstcxj9XZE51biy/Bt5674NhPB1qe
UbmfSHk3/K6r82+/a3U1t3zS5fnem2Uf+8rwL1ceOqqo/rrcCt3LVuf/3Lrn
X15jnX0veD/VT+Z3fd4Tvwt+zIaZre9vutPWb3mdyo/me8Ff/NPRVYvO2mLz
c06fUd7BysguV5q8Ibv01U6/PSD9lr/RN57V/CucHlIkPYR5wGtp/cxjeb46
19AT/L+iG/ODbxKdmR+cfQE3OVYw7Iifjnk3287JgSslByyfB72uc+fHxr3+
BefX9K7Kt1Zo1vzKpTYefJPutavj/Me0n/QE1g+/jQh0yynPyPSolwL/2/eC
/4c8OM1vccvaR/iEdX2vuqbQExz/l+zwpp8cN73x6r7XfptskL2U/XpM9A90
nJaFr74p6//+VvYzyQfw+zT+2sg+VprU0fx8L/LnaZ13vhf8BvEz3wv+uviT
77J6+LJHwf9m91a9Yr7X6rOpvoTb3/yH2/o/MXHhKjvXyI2x0uehg90LZX8v
yXzm7osDinNgPPtVJjY7zrfx4I+N+rhqi4Ff2/rZl8flh2Ie8LLfTWdn2C/w
OwL/G53Zx2otvhr4TcuZ9l3gU9Vnp7vTS++UXsrvMj78PTnDPJyvbdPvrXn9
hWMyjGeeimV/j7Z1mr5x8YglZ2x8OQP9fX4948FXSR+GbmZ/UD1Mxht/Sj6w
7+Afax+llxo+/4JAH9YP3+7/lc2T2cbn4L1E57qu/iHnPT4vBWnZPD8vdOel
IH007LvR3+yf2vf4dwvT21RvAT5BzuyWnsz3gr8hfoY+8GcVyVvmZ383iG7M
b/so/Yd5LL5X8pZ5OEdNVM+knqv3dZb05Lqu/s8/hDOec1dx9tNDz3+o2Pgb
/Ltwj9v6weEfxls/OMkB9oXfXV22Ly9nkTPgN4n/wfneCuoL3N29K3tr3zkX
nOsekmPwOetqKb2Fe9nsPxrP/OAfSW5Df+i5WvwPHay+ls4L38u5+4Peg4wH
P9iu7DxmkcPgY8K5zvJdlp+o+yjWNwpS6uDF56sgvVv3GvoGfN5c42M9pDDt
IH2P+cG/0L7XdXUUn1UdxXquvv23OhfQH3yP5D/093X82Cf28XzqKTk7wF3a
d+Zx/S9sneCn6lzwXfAb+g/n19fLYt/53rM1jzt3KeeI8RaHo3mY39fhqRf3
wcwPED3hB+t/Lf0Nevo6MMzD+v/p5ADydmOQt0Yf6zuj/YrlTGGq+U2em11O
8dixHC5MP54V5Ab8z3cVlN2bxRnHP/l+8ocy3uTPr3/2X049BKPDaOld7Dvn
pZXqJHB+wRcH/TPDvoO/f/ftxz6TnZnlu8DTTrcduuPb2e7clSTvqG9a/C4o
SJ/UehgPP5wQ7n37Luhz8Fex98DyLN8Fn7eN6xLYvfAfd97Bh0qP9faB92Qf
YJ3mF9Y7Itb3SpLJTg+xeixOb+S7hqpPq3tXpv+TPun0c+x7idPP832VL8P6
2fct4ivWyfgZ4lvmYfxRWif0tzglvY+YHzpnJN98P/S34zy+1OEmV+GTKTvG
5Do8/GEW+oBPC7jpV+DtAl9lrA6U8HmBD43Pwb+THYnx7FeR9j3Wz0sS4vHq
ubwkyUn3zvrlHSo9J+afgvR8vd+hP/JB76Yk1usK0naiZz1nb9ypd1n8/i1M
U80f3++FaaJ72cmNQO+0OOvOV17nK+fkcz6DPVDfafFRsjOwj+zvNvEV9Eeu
yj5gcs/80Vp/XVenAjqzHusTLf3N8XP6vvRe5je5NyXEA7N++Lmz4njZL+bn
vRzve2FaSe9l1sn8NYSzHvhhjviH/WL+ZaKb03vzX2t/mcflm5v8sX678new
7+D3iQ/ruvi9wxW/x3qsTojeoeDsy9WKB+B3wRkf31+lSSp+i/Wc0qSv1hnb
eQrSlpo/plthulpyI34HFaSPiH/gW8YTR+feC/mR4b2QxOfd9DrTM61Oo+Kp
oJv1sQr2vZyz76UFsvvF6ylNpN/aOWKegXofsV8WtyD6sB7W21v2Sc4v48vU
/J8X2z1rcaeyB/4/OhfQuw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXe4FMXz9ffenZ0Ns3kNoCIi5oCiomJEsohgwgRKEDCgopgFFVGMiAEV
zAlRTJjBDKggJhTFnLOiYsCc3vO5p7/P7/1jn67t6enp6ZnprnCqqt2w0Xsd
3ZxKpd6qplJplRcmqdSoplTqrHwqNa6SSh1RSKVuaaRSQ+qp1MrZVOr7Wip1
UiaV6qDGx6jdxvq/nf5/r/PXLKVSW6h+hs75N5dK6bTUF+rvdPVzqdo+W06l
BqiPIXEqNVrnvKa2m+l3nI4NUt080SdrMC+p3Fi/I1X/gPqforq91cdy1b0t
+jrVb5f1dX/RNYZqbK31/ye1Hat2F+j4PF1r67TpX9VmiI4P1u9M/e+sdjWd
+6LG3FrjbKXftvp/hs69Qsef07nr6F4uUd2qxVTqII1tS9HDdGyqjg3W3Lyu
m+uq+9xL46mpbK32/XV8hI5dpP6n6do/ct9qf5uu/6muNU5tbtcYBqjsoz47
qs/Ddf5eqttN/48QvbvKUSoHqq/jNHf3iu6p/ifrHkdonBep3F6/XXVOSWVb
XeNnXfM1jecrnbsnfejch3W8j3576P8RuvbNGs/Pavub+tpOdWmVUzS2gTr3
Cp27gY5dr3H+obFdpn4P17UuUdlRfXTQb7aOpXTOTup7gM4ZoXYD1M9KqttW
93u16p9Xf1foni7X7xz9n6+5K6lso/b36lcW3VZlIUql9tV45uv/sbrGGrrW
4Spf4pno96zqd1FdF/0O1rWLar+32j+j+vU1zr/Vx4Ea8wW63p6ir2X8mqv2
anMj49HvReaAdmrTSuU0tWmon2Fq86aOrSp6BO+T6Pd1zff0e1f03xrHk5rH
RbqnuWrzhupW5p3Q/XbXFHyv/s5Qmz81roEqB+r/aur/cfW/ne73ebW9X/+n
qr8r9TtX/0eqXSfRy/QcTtH4T1bdkzqvncZ8vuZwE413I/1Gqn68zt1I154o
eq7aPKsxnqU2I/T/pIq/iUdVP13XulD1HXTeGPW9ptodoWPXqf4+1fdS/Wjd
x5H6nav/ZdWvrTY3qP50Xfd+1fUWPUrHHxB9pn4b6LpF9bVQ41yg3zNqd7Pu
61zVradzx6v/w9R+mH7j1X5l9Xm+jq3EWDRXx+r4Z5qjkzXOker7Jp37is5r
q9/ROrae+lus84br2GDVva66VXgn9H+QyuN170eqv1H6DdX/czTH3fR7UnQf
vQs/iN6J71T3P0TX+UDP5DWd+5OOv6JzV9KxLN+3jl2s/9+r/EfnXafxXqL6
5fo/Xm0uE/2D6GtF36RxT9L/bdT3DWp3ucb3pvpcobol6mO8rjVUbT/UtV7X
/3VVv63KNXTek2r7pf6vKfop0V+Lfk3H1qE/lf3Uz1uinxDdX/Q7PHfRu2ke
HuU7Vd3TOvcJ0e/p2EDNfz+NKaVyLdXPVf0y1a+t+S3zXHTe2hrHVNVdqX4u
1O800eernK9jX+rU31gj1HYD3hsd20z1l6mfjrpWVf3kdGyu6gpq11n3vJJ+
2+q3qn4rdH6TrttL5z6kc2ep7fb6XSP6TpVbqf4q0VPU5hL1eZLodVR3segv
dO5VarOR/p+n+um63vkqJ2tsnXW9K9RmK9XluK7a/az226gs6feN6NNVnqD2
n4vuqTYX6//W+k3U+Z+q7kfVnar/k3TtMWp3ie5ltPpspz6P1zVj0eur/mP9
L4j+VOedozZDRK+uui56tofq/OGMQ/e6hX7Pqt+ixnaw6lqrzar67a0+jtC5
MzKe8yv1/5u0x8+8b6vvYqj+L9Y7vk3i92VLnbevntlbaj9A5QCN8S61OVDH
Oum6s1Tur99aaneQ+jhR/bfWuceqrr3q9lObp9T+RP1/X/X7q83RatND9Q+q
fqTqZ6rcT+WeOranxt5fv/3YH3WPd6u+m/o5THN0qH576vc+c636j9XP7Ym/
tcdFr9D7vJfue4neo33V5h/Vv6H6AzTu3TT+f3R/i1TuoevN43tX+7V0/Gx9
y/10rXnqcwBj1u8/HX9Tx5ap/dq65z/0fw/RkdqsJ7pJc3S0rvWtrrWT+h2u
Pl9V3SM6p6bj7VQOU/+7qM0CtTlJ9Caq665rnSK6g+j9Ra/Q+D9W+wX6vyV7
n67xl/rbR2PuJfpP0UeofW/184L62Uv1B+laL+laW6j9ANGLRM/T+B9WP7ey
Xuu8+zTmB/T/Gd3LqyofU31f0Q3ea/ifjPkTdZE6LmOeRJdKtVI/G4r+i7Ul
8jtfYY0IfMu3ol9Nm0fSUFr4mU1C/dTE9C26ziM6qa3q5mvMg/X/WtFHFb13
0Ocy/f848EisZTN1bEvRTRpbKu81rKP6m6zxbp42v3VN4M2+E/2U+t+Q70yD
uCX297ua/rcvmW5WH01qv7roD1T/hNq3V7mabnL9xH2yfh4duw37Uzc926zo
u9TuELXLwO/pvAvVppg2D/Se5gRm8ioVN+pYE/uOyvdVH3Hvqr9M97uj2v7H
OlZz/fSK3+WS6D10bFnkPh9hrS54D9xQ5aJm93md6kdqDLHo29kbRRdEzxL9
hc7Ni75PbbrWTd+t+rdij3m66r9Rm0T0g6I/j33u/aKn1Fx/n9rv2Oz+b1X9
nRXf+x0q7wnjfEz1j+l/O5Wtdf0Lwtr7lf6vo//vqd05Ov6s5nEz1Z2q8nzm
QvXnqdyuZp72TNF3aDzvslbzzET/x1oFj6R7/l11V2uuLo+95qpIXVdxm+56
93/JeQ0+N28+9k2+QXjP2GPYQsfuE/2R6C7w+WrzgegLVM6KTO+g+mfUz/rs
4SrnsJ6qvqv+H1A3PVntNxf9qehLRd/W5HvZSm1e0b38y1qk687RsdVVt6Hq
LonMm7G1PaT6lXjX1OaCyLwB8sfEyDyMukudp4brp72fZUW3Ef2x6HX1Tq6V
9l7wYuAr2BtGN7ke+eWq2POvTyV1QuCLPhG9NO15Y45O0LXWEH0YPEfs/g8X
fUaT+Ryu+7DG2VrlqrrXDXXddVX/q66byfjcj3gekdsX4Dci81e8+j/nvI8V
NYgHKl4DVtK7sETH24Uxv6xrVfXbR/SeGsMqqj9Y/w9RByunvU98WPC+9oGe
6UD2b3gM0Wdp7s6EHVffZ4uewLVED9Q4F6jNILVtUp97a6yrwc+oz1Yq/1Kf
E9X+fLVv8O7o+F76tdaxg3XuQpUH6dwD9Suzp+taWbX7iPdOi8shup91VP+j
/ndSn+dpnGvrfyu1uUR9/g5von1pH9YUeFa1X0/lCsbMvqj6osoJ+k1mTdN5
52g8PeGJ4DNFX8ycqz7W+Nvy3jIP+q2u3zD4AJ37t/p9Ru3ba053Uj9Pq/1C
nXu5+nlR9X1EZ0UvFD01b14jUrmW2m+H3KH2L+l+n1Kf96h+kp7xIXpmF6rs
pjEubvL+9KiO1VW2V7md5uR9ZBrRq6vtaoGPOUb3fCX7PDyGxnav5uVSXWe+
6G661rOsIaJ3UNvlqv9O9G8a/9Ma274a50rq71XR6+tYb7VfwJqtcZymedxA
5RK16aTxPw3/KXob0W2QP2K/J6/o/xa65kTRa8FH5s0Hbc/+oPo686M2B4qu
id6nyfxONW1e53u+JR1/VOWwZrcfoPrBoc08Hfs19rnzRe9VMJ/7gvoflViu
HCp6ad688HMqD9K5FdXPVft9I9N7NVkuaSV6ODyW6lcVPVj0b5Hf/1fV/sqC
eaXJut8fNKZ3Vfekyr9it1+i/39H7uctvveCZeUTNRYWmNVU/z7rbNr8z4Y6
1lNz+WuTefdeJfPV+8CPZ8yHw6PvqvO/Ufmixv9O3vzLdrxPaveV6EWi9xS9
luhOot/VuY81m6ffo2D+fa7qb2o2r3KIxvC12nyFbkT/dytaRthbbXuzhqhu
OPu76MNYl/R/A93X/GbzVfvzDYt+GzlGbdbRsb/5FkQfqvafsVZF5sfg4Y5N
Ww5qr9+YtOUX5JDF6me5ypd4RqJ/EP2y6Ad07oc6d2eN4V7V3wvPrvq7NM/3
iP6X/UvztmbG9zaP+0f+1TwtqVhWfkVzuazZ9GAd21rv8HXwujr+dbPl7INY
6yqmX1b7P9TmZ/UxV+98RWP4Uu2WIDfpOksy5sO+abZcfrDO3V7tr9f/A9hD
Nc6Fqj+X9VV1zzH3arOz5nYB8qLqX6n43MUl6xJo309tnqtY3zClat0D7XdX
/fNq10vlDH1Tv1T97T+vb3SjqvUQz8An69zXkBn1/T2nMd/a7P9sVswb+zrf
/X2id0TG1Dh24psqeG+Fl56lY3dobrvCO7H2a2x38syZ57rrlqr/BTl/7+NU
3gC/K3oT3V9bPYtX1GZf/R+b9dpCn9M1vnXV9maVv6m+nX6rq+/+NesuflKf
L5V8r8eK3ln1d8Pzi+6oe7xW97Kf7m/3mvn9L1iP9Xw+U/0pBfMJvA9vqn5u
bL56rv7fpft6WG1miH5V13slrJvnZ62reVr0JNVdmLEcOjRrme5s0V8FmRMd
B/v1NZHb3KXrTVd5re77StWd3mT59vLE9AWqv1T1pzRZ9pxVs97u26rlevQq
K+s+30mbB5ig/7cXrPMbgz5S7Y5H36Z7OhYdVWSdyTrq/2XVD0MPgV4na14A
HgVepZXK1wP/cGKTeRlkVfiZqwIPQPta0TqSSRrnC0GPxbv3u57vbfrfSeN9
RmN4EB2IxnCRrvNFs3VGi3PmBS5gPa6YP1ik59YBvViT9U6PRpahFvGOVvz+
Izd1K7nuPl13nuZzTuT5X1ixzuwr+IWM5Xbm7mVdY29d63yVM3XvB/JM2fc1
nglqN1ZtxqqfU/W7VOM7Vf08xH6u8kFdoxvykK55ltq+mXZ7+MwZsZ/fKI35
Rh1/T9/4k+r3BdU9gI5Cxx+P/P/cwPuha94tbT4SHnK2rnM7a5vo5epnX3QE
mrczYO50bFPmXf/7q75J5aca0y+q+0f3eJra/Ct6E/0+QC+q8m/4AtF5nZtn
3dLvR9X/hQ6p4r1yK9Fvi/5E9O/oMEUnap+gc252+3b6LdF4PlD5i9p8Xbbu
im+KNewadKHMNTpW1k/Vb6/3YaTG9Jzm4Bv9X1X1x5W9Zt7AXsiepDlvm/G+
8nvVfRxFn2XrHUer/KHZ97K2fj82+35Z58dnzZPDp/+h6/QJ89hNz7WrfuN0
fDM9h12RazSGO0RvxjNnb1Vd97R16c+F9Yp161udMydj/fjfacsFrDNL4QNV
/qrxnJtYjjhRfW5V9D5yvOhMxfvmlmrzZ9n77QSVf5S9F52p8sawbrJmvqnr
Ha9ymsqs3odBYW1hH1gtYzn8F9X11O9m0WtpbK0z5sn+CeO/nzlv9jrGfG2c
t37jPPV5q+7zWfRIGuMTvHv6PaE2u+pYb+Qb9IIV132iscUaQ/8whrt1zpk6
fqfKvhnzivsj45S9Jm+q8rKKdZOfip4PL9Hkb2NTvSePcY8qH1Ufu6vPx/V/
F2RHlVvznhdMn65xdNQ4j9O9ba6yC9+V6J1V3qPxdNE5M1lTKtZVvKtrLaz5
G1kLXbWu+4R+D+r//ZHnina8p62brCc9QNfYX7+l6veiinV776mfbzVnN+vX
hjnPmWe5WOVrVfMnp6L7jM1rjVO77/Wbrl9bHftO5S36rcm7UXXdaWr/as58
+uScdTjw7SerfDDye8i1E7U/Suf211gu1m8241WbmXnLmg9pbl7XWJt1zlS1
e7zg+7tV792ExDzedap7SdfonzI/8LDG+ZB+j7AmFv0tPIiOoeTv4zZ0SWnT
XIO16lb9mvX/xCADToZ3yVoXeXyT5cfzNYajRF+hNmdnrD9FZvxD9Rc1Wzdy
VNCxn5ixLPpZkMORNZEZbytaR7pZwXJru7DujVX7UzLWZ36ium31u4h3PrJd
4FDRmybWtW6uc9cpWnd9Wd56oY5p667RO22q34VNlm2fS9s28Fna+iJ03+iF
rs5YJ3tJ3rrw/1gjYuuH2WfH6Lncqfa/Vyx/s6chCw/We7ZC7T7We/e6+t9A
7bdmjVM/W8B/Ih8yb2nLkn9mLEvW9Ttf552n3+2ir1Cb8WnLpN/pnM3VRw/0
5ejZ+Bbg/9mD0pYf10DXpN8Z7AXYSET/qvb7aU5WEb1MdEZ9R7Fln910P1Xe
dfV3MHYg9bm72lyQthzaSf+X6/+avMvoPLmu6M6q31DnDdT/zfX/Dv22V91k
XXcr3e/ZQc5FJ3Nu2jJwb43zDXRq6HdK1mMvQBeXsW4QfuYM3jGVU/Qrqv8d
dU4rZBEd31G/W1R/lc65llLjuTlvnvAm6MTf/Y3Yg9T/X8j4jFn3tbHqdxS9
c9qy5586VtYzOwHdg9r+pPrO+t2gdtvremvo97eOLVOfsepW0bkPlfyt3I58
oeMPxP4O0TGha8ozFuZXdSvnvUdP07Ui/X+x6PXsDtWfwlqVNU/5GWNVuYPK
z1T3qX4FzcfvGesl0F/cqnfoe3hHvWsXFW0D/VjjWqNknXxe5TVF25iuUnmX
1oVR6m+BeIlZ8ECoFuFnEtutdkX2SqwLPzJv/SB6wtNFb1CwXWt9lWN1vSd0
Dxl4QP1mif5Tc7YmfA/7OHaGxHank0XP0TVOUnmDrnuy2j+i9s0qT0hsp22D
3Kkxzk3bZj0/bfkW2TabtX1trH4n6ZyHdew/9N7ID+ht6DvooCY1WweKLnRv
lRurz691rJ/qN9ZcTFP9KXp3vlfbbcJ+PUPHewT6x7Tt3NeLXkPf6QY65wWN
eXzFvNSh6BU1xzMztt3wPmCr3ShlnfDNsetvjbz+8C6eVfG78yJ7fcXv6eKy
dSc3hr17emJ6rMZ2e8b8LfaR+wreq6/X8e3DO9hO7Weq/x30/yb9n1hx+bL6
vFP1X4Rv4X508hmff2vGPCf2lwnYEdTvibqvmQWPf5rm6rzIunRsoi+nretj
rb6+YHvj2WpzUdDLscauVfN6PknP5FJkRtW30TjTutYFYb2t6NgY0XsiIwS9
93ms85q31fS7R23XrXmtX1vlfshlze5/SsY2LWzf76atw8f+O1xtpmVsF7u1
YLzDZF135ar3ggd1rX2zto2yf2BLpYTlvSixXfUc3cvViTEXR2rOF2tsL8e2
x6+LHVTnHgZPUfAecg12P9VvoOu+Jbqt2q6p37Zqt5P6n5I2DqCb6CtF7wB/
rHN76dxBvIc6rzv9aAzr8Y6oTRe1+VTt71TZU8fmqP+uomN0KWqzi+ge3Lvm
tofoHNgRPeOR6u9BPbt7WRPUrjdrtfq5CZ5V9Iei+1Knc/upz94qD9I51+vc
Q1Q+q3O7aI4a6u9j0U9p3odrfKuobFUyPiGLjUlt7kQ/JPrmyHYT9sctNV//
wjvq2i+pz9/Qc+tbuT6yrYQ9sVXVe+ij6uNatbshMnbkOs3dxfAI6uODtO07
7LMfqXy92f2zDoMbWRc9nfpfW2V77Fc177mbqtylaJ7sadYZtX+j2fvyl2nL
g5eLnh55XwArswCeGZ23yo2LtguM0f1fHxtjw7lrFd32Uuao5n0GvvTokr+p
LTX256uW00eCbcm7z/ZF27uxEfwIz1f1eNYpu1/o5UH/g20aG977Jet4XlM/
X4keJXqorjlK/8eK3lznvleyzmZn9fduybqf7arWC2IrZ3/6XPWHqvxE8/+Z
6JGiu2G/Uz+nit5M/Xyj+iNFD1f/K0SfKPo7tV8m+ijR80QfpfZnid5G7X8q
WY44TO2PVP040R2ZB/TjorcVPVr0RNGdy94jGcuRan8MOmjGiQ0FGyQ6LvXf
Xvf+eLOvt37WOkOOdS94Dxpb8v4ONok5PTXyfGIP7lHzXjlAfT9fNG+6SOVt
BbffQmX/xHqtu1Q+VvR70CmxbYg9fR/Gpf9vMQa1Xy9r/SFzcYfaXwU/ApYj
MpYCvdtbanNw2rLo+1nbp7CnvYecjO2Wbwc+OfL5bfROX91seWlibLwLctQC
0U9G7ueMgJlhrFfpOdX1f0uVTxfNmz8DriRrXSjPbLn+Z8CJqVytZtv1ZzXr
kNn3h8LPZ61Pxjb/l+6zrPs8T2M7KOir0UOvproRKr8uWo/N3n0IMnPNNvze
yG1Z28Jpt5P63z52m4Fqf2/a16qon0PhJTVX7XLGVr2kcR6q59eApym4fKnZ
WKzu6qNb7HFj7D1S5aMqp9V8bkbvydPgJtI+NiWxDmRjlf9WzBs8ovZ7R7YR
Yh98s2ac2I46PjW2bgue+x2NYZCOd4Kv0O9Ynr/mYYuAGXhSx8bUTf+rthcH
WQw+o8zzzZoHukT1/0TmOX4AFyF6nPqaLbo174Pu8RTVvZ22Pmey2l8UG1s2
WnOyqq7TrmibH7a/m3TubgWvZ1uLPilnfcz1Wj/6qH4VdJKqf1pr2xzed/1/
VeN8RPSLGucdievP0nnHgK/jGwz2FtogRx+nuTiMNZ/vNbLtg/fpptj8BHiL
adjO4BtVXq3fysgUKgdrrjbXOQerfDG2TMKxbzWGtXTuu6q/JmcbWS/sK4GH
rzTbTjaB+0KvorGOEf0l/av9+JTlkTF6Xl+qn4NUDlJfHXT+QJWXab6/y1gP
f27B+igM/58F+h7d42uR5Y2G/n+St+zygY5fVXFdrWK7HWPrpDEsCTIF9zla
12uHvl3XmgEeU3Vp9FXoB9Q+0vG9i76PL9X331XbAd4oWV7/vMk2hVl1Y5TW
aljGx7YwMsjkw1Qu0XheK1kHiGz+bN4Yp01V9qxaxj9I111StS3jNzCPYPlU
f13OaxHzjB3o47r1AIPYe9V+VdEriV6m+p+xVWjMUysec6ViHQJ2lsN0vX90
fEaz7ZK0ZZ9gXZ5Scf3givUM2F/YM/6r+l7e1NifKloHfaPmfEDVtpN9VC7X
sWPZX3TuC6pbN3JfR6l+CTye7v1tnfu+3pu3VL6XNcbgLh27uWocS18wMAXr
RnZAF1GybpZ5uL5q7FdXlY/XbJfpL/qGqnFgPVS+VXN/b9eMf0CeHFaxPubG
ZutkXqoZ+3Wd2i8sWB/YuWCMAfzVIdhQ9H+m6J0LloNva/b7dDa2oGbL1PfX
beurNszf0f5ytRmh/ttkjOs9S+2rwW4xQeXhaT9jcDns7feqj/0Tv2/vqq9X
Isvg/P8wb7l8J42hWWM6TfQWyDF161r/A09UtS1qT5WfFlx/t/obpjGsgY5Y
9TdWjWnrrbJa8/10QedW8T2hg125ZrzqUvb9irGsO7CHFvyO7ajye435GLVf
qusfLHoT3fMpeo7fiR6t+tdVf1/dtrtKw3qFTLPvIaq4RD/5Ws7fyiUqt9AY
X2z2eoSch+1zXsrv7R/Mc9Vr0Z+iZ1b9Lf8l+o6q1yWexcvgoBu230ytW3Zq
kb/BhZVtJ+paM7bzUl1v37qxyvDtc2vGSMN3wYvxHS3VXN2l8u2Sv5dD1P4K
3j+N7ye1rVat53kKeUXXPVT3O1tt3ir5ewF00KZq7NqaYT1ZrD5vY69R+7X1
fOpVf0t8U+C+WEdYT8BW3V62jIysjK4QvR32aOxqLfY15CNsEBrz2TWvG21Z
y6r+fn9W/S2i+yDjgBVQebCuO1/zc3ndtsKVsPtUbeNrxRqtco+GMco/YNMv
mT/pVbOdDvvXr2rzasnf0ZVV7zfsKZdVbV/EzggGD9skdknwZl0btl/+XPY+
yn56SbDxoWPco2Y7H/YacGJdGrZzfKv2t1aMTQKjdG3F+BZwLnuqzWe6lxt1
L9PL1puhP7tW9AzRl6vNMLV5Gx6rbixWJ9W3VZvdypbl56nuvYrxi++rHNIw
/ubKunEjyIbIiEMbxgCdXTHWCL3f4xVjVNDTza4YS4b8ghxzBLhb1i1sTLrW
papfLnpQ2fptsM2D+W7RG6r94Wq/oe53pq77ecW28y9U9g0yP7iJ88vGbIDd
+KZivMEQ1U/GvoLuUudeLHqq6OGqvwnskehfKsYCoRNrrTbDG8Z+3Yw+u+zv
Df3Kcao/TmN4Qm2OF32C6CdF7xHWFtaYXNV6lrzK2WXzhOh14qr1MJ9qbHeo
/n7Rf2O3FP2A6H9EX1I2Jh9s/t5hv2Df6Ff1Gs5avktY21njd9CvNTywym30
W1n01diO9dtI9P4qD9BvE9EHquwV1jfWuXEa/z76vnYV3T3sC+wPu4X9hX3m
+Ir5zd2ZG/22FH2BxrBuxTrJiugXssZnnw0PpPG/rM/6CM3JcZFx4efAb2Wt
o0D/DIYaZ47FKfsRHBV43TUS049jY9S55bSxqb9VXH6ia52pNfQA0Q/lrF+f
2GwcxZ0188YnVqwnQS/9oeqfBC/E+wymW2N4tdk67qrop9PGrN9UtO5kYz3v
57PGjk+Ah8ta98KYj1Ddf5HbL9O1jgA7pHJO0bbeyxJjaAcGfvjRrPEkg/T/
NLXZXMfGFc3Pbp6xT8LXuofH1faBnDEsB4f1nLYviN5Xv4/Vz0dZ8+h7q91e
4Mt1/Kyi1//VwPvUfe5/WhuqicfwMJgUjW8f9mXNyerwUdyT2v9R8bge1PPN
JsbBtFJ959j0XGTUjGUBZEgwvcz5E8ix6ndr/X5W26ElP6OpBWMgeYe5xq8V
Y4A/BGeka7wD5kDlKTrn5Nh2gpMj2zKwTaR0f0dnrJ9cmLUfyym8W+p/45Rx
SOh+3kUHpP8H6vhfkdt/WfN8fqP+V9e9nKq6dTWekWozQr8zmi1znN5sPefp
Ve+hJ2iM+zSsJz2x6rljDh8QPaHueb5YZT+1+Vj09aL7i/4EvIPoG/gO0RGJ
jst+n6+u2Xb/vMY6TuV+DeOu+tYtjyGXTa0Zz1DTmB4RfYL6OC62TWdq0far
9TT+BZqHfWNjrY9V22Mi30tT1dfimhF8rMZ/YcP7K/tsjXUytjzFO/xy1vpb
7CxPJR5be+5Z/S0Ket0bitYrbgqmKbZvw0n6f3hkLNNxotcpGMN1sdo20O+p
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
L9r+gr1upq61P/J2xvz5gaJ3z5iHxwf/N/acovUd6D2OULlf0diO/YvGG4OX
BQv/ftFrNj5xyJfLwj2+U3M+uhvrtumD1/pM5Wuq36LZ+Z2R7TLqZ3nR+dqx
zWer9q9Hj3Zg0f4U6OYOFn18zTzUrIYxCdj+Btetw0KXdVPdeSpfTBmPTJwT
8DhflSwjvoPeUOUzxFzLWDdCfiV0He1V90TFeQ6erDiXE5gtfOPI9fljs+1Z
5JnCPo6dvHPVeaBurzsvKjrZzdR+zbx99/DhQ87+Ldj1Wvwv0s6tRzBRYrKv
WXIuHnwAZybOdUsehQVhPyIm8diGY+oSX5e4xshzbYkpl1i+Jw8HOdjJj0OO
m1LVuVfAd16qfg7P2+8M/zPyFGDLm504NwE2yjmJY9turj4HV53Pnrz2+1Wd
L6Mu+qqq7b9g0sh3MbzqHMQ/VBy/nXjsxGUfot9E1S+rOB8r/lpDi85lQ/4a
YltPZi7S9rkkr+uF+n9Iw/lkydNGTPWWPMJp54IjPybxiIkRQQ5N4q0Tq5bc
nfibEaeXfMTnif6u4pzUYDjw4yQH2RGiXypYh3Fc2rZF8h3jg0SOOPQcJ6Rt
GyUH6FHgnCrOj3yS6I8rzuGL/yo2XHJG4+OKbw552YaK3rbq3LLkmSU25eUF
61XxqUKe/hkcS8E5Z8nfSixKcs6SS28Cts2C89+Q7/17eDHRh4r+RXR70Rsk
zuVELhDwENey12I3V/0POWPHZ8NLFOwPi1/szznHRCgXrUPCZwrfKWwfxAIl
Jig5F7C/n1R13pAvwaSq/YtFyyfEgFmcs7w2O295nZxrMwJ+4yHV7axnd07O
ucdYn7crBluLrrVIv5ebrC9aUvdz6Bb0QMTg3B9dTMEYQfJfnRvmhzy3L+ad
s5N1efeCMXbsU0vhJcDTqHwt55yFKxLnKx+ecp5DclkSjxJ9BXogdHrEoTkr
51xZ7PvP6xqVjPWr49X+LdVfKXqfgv06BqjPvQv29+Bbu1Tnft7ktZSc6Yek
nCNxas52Xp7jrLpz5ZHjcUDB/ns892V55zqclTg3IbZB/NfIOYKd/cHE+c7Y
Z7sUnB8NO8XionMKg0ckviv5bckJRGzYgwrOK8yajN8f3xr5igcVnGOYPQK9
15qil+eda/WHZtvcybcF77dq1TliiIl8dMk5uYglMSVx/hd45jWqtguT34m8
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
            "]], Polygon3DBox[CompressedData["
1:eJwtnQOUbMkSRauqWdbYxhvbtm3btm3btm175o1tW39s/b3fqbW6VmfexM2r
zMiIEycm3niHlbcvFQqFc8qFQj//z68VCpsNFgr7cfAs0pdw/Bryew8VCnPU
C4VHOXYT+Rv5PUJ6+UahcOtAoTAd6cu7hcKfrUJhCfKPUf5Mu1C4oFIo7Fos
FA7gWIM6T/O7i7I7PcdwofAXvy8578mUj0XZ0vRxDseqnP+0ZqGwEPkrqoXC
ctR5lvM/SHpv+juY+i3qz8/5xmHgY3FsV8byG20Pp6zC72HqPtrOWBek/WO0
f4g2N5Bfwf6o+wDlx5in/QWNjG92yu7m2LO19Pc5+SPor0O+ym9v0i8wvs24
ttHIH0zbozk2OumdOXYx+VvIT0N+PsY3NuO7n/s4PtfyRDvXPht9vsT5TqL8
Rsqv935SNgZtjqftORz7k3M/zj1Ysq9Q+Jff29S/u1MobEV5H/XOp7/H+X8r
bWehv1s497PUX4+6j3LsafobSfkdpGel/EnShzOOPWl/LP0fx/35mXPsRX4f
fjXKz2A891H2CG1G0v5ezrkfZXXKLuJ8f1P/W/rag2Nljj1A+ZGku6Qv7qYP
+5qEMfxE3R+45zXu1b7kv2RsQ9TfhvJ+6l1A/YU4x/uU78LYr7B9M/Wn4R4e
2sg1eC3PUf9ByufjtwB9HsL7uDb34jOuYTb6+44x/cv5DqXsc8qmJ30I6Xmp
fxv/lyA/QPpG/m9G/Wnp83PSW3I/VuZca3LN29PXKZxnLco24tgn5E+m/Af6
vpg2k1F2GG0eovwTxvgM6TW4XyNo+yb1GvS/EvkpyP9D+/8Y/xP0cSrpi7wn
tP+C/Jy+67Q9k3EtQJvnSD9DnW+p/yXlc1M+N9dQp3wM+p2T88/Hsa8pW8r7
Qfowyj+i/ufkB0h/S9+n09fr1JmS8sXob23avs94JiP/quOgfFXyUzG+/ygv
cK8vos5VXM+15C92DqDPmah/nO8C9U/n/wZ+/1zvuPQxsprxzEudr0gvyfkf
IX0oY/iQtivT/5T0vzd1ViS9Jr9pyO9LfnXSd3DOKfvyzvju/I/nfhRlL3KO
FzjXWYzhRsouoM1Z9H8mxzaibF/OfwbpbZwLKFuG/H+0bdYyF6zN+Sfkfv1H
+YyUvUqblylbm3NOR/1DOcdapK+nzTyk76DNDM5v3PuTyL9G/VfM89uF9G78
LiO9K/Vv5d48QP1ZyV/F9W7Smx9341qmrWX+u8L5w/vH7yf6u45jIyibnt9t
pBfmmuuUTUf7s8mf7/zE9a/g8/Fbp/0G9PcS17AR7d8l/7P3h9+zpFfx+6Vs
avq7hrZX8ZuSdJk+f6fsAvITkl+f/makv9EYX4f+1qB8Edq/wpiPo32FYxXK
RnDsEPqeuJZ381aO7cC9eJH8y9Q9m/u5DPXHo/4klB3J+L8hPcw78Qf1vuCc
T3Culcu5d0tSf8x6rslrm8B76XrA/VuI9m9T51WOrUOb6Rlfh2Nt+hufY+dS
/xXyW1H3P/q+kPzxjO9E303yb9J2ao59TPpojh1G+kz6OLWaNcT5dBfO/wTp
W+njjmLmROfG66jzLHX3Z/wfU3Y9+efIH0j+E/LnMIe8Sv4Gjh/BeJv0fxP5
eznHLN4bvyeu9XqOXVLN/RqTfKP3PVt+HWV3MP49Of9p9Nek7EmOH09/91qH
sZxG+Vwce4hrnoNzX0GbE7kXT/KrU/9w7t1x1L+bMc3v+0n55dS/h/YX0n4M
js1K/hLq/0Rfb7jOUf9h+pvbZ8Pvae79/Rz/l7Zjk/+e9H602ZH8TvwOIH2f
8zT9jeN6SH67Ssa2D+WHkz+Q/vcmfRjpg+j/HvI/e33kjyY/OfW3J/9QX+aD
2yj/lvytpI+kfFfPQd8/cux20ptTvgjpeTnHVYx1d9qfQXo/jh1B+QOM50rG
M7nvsPNJJd+WY97f50v7HUh/T70D6H8pyg+kfGeOHUT5nZT/QPo20kdRfgD5
Zym/m2s/kPx51D+c/K7UOZg6RX5Lk/+c/C3O9zyvMvf/IdLHUv8y/t9C2Wpc
3720fZ78OL57/JZgDCfT77ikJ+Z9e4X0PLS50PeUd+4P+jqEY4sXsoZeTduN
+M1CemLO+T39fdfK3Lkn7V/leW1Lfpn+jOlG7s/19LUG7ceizrPKL8pAjGVX
6r9M/Ud4T6ag/Mpi5IdtWlm/tqDdzozlWGUa+vuC/l4gfTblo5Nflr4Oo3xD
8rOTP5k+vnK+4ZrG5v7/N5T5YTPqzet46HND+nzL9Yz0XKRPov0jtJnftZ3f
c5x/Aq55B9ruyO958htTfz7qn8y1bkr9+8n/Sn930u8xPVnuzv6soa6lE/rc
GGuJ672f9KTWI9/v+kD6TdoXfd85/4ndzPc0Kwz35L9NKV+A/hbknCdw/vk4
9gJl81LpRq7nRco7lE1C+xNoP8y4SpR9wPnfpu5TnKNN/Tv5zUh+E+rPT39z
c84ruNbpmkn/RrsVaT8X5WO63tPnC5T9Ukn5exy7mb7G4vci49uc/F5+M/wO
9/uj/+FaZEply3tp/wzpQxjXR4XUOYa6c3HsOeouwO9/5J9kvbiH+nNQ55VG
+lNeP4L6x5JelvFMQvpb+ltfWZH8ROS/Jr8e+cXIT0D+S/Lrkp+La5iUc0xG
H4/T3yr0MWGv/ipcy0c8zy0oO5LjB1P3Eo613RdQ5wyfVTlz7wHUP4b0otSZ
tpz16WXu91NUvp/xlj2f4+X8zzHgB5THqLuac2hvvKvS93YcP5n8Sf6cM/2R
npH36zLKn3D9pL/bByO/7kD/f3BvViN9Cv1NxzlOoa/LfB6kp6H9iZzvVPo4
hfTUHBvB2M6mfE7aLsx4xqPsc/LrcD+maGTuOc09CvmH29nv/MuxlSj7cTiy
sjK/sr9yqPLo0s5x9P8U+TNLkbFH9uTn5+nrTu7JoYxve9cE2r/O9Yzw/eaa
tnA/QH7satbvK8lfRJuzST/SyNrnGjgDY7mdPk+k75tLmQ/vIH+S724h8/tt
5E8gfxPl5ymLuH9wf6ZM7fvkfEn/m3G+J0jvzLENyD9D+Ubkd3eOUl6g/Czy
O5Bfh/w95EcjfRO/d5TFyP9eiTzhXPEvv2N53ifxO5OxTMV4TyZ9I/XfcG3r
y3y3OL8tSzmn43mQazqX8R3NNe7D/R6b6x2d9nuS34v8+dS5mrpL0P4mx8f5
1qNsM47tSdn+5DcjvzH5PZQPq5EV7XM37scizlHUec/5kXd5b45d7vfKGB4j
vTu/SQq55+dVM3c7l7qGX+zcxP07lb74G/U+TuI8RtndjKfbO99ElF3mOavZ
D13UHxlGWcb1b0PyT3O+Wymbj/YHkd+S9iNJH9HK97Zy7/s6xzWd/FyUX035
trRh2KP6PJuyu3ynGMzJ9DcD+X0on7EQGeVS8ldSvtdg3vnpyD/NPVyTvu6h
/DTOdTPl9yhP8rz25vncxPUeS/oYfouQX4zf8aTfY/yLOB86T5Lfij6eqeQb
9Vs9kWNLUPcKyheivwPIz+f+it/+pJeifpuys+rZ27hncu80C/mrab87dWYl
PSkXtwfp2Uk/y/V/yvvwp7I/9e9lvB8whq/JX03+fdOt7O8qpIeovxntR6P/
Oygv+m2Tv4z691P+IuWf0d9f5F+i/CHazsV59uF8d9HHTO7HuT8rc68W5rpW
cb9E/a+ofw3156fsZvpe3v0jvy/cK3INyykL8xubvtbifP8biox5AvWvq2Ru
2Y5j01H+Cef4zv0U/X2kTqSSd3styiegfHx+q5Fe3D0Nfd/JOVYhPzO/b3z2
1L+zkHOOa/1ynpU6i4fpb2GOHU3+aa5njlrWi5WofxzHFqXsZtpfyvl2Ij8D
+ccon7mQNXr6etbrS4rR9zyjfMo7cyj34yB+97j3rEdXsh/153G/0cnz9Tm/
QP0tyY/DOAdpXyP/D/fgFp79H+6JuZd/ew/Jf6fM6NzPsWcoG53+z25mTXZt
bvA7gfQd/JYlvQTnWJ4+n3eOpf4pzq/ee9psVcqe9BL62oXzz0H9G2j3Pue/
jv8fqU/h2PWk36H9h+QXK2V9v4lj81PW4nci6UHuz/n0vbz7BvKb0l+H9FUc
+4v8xp2MbTXyr5L/k/Pf0BcZV1n3P/K3K/84J5D/hzorUf8u/n/IeH7knBWu
ZXWO3e09Y8wvMJ5JGc+5tD1YncFw9Bcj+b8i7/A6/L/P66D9Vpx/PPIV1+9G
9lofU/cTfgdS52P6+53+nmB8g+61qV+n7njeO9rvQ533qHs951uUaz2Z8axK
/Q2L0bncW8/51uV3P+nT+HV739NN/H+7mnuxoXJkPXty9+Yj6O+7StrY9jGe
x2zqZMhvRX4j8ms6tzCmo7g3u5K/m/EvW8/ec/pS9pPuyd2bH6e+hnPdzviX
ZbzjKDsw/puVKYYiA81N3RrlJe73iZz7Scrn5f+blG/BsadcH2j3BvlD6fN6
6s/Bsde9V84h5A9ibK+SX5P/T3nvuX/v0vfbrg88jz3q+Vbfps5e9eTfUp9C
+w/9dprJ78nx1zh/mevbgmt5ShlU3R7j29hvlfyd1N2Bei8NRWZRdtnVdkMZ
wy6muSfXFaNLfa6b+urmXqZ8J/fblI9NfifGeqmyGsc2pOwg2lzJta3G+N9g
/MtT5znKRqtkLA9QZzO/V58H6TOoPyXpmerZO6jTdH+8pvo22n9C+d+Mf9Fa
5v7NXO8oX4vyD1zLXJ8Zy1ydfI9+ly+rP6L8NcpHo3x7yv+qZO68gnOs6nyj
TpOyidRNUH+iTtZX11n3SiXqX0TdC/mtTP3DqPewcz/5TeqZs5y7SsWsJ+tw
vo/UJ5Dfl76XJ/+U+zXyy5FemvpnUL+PMS6srozzner3yXle4nxrU+dD6n+m
Po7rfdnrH8wcMBXP62xlUJ7no/SxJX2N28n6/jD3Yn3ar0++j/Tqfk/Uf6qR
++t9fpryNSn/kvzXtPlfK/oLdZGbc2wK6pS60b8oK71JegnO/7Brrc9D3Shj
/ov0ttSflvzClN83EB3AG43oR9VF3GIfnP9Y5aGh6Ljb6vzKeV/W59gk9byP
U3P9F3NdI73flP9YyDs0ae9825Demt8I8nsx3qkKOTaNa0snst0I+j+K9Jjq
PDn3JhybjPIt1dcpj5GfnPzi9cgGn1N/2Z7+7APfTY5t417V75b0hoPR363N
sRuUJdSfkX+fOWAz0vdzbFPKTqhFFnhMGYT8jox3Lc73EPnN6xmDY/mZOgPu
Reh/a9o/7JxA2Szu6cm/SH578ltUIju9QH478sfw+2coc9w1XPuS5E9VnmX8
a3HuedvRp+1Eu43UNzhHDhVGCYTrUD6NOnb3u+QvIj8P9W8aiEz2DM9rQfdr
5P8jvzL571vR3X6j7Eh/iymfMZ4b1GFwf38nf436G3Uo1P2E891fyh5lIfKf
kn+glD3couS3Jf885z/B/Wkt1+i1ugc6hfvxmTaSUvaAS1D/T/VVlI/HeH7V
PuF8PBQdjPabZxnjhcXokJYlPSu/A/yeKd/QtZzr2Vd9J3VmI70m1zA951nV
/aiyHceeLkTnco1zK8fus29lYs6/ljpxrn189UvON/R/KvWvcr9C/xdSdnop
OiB1QWtrY6D/86izMeU/0+e4Q9mjz0V61Wbq78h51uhGBlEW8X340XJtAtT/
yu+R/Jf8hsjvQ5uvOH+N84+kbJ9q9EmrU/+LobzjI9rZj7xYyj1e2m+BMY03
lD3kX6Qfovwb5+tS9i8HMY5PKT+qZ/8pkJ/Q9Z/kMbxfY1D/eequzrHR6e/x
dtYG14gXKVuPMaynjoD6O9LfZvz2dW2izd7qXhvRjX7gflHdQyO2pzVoPwb9
jUF/m/p+0eebpK/iXtyt7p/6D6jv5NgelO3BsW9ovw7n29F9Y6//RXyWA5lD
nUvvov5h1D9XmYv6O/JbpT86NnVtTcpnoOx32p1LX7e2s9Yuyfifp3xZjm1c
yzOeQF1RN3os9Vm3Ufcz7QGk3+LYadqvOOeTxcgwG3Ntn/B7oJg2tv2H/+tR
f/2ByAvXqu/nfGeVsr7v1Iht8HHafEn6Dq5tOmUT52TS25cjK03PsXfV9TCG
CWj7PmXn9ewl51C+LuV/k76X8iPofy9lRMa6LnWW5vi65N9irNdwz5em7q8c
O4uytzl2Tyk6tjlaeeY++6Wo8wt1Zm7HdrQF43mS8f3CPbmiL3uEdy3zGkgf
Wcp88gv9PUH6T9rsSPkP9LEY6cUHom94rpr+FyX/PelVmpnvruBZV7SnqYuh
rEif66mbYDwrkJ+c+/M66WsZ/3Lkf6ft2dQ/VNmb/hbWhuZen/PfW4rNcl6u
Z9JyzvUC7e/2O6P8cZ8/x7ZjfKt0Ip8qp2ob+EobgLpOyjdpZ4/lXutadXjk
b6F80Z4MrCx8O+f4X390hOoKXYNdi9cpRh/xN21GuHbR326kl+Ie3uL+SH06
174/51+GfjZQH075JPx2H4jNUttljfxqpF/ifrxIejnGsyn35TT6mKgZmUPZ
Y0P6O5zjq1E+PvfhcZ7RXo6NOseTbirDN7MmuTbtQP0TqT/gnta1hf5OdT1h
PPcNZU27gPOV6OOuvujQ1aWvTv+TqYehvNnKmufatwbX+566E/p8V1mG8oWU
dZXPBjMfvu7espH7dyvtPqCvS0kv4H6KOh/wfxPtD8px1H+TOrcy5ok5/0vq
BGhbUT9eiMxTJb1YI/diSvITU3fyRnSDvlO3tLOmurY+43xKv89y7EnOtUEh
83ufNmn3i9R7vZs12rVaGbmpfqIcW7f2V+2wLeofprzFeGqt2IS0DZ1LnT+4
3gHtz+qauF8Pkv6Q8/1M+S/8PiK9Pn3cRv+3F2K/XZf8Leof6HMd0ttyDY+U
YpPV3vgT/Tcov6UUe0GxHt39q8qPlcgoyirqnC+l7g+0P5Pzf6g+l/bbkX+U
sl94h7bi/D/5/Mk3/FG2fTP5aftjX/y6nvP/SP3Nqb815Q+VYhPWHvpLJ/L6
B9XYa6vK/5z/sULmq//VYs91vVqiEp2NupvrfB617C9rQ8Fo/KA9tJnvTZvu
KvS/IfXvpHwtr7eW/p0LV+d6K6Q3cM9NfpVS9As/qnPjeq9VP0O6wbG5SI9f
iP15QcZ7nftJfrO5XpC/ifSNlM9B+juOnUT7uTn/CNJ/KMNRNnMp8vXC1LmR
+kuSv558H+WTkN/Wd2w459PW/Qv5GukB6s8+lDX6C+7fRq5JQ5GZTud+1Clf
ivyl/GZUv03+dtIrOgc7t3MPvuqLjK6svrIyuvM2+fWo+xNtLqZ8ScY7O+kl
OLYu92YX3tNd1E/TfmrK9inkfpa4h3eRPlodq7YHbaCunfTxKek5eY5f9mU9
dV0tkb+U/Ar0sS3pmfh9Qn5mfgXOcTy/d0hPy+9SrufXVuZe5+CRyqbagwZi
A3qd/E2co0rdFcUnqG/wHVH+4NiU9P2D+gHyL5CfvBoboLbAuUnv7vvVzvru
Oj8a+SO53r+4F2MOZr68jv7LffmGFqXsmkr2b586ZvqYlfzpxVyj9surxXCQ
XlydprYHfm9pO6beHu7PqfMz5fPyq3DOcjvrketSV1uZe3b6e5Xyqaj7Yyu2
jpULsXcPU+83dWeUz+haVw2WYAxlHtK/MsatqX8P1/0w/Y3BeMaj7BvaLaN8
zf8DqT8+x74l/T9+B5OfUP0F6S+0B/YFE/CV+8tKvt/f6PML8pfT3wDlC6kz
Z2ybec+8d/Rxm99KPeefhPNfQPpnbZbkN/WZcGx6bVauHWIOSM9YCV7pjb7o
Z3+lzmfUfY381ORv0B7fF0zDdpxvpkrkP/tQ33sl5YOk51P/S/qvVmQLZYDX
6rG/z+t+m37PrUcuWbpXrqzwGf0dQvtfOfZ5OZgAsQF/9/Rxs1SCT/mCOnOo
Xy7HtruuNuta9O3O1c7ZU1N3J+7/zJzrGs71trYf9fu0f4o6E9P+SPp8170N
79OEndjMtZ1rH1W/fjzlH1J+oPtN9+qt2AO1C4r1eqcR/eMH1DlO25s6hlJk
IuXjvRjPg5xrHcZ3KuPbmHaz9eeZLqPsU479UZurttcNlcH6cw+WKmeP5l7N
d/YQ1zvO/ztl81Nvz27sd9pmttHmQ7pFmyL9/eIzIH+u72dfbKDX9uwT2gYE
0U2kfoxrupN8h7q70t995O8gv3E988s8jdz7Q+n/KM6tcW15dWfu96nT4djI
vtg+d+tGTluuNx/8Rnpj1yzG8zR1JiM/nvtrym7ty3o7RH8rU3866rxLX4eq
F6RsIn7nV4K5EHvhPT1LXaZ6vkJ0mi3a99F+xYHYfLX9io+6lrLVfD8pP5lj
t5Feyv2u+gL6eM/3iTpTiGWg/eoDwfQcpjzO9V9N2dbV2KcnquZd2d1n4r6H
9u+U8gx8Fu73vZbFeL5HuX5R58a+2KS0TW3gnKqt1D0z17N2Jevzz5zz03Jw
ceLjnLOdu7dnPBOR370QeXWFSuRbZbZ+dU0cm5jyPQqRt1fslY/LOR4ox6b5
Pvfi0Z6t0/szIfV3sP927NMTkN9eewTX8qX624GsbddSfzbKR1NXXMr+QX2A
c/3TlI+g/MVmdJFiGMUy/qOdm/JZqP8v6Qs6WUtNr0D988nP5PMjv7xYuFbG
6piV3deoRP74RXmW9PKV7E9cc0v1YChfUZfY+9726eY67WNB1076H38gsux1
lP3UCBZpbvpZuBt7+ugD2e9tTdl4teBXSBbG1X7UCj7hkeHgX56k3eZin8Rb
lIOLER/jnCM27gjqPUH69mLwmNPSfqg/GMZt6fQLflXyK2m/5F7tTZ83uK5w
bLpWcBviN5xjxYY+zvk26YuNS1vXe7Tv68+co73mm0awdnNSb0H62oX8mOS7
1JlVvBp13ijmmc1Ofm5+Y/XnHrrXcw97EO/mdeXsTz+m/QDlH1N+Mm0XrSZ/
BOe/i3McL9bA58vvRdLT0F9/f2x0m6rrpb8tByJD30B+LfXNxZxzHuo+0gre
6MHh4FPExP7muzQcrOyl5PvV93G+uXl2H3lvKJ+RPhYlvRHls6r77Olb/mJ8
a3O+Y10/qtHHWDZZKft1f6Y3qfX28s3sPYqc48Jm9kxTUL5ZLXup6xj/jvT3
PHWudb+qvq0vGJPvOf+01L+kkDFe5lpNne0GMmfdxbnHdw1ifP/27COLNJIW
cyb27FPtp33BEL5NfwtT/o9zLb9xXBv9uZ+n3lLOL9qIxIaof2llv7/BQL6p
sZqxcWjr0IZ4Os+zv5K1dVn1D/S/I31sVI6MuDXtT6C80BcbuLbwX8rZK03E
O7Aj96BL/xvT/xXqz8Xj1CJbiaETS7cD/Q1oB6f/U9UFNYMdGYP+5qT/makz
/0AwidonxSO8XgoGSyzWv7S9sC86c3XnxVpsLWcXFJgp62SvqC1rpW70M+oy
1GlMzrm+53cG7TevBr8i3vdT5Sn+n0GbaSi/yEukziWkL2jmWT/lGq6sxzkX
IX2Ve4h6ZGjxM+JolK13os5Zhdyj80mfQNlHXN+46rC0q1Vji164EH3Uea3o
Bt9RR0X9fxvBIu5D+y/IL1sO1tA13bX9Aer/1h9MTasVHJG6goe9BtKP0Of6
fbEBaQv6vJm+xDh+X4+NRFvJhuKVmsF8if3ynSxU8/1b5hz0VQ+Pehz516hz
PuP/lWOTULYtx16l/VWM4SXK2vR/Jvnn68GSO+eIB7paGwPl3d76+gLlKxYy
B2pvWqAc7KE6ZXXL23MPz+A8uxSCj/YnVvqjSsqWFu/YFxlmw56871q+A2M6
TJm6kXszSU9eeIo+FyO/jvZ77Rs8r18Zy5H0tzHlL3Ns677oaNXVbsOx1yjb
kWNveX8Y/xfufenjP3W59L8b55q8L/KveCD3LkdSZ5vh4P60jaqTqZPeVhlO
uYg67zuXahMj/SN9fEB/v9PfpMUce7MZXKG6kYcKwZt4Ds91USWyt/4B2jPE
xIuN34b26/ZljXCtUN4TazI71/NfOfK17R3zEWKr6G/PvuzZvuP829HnB/S9
F8c+cS/YzLu/aTV4tX/of+pi2nzczH5LLJKYnBO0pVRiX1qQ829Bmy0audd3
0v9W1N+cPi6nXj/111BXW877sx11XqbtVZ28C/Mop1B3qnKwOWLKllfe7+Rd
ch3bkvLneu239/2rZMy/kD99ONcyUzm2UG16i9HnLOVgTbR5LU7+lUra/uT6
47ka0Q0fpL2pk2fu9+p367vwUjnPx/fhddrexD1+m7FNzfXd2ArGTaybOqOf
Kf+Q+lMV87zfJf9eL79HX+bkj8u5n97vDyt5JxzLacN5V9ZvZG2/SXlTXXcz
39qL2nW8fuVd8j9Q/nw5+NenOf/ljOeUZubopchvVc3cfQX5F8j3UX65+hD6
XNW9N8emIn8lvxdJNyk/g/bramtwP0u+XAkOWDzwX5zva8quYJwXFlLnn0rs
nef2ZU50bnRON/93JXP9r5XMt64pri1PV4KlObg/mLrrOf/rvf5H4/zPco6J
i7nG59WTtjL3jEn7a1qRj5xfNqL8McrnLwfLrM1K29W85cwX+kx8Qnr1crBa
U7D+7Mrz34IxjVsOnnVmnvd6lez/xIivL36pkee1G+XvMZ7RlSudHzh2TTky
1srk76lE9lqMNoP9+QYfqqT+AHX/JL9ANX4Q6t6UQdek/MtydGPusd1rKwMq
C65F/fvVNTQjO6nTv72db8pv65K+zM/ah671eWt/ov6EtG+QbmjfouzOSvYi
ylzKXs8os1Peco/ifFLJ2qMMuDD5qVvZW+7mHNAN5l7s/U+99+k+8TfFyGiL
UH8v8g+THya/eE8fMXl/3sGzhoMxFGuoiVB8n8//UtLz9WfNPa0SW+cS6kuq
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
7rPUZtsOR6pYB6cu+Y9fa8W++i3lG1K+XyPclXJYvupcqo2a8R7DGI6uxb9Z
bp+2OgLqX9UNz6Vt1iV/gPqDYjADB7XjnyiXihwxcsVoWFXXJ0eLXC1iQrao
pU+xIstw7ImBYIzkA7y8nWf5uPhnns2S6sfIb06dsSi7sBGs+dXaPDrRKTTV
Sw1G16A/pHvhacifQr7UCF+WOv3TyJ/ejq5BTqrrG/EXXZCxXEZ/83TSp33r
g+/97fAM59MXrRD7ij6u+roOU35tM+PxWagj36HnH6lv4yTUP6kcncrO5Z6/
OudeoBNblvao98ifQH7L4XBEHaw+uZ1vTey9fGZy6NbIH1CP//xAI/qZ2Wl/
ptfbSFodjv2f3I7uRYz25Y3YOMR5ivfU9qH/8gJc72Tkj2vHP0Td9IQ+c/LH
KoMNxsf5xEb846ehvKO+pJ3952rF6ETOaYd/eFHGczDXNH0nmISza9H/+b3N
0AmXleXTkf6b67hyKBxr8qnpj3tmMTbR8VtZE10bpx6MbulIfuMMhrP6I8rn
pY/Lh8LJ9hplR7SD1Rmd32TKZ81wDVlnvk50VJuXo79Sd7U0v8cH8s757vn9
yKUlZ5DcQe904ivsO+W7pf15LsdGf7+1I+9r+9YGprytzkDdwXaD8W9xjz1q
rz0U29WV2tCGwzki3/iv7fTV4XzPtsKJoTw9Acf+oOz3dtL6UL1A2b/tcM1p
w9KW9af6tqH4zA77PrkHGYrOWC7viRqZ+9VZKE9+wLEZiqnzTzv8GldTPiP5
Uif9X0l+Bvcz5Kek/ZZD4Qsai3yxk7rT0v/ntJ2qEVuJNuDv2tmviDXwGxnu
ZH/k3mcW8v2dcPDpT7Mi+VYn/G8bl/IOKQ9e10iZnHrNTviV5A6SA3vadvRL
a1N3ZfUzlJ3dji+lPtk3u38iP/VQfJgr7dj4Ninnmrxf2gz1BX62kOchhuDv
Wp6pz1b+Etf+1fgt3Ix/g7ovdYZ+P9Pym64Qjhm5ZkY0MheIsdioE4zDb7Uc
E/sg393mtF+zmPll/kZ8qeSokKtCPg6xAOpA5E8QYy/WXs4n9+NibPQN3LYQ
7M17jGd6+ioNht9Ce/uJlL2n30E3/VvmPfBeyLEr164+k6PsUepHBvPO+O7c
0A1Pkcd2Jb9HO9zDQ+prSW/E77uBcBJ8UY+9a5Tv3UB0PRu0s3acTH+zMfYd
GllrHqHO5649rXDb28fG1F2pHWybGF7lx+0a4QYT47VKO/EI3Iu9Qn7lduJD
vFQMh5hcYp1OuPZX7ckbrjdyWUxB+YetYMqOq+QaxJpt2Y6vp3jHH7VBtoKf
lhNWbljx9WLn/ya/Szv8Y3KDyxFu7AU5D08thw9RLkQ5vKaqZ46SL2DbdnzB
xWPK9bBfO74PYir399yd6KfVrYnPeaMVLv0faLNZO5iRaavh61a+kA9BrrEP
h+Oveb02ZZ7PT9T/2v1gI9xT2tS1rYtx1PdSm5DYx03b6Vubmdwq+lTrWy3n
vLE3Hm2ED0AMpVhK+YKUneQUPZ6xPUybC0lP1xf7xo6V+D7PWAiXqDZEbYn6
lE7ZjE1S26Qy+Yed6LTVbevPtRd9v9qJvUhMovY3dZjqMuWvk5tJHay6WHVm
71H37UrsdWKi9Q15tBNbuTp5dfPawLWFGy9D7i052PXBEOMg1kF+cu3zYtDl
ItDmpe1LnenMXN9T7peLseXO1I2OWF2xMrmyufKgvob6SSvvKN/rs6SO9a9m
9s/6IGmT6mtFvyO2QJn22ka+f7FOrgnf0teHzfi2eD1ivR/j/IViuOKNX6G+
T2yMOrN3qD96I9gzfaXkP/b9EFskRm2MVvy55Uf+qBAuaDEIYhHkYxdL5Psp
15xz9nidcCTKleh8/UUr86HYh+UZw/mc64lO/DH03Ziassc70U1rk9Y2vSfn
+6gUjnK5ytUvifWQf2PpRvxzdu9dn74hzqdis1wDfujJy2KtlOd/6gTjINZB
f5L1WrFxa+t2jneu1794xWp0Lvr7GQ9AW7v+kO65X/X9KWcN0L4gns939ZtC
uLbk51DWnmsw64H2IDEG+t9f3Ik9SYyFPgkHN+NvoeymTUvb1tOd6Bb07Zml
G32G3Mwtjm1Jf+c1cu/kEJFLxJgYfs/6ToufFWMu1lx7r9xq+vAr9zsmx6bP
nb767vHc6+nzr01rA+9xM9+8vtonFDIX6DMrDls89r7t+NiKuxZ/vVc7Pub6
musvvEcj+s7NCuG8XKGT/ZHYSr95v33xafpZ+U5+0IwNW1u2OtXXmtFhqMvQ
R1QuS23g2sLFtDzZyZyxbSV7Lvv7thn/S/0wx+iGv1buEvkv5MHQB11fdHVK
UzfjU6qfizZjbcf6iGu3VaegP4c+ovqKquP5txO8klwd+icf3ghf87OV+CTq
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
yQ==
            "]], Polygon3DBox[CompressedData["
1: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
2X5rfg==
            "]], 
           Polygon3DBox[{{4764, 2269, 2209, 2208, 2374, 3718}, {3702, 2347, 
            2184, 2185, 2348, 3703}}]},
          Annotation[#, "Charting`Private`Tag$162666#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt1ElsTVEYAOC/dOKZWYgFESESYSeRIBIrYkhYCbEgNpq0Uq1qETU8VNVQ
osQUYtywEENIiLmmEkVrrHZTGkIQ8/hdsXjv/Pf7//+ce+857/WfPW9qQUZE
9PO1KjMiie+0j8gXbM6OuNg5ohtrYuvYXjWXWD/2nu1hmxQc5sPYL3acXe4e
cUz/aJaSe9Ul4go/I57IGrMiPrAGVqtuBptkngHyb9kNlseG93AfORE/2W25
NmuX8S2sd7uIOnVfWAUbIT+E3bN2Pd/G9qsbw46bu0X+EJtqHNU1YgpvU3eS
jTGOY3PYF/EVNt7a1/SXsO967rN84wLXv9Rk5UY8YNPEC9nrThF/xA9Zrb4y
9oZliBtYgd6BHSMW8fYsW38jvy4exJfwn2oesTzPdIMvZR2Mj1l5KqJQvpyl
WI7+cz5P5G66XsF/y59nT9ktlmaf3EN38TNWJL+anTNX2IPnhjq5Idav4Bms
ic33HENZJesp/4Kt1FOiv4plqWtmB829QO0GlsNaWKma9a6zXfeyx/VsLiti
F+zDV/FlNtM4m51m78Qn2GTjSPswmbea9yAbm5wtNoo1i2vYYnuckh/MHrM1
bK150uIj7JbcZ++wlFe7/2/Oz025l2wua3Vvb9g+PbV8OutqrE/Ombmv6p/A
KvS2eoaL/FRybtgPZ7yRHWNHk/fEPurpo3YnO8D6sj7OzxxWwXbr9QjxVO8a
1zvVFNunLslZdi+r2Q5WxNxizEr2jtV457v0es3xRO8KdtbFdrXJFs5UV9Uh
YlnSr86WxSrzVbKlbBsTRlpxmbjau6nRm5v85i00Xf9idVvlCqDLWK6/LPn9
s3ymPB5YuyT5rZtnU+a/oxPTFBezjWwjy0z2PnkWCxbyLRq1xV1faZb80VQq
cguR6xkK1eb9/9/5C/denqg=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzjkvhHEUxeGrorGbGTtjX2qJz0A31kQjgkpoJJZWx0zlExC1fYtdrBF6
34FoNErPFCfnnvO79/++6amFzHxBRMzRfXHERllEc3lEll+URCyVRqyb1yoj
EnKV+UiX4Mf8UvdQEdGPJ80Jc9p9O7XQlW4LW7abc5OSk3ZasTYqxL70s7pq
7JpO7M7o33U38opcwwfkX7rAdt1+u9vjtdg+v8z/Q/4bNO3mkW/az+ofzB12
OmkGW6UJfZ3bQTsH+kPqoz95B6vHUuZTu2d0K2/rn73VYH7iGXyIivQvcpf7
RbkR7zaf5/9dfsM/+J2+Rz9qbjKP8ALsk4bNP9gkb8ZevZfTj8njeSb34mms
Vv4H+u44ow==
        "]], Line3DBox[CompressedData["
1:eJwVzrcyhHEUhvGjYeTUrDxyzka4BSW9VFgaOgpp3cBqcAPGFajknHbdyg6D
C/BTPPOe8z7f+c/XvLQ+s5YXEat4KI04L49IVERcyPuyiC15VxlxWBUxVx1R
J/vsA+jHg29O9Nu+S7trsdfIS/sVnuzz/I651fyIQXdDKNQ/23e5Azdt5lp5
bb9BET8rz3zbzr1gSjdsH8GbfY/vkCl3+///J+uxrM/II/+b1r+bR92MIcml
cMwtcPtcAxrx7q2srp7rNCfkBjaR5U+5cW98ooufkLfeauLuZDGf0U/qu2VO
n3S7ghLuW79o7uG+zI+6nCzQ9ery5atu2vzhdor7RZ/9R/4BSng3hA==
        "]], Line3DBox[CompressedData["
1:eJwVzscuBGAYheHfBehr7Q6UIFGiDKNHYsMwLCwRLoBEL7egiz3WSNyBjVFH
H+0KCFYeizfn+845fykanugZTwshjOEjPYSOrBB20YmhzBDa6QraMJUbwrtO
i3kHrRjUidJlzMlTOSG86TTZt9GMuM4zPyZfskfwqtNAt9CIAZ0T+XF2CN26
R/RF58BcyP/NcD9SvH1eAe/HPotnXoI3yku655t3Q6/xJIvyL81X+JJd0HOM
8B/lM7x88547HuzT9k+c2SP8hO49f8M/T/1rk/bzJmX15kXU4U6nhq6jFnny
mF61eQFVuNWppGv/5+RP3ujTqbDPoxxJnbis1LyKMvTqlNBD7xfTLvwB0B5D
eg==
        "]], Line3DBox[CompressedData["
1:eJwV0EcyRGEUhuEjltQ6WIEVyHkDGAgtZ9VGNNoGmFCUsWwqmzG2ACNroIQq
q+DpwVtfOOe/97+3MVfIbpZERB6/iYihVMRLOmKYLiUjjnDF7zdENNVHrMkj
chaj+NO9ZiL6za/lZjlvZ4yfwDhCPqiJuOFbzNflSX4aU6h3tkx3y9+h1U6p
/OS5SbMKvk1XTp91Kd0y366rpAPyO/1ANY5xaS+nr+K/8YNanGBQ3+FsDb9L
03InrZP3aIKu6E5pl7xBV/2TPNaQMUvqznDvvt12NvkZfhbb5p/Fe+rO8aDr
sVPgv/Q75vO6OaR1F3jke+1s8QvmC8X/j0Vkit+DN+/us3Oo+wds+DJm
        "]], Line3DBox[CompressedData["
1:eJwNzskug3EYRvH3MyzVdAW9CJcg9vaUGhcdcCWGuzBFYk3iHmhLi0Qlvo5m
G0P8Fk/e75zzT9psvjxbSiIiZ18jEWfjEec2Z1u2PxnRn4j41DbwpjXGIsru
ntbTPrQiLlld63K7WgG/a5nRiDXfHf6YX/f9xp/iLE7wsA3ZK9/yvsTX9L9M
RIqf7EWrckXtEf9qTffBnrWKVtDu8Y92587gK76vN/CtfWt1d1q71HragN8e
tBv/f4c/4bt84t01t81dcB1u1bsj3MY1bQUvW1tbcg+1llbV8njRUi3lDrR5
XNEW3JxN8f8Pukag
        "]], Line3DBox[CompressedData["
1:eJwVz0cyg3EYx/HHRpQJiTeJbsQFOIDeNtg4ATkAC6KzIxewS3ICJdzEBZS1
MpaMMuNj8Z1fe975z1ssba5uNEVECR/piKtMxFY24prmOiMu6CWqXRGVJCLR
nXZEpN2866q6cTmvb9alcO++od/my24m7F98C1qR2B7clPkfTNq/aRvakbM/
2X/5Kdsjf65LeSOjm9YV+CXdGV/zxijfravIdXlM/vQ/Pbqsb+ryjK1X3pH3
sIt++cZWpQ3vzLrp45+xJr/QvH2Q1nDnmzk3A/wr3lCwr9M65m1DdFm37/YA
RXlBP0xX9Ee6Exxj5P9979xi0c2h7g8/zTHs
        "]], Line3DBox[CompressedData["
1:eJwVzrsuhGEUheGtYM7n6ZwiwbUYjTEJF6ASEqqRSDBqF6A0NM56EjLhOoRC
BoOW2vMXb9b+1lp755ta2WxtDEXEKurFiMdyxHsl4om2ShE1uoMq2jVvnbK5
hwoWdUp0WfZa1ZPfe/fdeKBN+Qt/Sb7tXUz2dK7lN5jEs2xdZw1lWV6ngFn+
gv2cOYuS7Cf5G/9Pd9T8jS8UZX3evqyju2Xvin+JguyOf26+QFu2p7OLDj8v
/+QP2x8k9/gf9FD2y8vJ07wM5u0e5CNO5NnkLsbMx7oTdBwZ3ojumzlFZ2QN
e13vOfeOaFqnZ56WVWkdNaT4Xd4tHdg90z1FQ/YPKrk0fw==
        "]], Line3DBox[CompressedData["
1:eJwVzzkzg3EUxeGrMRSx1kgiqPgAieUD2I0ZNY2ODq19a3R6ZnwPWcSMJHZ6
jdIoMFSeFGfOPb9z7zv/N7W0OrfSEBHL9NoScdwacUT9bRGzcr49olTPHRG1
zogXbAzrk0d5zd4M9qZrpCZ8SG7mn/oi9sV/6Juq9hPYuX5E/pCf7WfkXqrq
rvEnrEtO0QD2x9M0jRe955H/yjldkpfdPGCFREQWO8WusHtswryAzbs7pAPq
waZ0F/i7+c48SCU3ZV7Bu/Fb8779jHfu8T6+oTurv9dcwGp2dvkOLeqGfWMS
y/EK38bTdtd1xfo/1t9ESSyvuzGv6bbMWTebPKUbxy/NJ+Z/Jnw9Bw==
        "]], Line3DBox[CompressedData["
1:eJwVz7kuRHEcxfG/iNb6BCqMCHoSe+yFfQaNQmhslREasRR2FU/gBUQlERFE
w+jIiDVREwVCwmeKb86555z7y735Q+MdY2khhCm8ZobQlhNCO1rxmR3CoGw0
N4RJJPNCSMe7fMnzMubQbNuCAdsL+is7siunL7LtrBDK+C16oO+XHer3+Su3
vukXEnxMt6N74yN013sffFTeZPNMN90p0p3rRvg+WaPuif7IKnUxWooSPMpX
6QpmkaGvwAK/iAf9BL2X/dFuN+vdq0MDevXDusvUht/QR/l1Wkx7ZNf6CH9s
H6fTmEnd0iV0RXwh7jyvpb7fP8XlZ7J5vkteQM90ydT30mq39mxObWr5TnkN
vaGF8h35Ld+BKvmW90/oP7CKRS0=
        "]], Line3DBox[CompressedData["
1:eJwVzjkvxFEUhvEj0ZDYK6WKmEXiA6BTEUFtGcYYy+jVegkRXwDfQLQKzCpo
JRIFicLSIKj8/sXNc87znnPv7cttTZeaIiLvvLRHlDsihjoj5tT3zryT0W/3
RNx0R+yrK2ayuCAbwEUsyIflVdlFW8QgP9UV8SCb4I9beP2l7Eh/Y74fc/Ir
rmYvxS3pU3aXsc4dqG/NpWWtmOfTuILj7ivbHZO96if5NxzVV/h3dZb7wEeu
2anyDfcWuCKu4g5/6J2a+76wyH1iL39s/zvJ7J2od7k7/VryP+7Uzgj3pD9T
P+OevCG7M5+RrSd/5jZw2sy1d+t4LvvlZ9Sbsh91CWf1f8kd+A/C20CV
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvw3EYxfHHLO4bFm/AogOLhNiFRF0nEmFR9zuvQgSbSYsXYJF4A9pS
dXkFgoWSGFw/HU7Oc875/n9p2jKe6p+piIhJKlVH9NZFpPgjzdJObURXQ8Rl
VcSc/ETzlNYlsQOUtWVrIhLYBdszNdqP6iPadTlbDpPnHXJaP2V/wS1Sp+7K
lsdc80FvZjDTmD73Ema3zNi7de9ySf7g17pW3bJ7hXrcBd2qe42G5Bv5s8z6
pkm+8PY4FfWVfN1WsDXbjuU2+pJv7d98yG840e2X35I38MO6H/cd5o+PyKeY
A8yvvIkZ1QXdYzL6MXcCs2UrYrb5hPxgP7ef2V91Sf/BG9/DHNI/6sJEeA==

        "]], Line3DBox[CompressedData["
1:eJwVzrkuhGEYhuFXb1fQidj3aAQnQIUoqTBUjNBKGPvM2E5A7GtJOAc0YmkU
Cg4Arc41xZ37e5/3+b7/rxqbGUrmRUQSbUURV5gsjrjkduwWRiTMv86DZRGt
fIFx2TlP8I5OV2nEi/07t8jPsFkScco9skp+te92fpL3ufPGFbI7WbP9CY6R
kI15d1vnx9yEI+Tr3ds9cie27LPeaLQbkB/IXs0N5r+CiH7Zfu6/ZPWy4dy7
fIgDzOX+0RvTOh92v5xEnXyeM+5NcZq//E9Wd0+vyFyr02sudS6X3eotYgQp
FMrTvM4LvMY3ehtc4+4qz/I+OuQPOqO+kfHmst23vBrXdinzEhbxqZPWWXHO
xzP+AQfRPqA=
        "]], Line3DBox[CompressedData["
1:eJwV0ckuw3EUxfHb7iyMfQJvQFtTEIKNpe4kbNggVTyCJTG0ZlZszUM8ha1I
kIgEtW7t8enim3N/55x780/+rVMLuUIiIvLobYy4xXZzxA0tNEUcNUQspSJe
WyK6eaPePfSQlvTuZVVZF+8aeTtXdJ4e6CzK58w/vE5cYkj/go7QfZ1HneHa
DWTNJ/Td7T3ZoLlD9xwZ2YP3rHu7siovi19eTjZJB/BmN8PfMK9jGWPyY/oi
S8uevAPT5jOcYsbdHXcX+C+67bx+2ocne9uyXVlZL8lL4Ns8XhdRNG+hhC/e
Cl3FBJ7tJPHnxpYbvbx6tNW+kbeJO3mFlzKXdD7cKHun+Z/mNX6Rv04rtf/E
+wdsXkFG
        "]], Line3DBox[CompressedData["
1:eJwV0ckuA3AUxeHrAczDnndAIhTBC7AnEYkF0ShPwMaOiJ15HraqXQqJhQcQ
YyO18gClhhq+Lk5+955zz79t2jyaHJyqiIhJ6qyOKNBqVcR4TcQartRGZOoj
nuoibsyNNGBelzWYN/BK/lUZ8WsPWYu9iGP0za/CDF3zX727qXPutonu6Y6G
ZF0++9acwJLej04rP4lbOgncxjd5zt1F+Xtht/0RezDP+9Gdc7tIfbx57Mdh
fJAX8Nn9O2/He732XUzLlvi/+inegHymfMu/xBHKy1+oKJv2W7K8lHzCvOeN
FH7I0viJbbJ9/rLOAZ7y/7yf02uXzdgP+R1uj3DW/mU+wwX5d/n/0D2WJXkn
WOJlzf/PrUvE
        "]], Line3DBox[CompressedData["
1:eJwVz8kuA2AUxfHbSWKBloVhJ56ERSsxBPEEEokVktYQngBriiBiWJmnDopY
eQPxAl7D8Ovi5H+/c869ydc/szA1n4iIORruiOjJRRzSRXtEN17iR5cQU50R
aWpti5jFBC+LV9iBA3o1THpv262bq7wd8zXvx/1vcx8d07P8SN5rvmnepy/v
Cf6g7iQO4WLWXdqQLeEIr0ijdGK3zE/bPTWP8Uo0Tsu607I6/nrn3LvVy+Mn
v4FlOxneLt7hHtZkL7IVe3/2njHolVeUFfBed1+3BROyN15Jltd/4K3yktSg
TX4Kz/QfZQf4hOdYae7SVvMPuEYVWcGdKq57Z+id/gEbtjji
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz0srxGEYhvHHwplSrJUcViMrCmUxjezlsFSKxeTwARy+gYUJUSa7mWwx
ko3Dwg4LCUUsbbAe598srq77uZ/3/74zLZPzw3NlEZHGbFXEam3EUV1Ehrtq
IvLyTH1Ejo8bI171m+YtZKoj2vS9+lZeN7dzB7JyTt8pJ7Bj3nffhXzAOfO0
/aGcdGeBd3UnJZtPOWG/p+vzTcp7vfxud6ZL2vU5cy6v+N3N5h75Etf6K1zL
g/p7+QGP5n406AbMz/Kt+9bML/KP/Isb7/xxUZf37pP9nK5CnuUJ3xZxK39y
Oead+eYRZ764EmPyOLrtRnkRC0jZLfGdfpmn0KR78eaG7s29H6X/iiF9lgvY
RtrZf2q9QdU=
        "]], Line3DBox[CompressedData["
1:eJwV0DsvRFEUhuGlc638Aq1bJMxQEjIu02kkKpQKgyHuRCGh9gMo1QyNQhTi
UggJ45aMGEqFWhSeU7x51/q+nXN2dsNEbniqIiImMVUZ0VgTsYsmtFVHtPBB
bcRpfUSzeUjWwaeyFLfbO3kLm86kOSvb4zNn9jlln66LGNHPcA6Xuivc4Bpp
Z0r6ed0c8ihURXTLunQn5m33a+JWWQtf4E43ab/nW/sjP+De3C9/Nb8l37a/
86CsxGV7H76RlWV43/d/k3/qR2V/5qK7PeEFz+jRFXWL7reEBXzIy/jCue6T
e5074mX9IY8lb+AtjrGTvANnZHku6Gd53L7CG/of2ap5QLbOJ/a1pMM/wEZA
wA==
        "]], Line3DBox[CompressedData["
1:eJwVz7srhQEYx/HnbM457pfhGHDqjIyYFRFnOmJwWRik5JJiM2CQhfI3EGWT
UBxhEqVYzBbFhFwy+Ri+fd/n93ue9+3Njs0UphMRMYX5kohMaUQ9ntMRu2UR
K1jFMh5rIn50X/jFlfmbK3RVqEYlnuRnfIoiWu1scxvv8H4y4txOh+eTVESn
bx1zF1/wJVr0ec7ZvZN3u92T9fC17FZ3gzXdsrzA/f/I+uz04sG8pRvwPIgR
3bBsCEvyEX6RveLNO8ft5OVj/Gme5Tkk9PfyD37HhLvAARJIyw71i3ZH/dMC
l8uSuhTadRlz6f8uZlCLI6zr6jir33Q36X6Dc+ZBXYOuiEY0y7LchBX8Abky
OFM=
        "]], Line3DBox[CompressedData["
1:eJwV0EkrxnEUxfFrKONjowyxwd60wcbSUJREbB7KtCEiFNk+huRNGDaIkoWS
KCIlb8ArUCzMW5//4tu5/3POvf371YzN9c9mRcQCFvMjqoojqnFfFLGeitgp
jcjQV98pWoJiPPDzCiIe+Y36u7x97CXwW+izTittkJ8URrSZm8zNeLf3Ij/i
HWMTG/jgf+JZ50b+Zb50785+O++WLuudmK/kp/RJ3q3XhS0MYE02mMz6nfod
6NE95A/RYaRlIzppXpqO4o33jm83J3V6ZRN0Ct/8M50fmoM/9MmneL/mXIzZ
S9F5fg4/GzPJ2+Ecm/wSWqWz7ua4/8rQDZTxL7CtU07rdCrpCiqwilosya+T
HPU6+3ank3enB/gHFjI8xg==
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3ldP5lcFfoCiz0WYxEIPCIsMt1NWZ0N2kLhRSbuFKDC4/
MhwLhVKKDAaDgZKUQVFsRnl8h2evz72e78/7vt9ve3Z6OJ+KiDzSmYi/+ojP
5ogy6rDTFjHXEHHGfaGpJaIRt/qc/lj3gQldwXxrY8Qpl26KeE12yEP+Hc/O
3dyTLJtfR1X/himzJ9yk/LX3x54H52+5zb9gia+5+8WPyVFU9IvJTlkyO4Ih
9wZxpC/rH5HyX4PcgDvj+n65qn9AUX9p54Gul9uXC/p79DkX+Bpf5C6c93Tn
cp6/Q5e+mnyLZA5F3Q16zM1yeV2Fr/i9hU3M8NfJd+M7PduUmTUzVbnB78pc
8k78lezQZXUlMyvJs2MZGe/5D6BVQmE=
        "]], Line3DBox[CompressedData["
1:eJwVzz9LglEYhvGnJdSKAj9A2By0S+BSjUFBX8A5cmwJoi1B3SQyEBqChrYI
sgiMoj9LWNEQ5PCGi4OErS39HC7u576e9xzekyuW1rfGImIDN6mIH1xNRfxO
RgzRxCGO0MpGNEbpmwG+JyISVLkDu4o85/touSPhspmIM72HNf2SH+dO9ASr
3F864tjcxYI+0JfR0D9R5PadSbiu/MImV7f7wK7esXuXK/ybrPGvuOeXuHlZ
1l9Q0C/0PfMzrv3T4sjJU36He0Cea+rb5jvU9CfvfcSct+ZQ4tuo2N3ybczw
05h13z/tYDme
        "]], Line3DBox[CompressedData["
1:eJwV0L0rxXEUx/Fj8zjJaPAP4JaBbmITi5LhyiLLHbgYKAN1SYrFJmXxUAZl
ciOSUkp5SN3hqkvyEMogZSavO7z7nHPe5/v9ffs1DI/3jZVFxChOyyO+cVgd
sV4Z0Y25qogffVZmayOO+S+kayLW+HpMcf3cgZxEjv/ErHMzqLNT5N/VH3jD
Hv+GAfek0MeX27vnHlDEDv+CXu6vIuIXW/pHNJt16dfVPeqiXHL+1exZPiFj
vmpeQFaf5+5kASPcinkeSX1K38gv629L/0D9ZJbztn3Mm12iU92Bdm7XzrV3
3uAKs/wFEnwzknY2Sm/2T7axiWn+HEPcoj7j2y1oU5+4o1VO8IP8mcy4J80n
0MQd2WmUC/gHibZEyg==
        "]], Line3DBox[CompressedData["
1:eJwNzDsvAwAUxfGLpfWIweiRSNRMSDSRIKYOHomhCYNBJVIRFW1CUmNrZPAY
SBgQUgyNxcDoK/gCZWKxGQx+w8n/3nPOvf0rhYXNpojIUyUZcdEakWqL+ElE
VO05+6B9FdNdERv8M3uyPeLP3It5WR9eydfN5/IaDmHCj3HckRV4W1R2d83r
lI24u5UV+aPmEt7IXnAKu3XW5NMdEWPyNO27n8SU7E42ZS7r79G9mypvBl/l
c7xmty105O5BNq//LsvKKlSlDP/RTcM8IcvoL+ot0bns0u0sf1k+bD/AnP4h
1vEX87pZnRI+6WxjkWpuc/w3XsLfYzqhOv8Uk9RD3/ZnGtDb1W/4+0FHfnzi
F/4DBS02lA==
        "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/GPIs65UhZdSQiDv0EyCp0sN1AiDO4iytUNjHfCodykKIPJ
r+4GxaCE0cAiJRYDZbKYlMcNr57vz+v1en8+32/b1MLofFUIIU25SAiFaAg/
dSFEG0KYqQ8hhodNIcyat2RH2I1/Otv6KecJeRozvH1Zq52IbI8W+ZPyHt6S
+UBewl5slPdjVr7My5szeKd7W+nHvKdzY35wd57u5XH9Lv6w/orzKp2YE9Qi
u5YleNX2a6ho75Q/4p5nWVKWq7xHZ3Y+sI8/oDumc647jiXnHfqVXeAcr1z5
V0zRIw3yh+jJXMCk7ia+6K3jBh17fxfbebXYTJ+8MnVU7rPz6jveaFr2jl/u
i2OnfM2c1SniJe+Kvs3/GSI8fQ==
        "]], Line3DBox[CompressedData["
1:eJwV0D8oxGEcx/GvzfkzSDIonOUcJpTlZDJabpRBBsngMgjLcVgwoA7LYaAU
JQNRZzJIGTEZlMwsjMrrhnef53l/P8/z/PolJ3LZmaqImMZGIqJYG7EuN9Fe
H5HESWPEbHXEHtdhn0IaT3ynXDTrlj2o0+mqdMx6ZT/6kNe5qYkYcn+TzjnS
OvPcAlbNz8za+TX+VmbqIgZx6fwWWvgH/kfvWX8bbdwA94yCe1awz8/wH9YZ
/hNvXANXkl/233i3PuCO5Yt3St7I8s3ykd92fsR6R57q/Mmc3phOwrpPpyin
fM+uvNCZMx91ZlLnynyYz3PLWMK1TkGO67xW/qteq86B/REOUda5N/vRS5l1
ouyNO/xy/8qnOl8=
        "]], Line3DBox[CompressedData["
1:eJwV0DsoxXEYxvGXybVcSqkzOCm3xYIsJpRJLpNBroNS1BnYKJncCuWWMzil
znbOJIoSNtmU0SZlYJFMfM7w9Pye5/v+3v+vf3J6cWShKCLmaas0oroiooZ+
SiLuyiPuqVbO1EY8OKf02bKIxsqIYvOtWDOd4y38l27pDMtQp7knrIuvulun
+7CnTfcor9OnXC8nsSv6cz/Mb2LfWAJr1/frerE+2sUa9N36Z3qRjyip65HH
vHGDZuRNnsYm3BvAJvmWborn8W3nvO98FTo+WngD7cmz+Kxu3zlrx5A3DNM4
Psg78Dd9jt7ty+ledXXmd5wPCjv5Ib8wU2XXmrlLMyk7luRjbM7MCb82k9A1
4ct8pfCP9ae0Jqf5Df8HUuY6gg==
        "]], Line3DBox[CompressedData["
1:eJwVzr0vg3EUxfFr8NIXTbQJ8ZYweNkkNjRC7DSmGkQiJF3UKvoXmDBgkbCz
sBjbGIhJBwNpjPwDLBZ8nuHke+459/6eZ3Rzd7XaFhEVGktHDGYiTrMRtVTE
Ce7jZSGig2+nqvndzg7eyWvJDuWT2+6IDdrW9eMWPtkZ4Ftu6rgma2AZ29wF
HZj77K0kb/LL2Isvbn6ooFuUrdtdwA/famFZl9O9JV72ikfmprzBl2R1rMlK
shnzI03Kls0TWNE9yG74Jd8cxnvfGcJn3axsjm4pL2vKinwPP5Xkbs/5a5z3
5p4+Yy7yaZzGK90xP+LdlH7c3V+Xf5X94meyq+vUnem+ZVnzF+bwwv2hnX+R
hDO1
        "]], Line3DBox[CompressedData["
1:eJwVzr0rxWEYxvEbCwehY+TIIodS3gZEOWdQJi8bZVCUlOMPYPa2EKJILHRM
ZHYWKQODhVLinyBh8DFcfa/ne9/P8/s1TufGFooiYl6aEhF7FRH7slwWUV8Z
sYQbzutSZ15VHjHLL/JrXA6PkhElerFcSo29jIzz1fjOvcmk3V3uxRsT+jP+
yqh+yH/hiPxwT/IttXyWG/bNDE555xWr+F58kR7Zcn60362P+mYXPmCWv9EH
3WvBDKZxju/T7+xcORdwyP0G/UJazVOY5a7NzvR+/zAgtfqjecH9pH7O5eXW
uQ13uHvzA9yWBa7TOx3/70jCLG+3yKydD0zZOTVb1WfMT/S02WdpxAr3gc3O
x/wm/gEB7Db4
        "]], Line3DBox[CompressedData["
1:eJwV0b8vQ2EYxfFHiFarEqrRTbARwm41sIhiQZAuhCBRe/kHGLFhM2jMTdjE
j4iJjRGJGFiEzafDyfc85zzve+/N7SpuFNbrImKV+lIRx80RJ7TdFNFrLuNx
JuI5G3GECd0ubck79SUs6Yq61nREXpbAdVrWreESbtpZ4RspZWfW/hwt6B51
4/w8X8EzevGMvHxaFvan8Bu/8B1zujF+0X2j+CZ7x0nn2nRv/IzsFQuyimwC
b8xPdE2XsnPZsL1bGpKNmAfxUPfj7gf6oh5ZlbppT3df+1b+gP/kO/is977j
Pygjb5ENuC+D/bXv8owD/hTT+l5dg3mf6unCfOVs2W5S/5f0H/hf3MGcvp2q
9A8VIje4
        "]], Line3DBox[CompressedData["
1:eJwVzz0vg2EYxfGbhBS1KEoTCWK1kDBhkwiLB0NjoYmBJhiQLgYvq4GEoQZi
RH0Co6mNSPgSrZGBeCm/DifnXP9zXXeepy+zEa3XhRCyNNgcwkU8hP2mEC75
Hj/mPS0hLCRC6Ncn5Bzt6HrN23xL14alzAf2D2kNT5pHdKtyDovZiWN/lJWX
8c1aLy/JK7yqq6eoNYQ5esdf7Dy5f5MndBXqxGbMGTfTvIy98l08jVXkRazM
592e4M/4lFzCIl2Rz2Jp3VhtpmFs0s4Qz+Of+g+6Mz/ycawgF+zc0Kiba35L
KfxeX7LXLXf4/nb60T3gVf5Nv5TH41ijvXO5gQ/wpO5ILuquvN1Vu4n5X/7F
T719Rv93sTqj
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
/2TSH6VY/xeGtN+OtF9cyfv9wfbZQ/aBq2wfMXuCyJ5ehja7lxu/0lWOGdbz
2spGuDut+XQ/vQz4Psj0YGVbqG5P9LX5mdYAY8pyfptpZ8Me4b0N1xXdYyW+
v4tTjRL91KN1rwj2+fS704479LP0niuXwOoAqZvhnrG6+is7H1ozswYOqe2o
3HS3DOIs3TBudZJu0eatZvPSy2HaoUmXM4yqYb9VbUKXdWm6Nj2V5H5MyIVV
nfYKbm9pgA7CfzJ06W90KP1thr0834nm43KeH8PyS0k+TmL5K1mf2aQPHmB9
zP7WH6VZ/91/7xcH8X6/sn16kX1wFNtHzJ4osudesj/4sT+fY/ufofMCNfbn
LD6vXBPh+eLon+TPZny+vfcL/QHd2J8/7id/KCD/wQT25yXsPwnkbyjP/izN
/hZN/onu7M+72D8XkD/jO/ZnPfbnKJ7vw/4smv+O5Q8S8+esv/XBpayPBOt/
gP35C+tvxvuNbSV/Fu33EttnNPtzCttHzJ4gsqcLxROYwPG57D3Fk00UfyCI
4/NTjj9fKV7BZ47PoRyv1lN8g/84Pq/g+FYhIYyHsI3jczXHw28UP3Esx+c3
HD853uJajs+/ON5+pfiMPTg+Z3F8TuH5uzg+t/H8QpY/jOOzKP53oPgM7hyf
C1kfkf7BHJ+XsP5feL9fOT6/4f1u/Ns+8ILtI2ZPENnTkfIjBjHecOL8mEv5
FDMZb2zjfOp5j/LuOfqLHf7GGzCT8YYb52tbyu9wkvHGZc7vXxKFeABasglv
aP2NN/CIGN7I4Htrx3hDhe+vIs/3YLyxneePIbwBoxlvKLH8PazPOcYbZ1kf
E9Z/NuONE6y/Eu93KP+V4f3ms30Yj6EF20fMniiyZz3hPdjO+Fmf8d4Bwof4
kfHzTcaHXwlPIuNJSGI8OY7wJ9YqEH6WzfsLP4MN4+e5jFd9Cd9CJONnbca3
/Qk/Yx/Gz81/42csYvxsxPi5lfAzStB87Mn4+TrLj2f8PITl27M+Oxk/m7M+
Lqy/EuPn74yfv/B+Wxk/f+D92rF96hk/h7F9xOwJInveIv4CY5gPNiUQf1lJ
fAeY76Aj850S4keov4H4IDA/siM+hdrMB92ZT7UQHwS5FcQHQ5h/PSW+BjeZ
D/ZmvraB+CAqSxMf3Mn8zoD4ID5mPjic+aAt8UE07kl88PDffBAeMR/sxfKN
WZ9bzAeLWB971n8S80EX1j+Q9ytJ+8VdvF+RfS4yH9wj4st/2xNE9rQiPo4/
uL4hxXzcYKeQv2PMTKpvPPm7vgHM93EI8/1BVB/AAVzfsOf6gC3VE3Av1zf8
/q5vQB3XNzpy/eEL1TdgOdc3tvxd38BWrm9Ycn1Dg+obcIbrG6N5vjrL/8z1
jZ4s3571Ocj1DU/Wpx/r35frG9dYfyXerxrXNwbxfh2o/oOGVP9BUf1HzJ4o
sifXl+Af9Tr8R70O/lGvg3/U6/Af9Tr4R70O/lGvw3/U6+Af9Tr4R70O/1Gv
g3/U6+Af9Tr8R70OxOt1kb/Pn/lcWwv6l06pnRteAr/81Uco5MbCtqB97g33
E9Fx5bEerweHYVNa8vGblY3we1e2kl92PZoe6aM3sCUbgz8prHIUfABdqeHe
VrsboNF9ZaKJZDqohJU/tFyUAmlqXwYnTK2G+WmzXvpbvoOPJ97/kB1aDlJD
afwojWMgj09hOR9JDuqwnF+8rjmtC1d43cWBpKflCqGeMCCd9Izgfc2kfaHk
A9pXN6uDKUcnxeEZ5S4mJwURaOyo4XykVxNIf103/Gl8LWaumWY4uV8Jdvy9
I136/gd4LLW1OUW6EhaZ+noP88+EPR5P+z1wLocnxfN8fn+uh1vN72NkBmfB
sLFKWmdKkuGXin/Nm6N1OKzI48TPTkkoNzg9tLZ7IbzQ8psUMbYRFfSjlF0i
onC/9mfrt+lp0MjzlWg+GPL8pyz/HsnHgSzfi/WZQPrgNdZHbw3ty1hJuC/Y
xfuKVNwsm2NVhWa3w+e8mVWOuskdMn+at99ra78tDl3LoC1/SFJydT6stzz0
Qu1aBTj7rFnge6QW3g/MXfU6qRiOrpy3Y9TpFGi5ImuzrTQDDuxYXvD7YBRY
DjMfuS2vAXrobmrrvqUWr8WZXcpUiUFpXUHGvbkCkOfxYBqHlmk0ftWX5Aza
KZSD01iOJetTTPrgEdYngvU3J/1Bh/WPn5xQOnhiOdzR/HRnl1sl4KTRT2RT
MmB9eF7I0QmV0Dm6W8qN5nJIlrhwdMXEdHjbcqqzw94UsLDfcC/Puj1eD846
aTOrEZpkH0sON6vBwwvSM9ZaFeGAGzO/RPyXA5EvDjmfHF+HNfvUhl41y8ag
tDDFJYtywPihU5iv+gvMHazy7VvKRZR79cxZu6AJjAJo/LOScBz68LhITjPJ
gXssp47XPUrrggqv2+Eb6RlNeuJE1lO0ry60L4zjfcX9bQeMYTsELj3abbBT
FuwP6zf7l4cA5vQYEKnSzh/trL0OONwpxkLLgzompeUYNdEtasWaUhjzbb3n
eflK9E3+JunuVYrzo3xmfvLPhxGDbPfs2VOMc2SK2v9JwxO3p583mFILVqPj
J/x2LoVx3991SfeLh6Kar0NHQA2Y8fhwGscaHjdkOWtIDhxgOaJ1b9K6MIvX
3cp65pKekMR6RvO+TtG+UJP39eG91oD4iExcoHi/5tW8elz06H62klcGOPWt
/DqpORsVBPNXdl9Si8tnXjdWXZsP48c+n2LqnIWWLWpVa6EcN9SeVFnRvxIW
m/npPC3zQ5seRvOsch7hpMi8b/81NEH8598dzSuyIYL/WtuPkS0eXQdTVnzc
bVVYCUcd1Vc+M4yEof5mOmtrK2Ayj1+lcRSNv+b//wX9xW0sR8Wc1vXqKVwX
JvC6k1nPdaQnrGI9D/C+FGlfsJj3Zbd8NybPTYQZnXyS879WQLe3F18Mka8E
OS2LwLPyaaA4OrXadH4JPHnRFLBaohZKN8fv0mjHfyZywxd/0I8DvY6Pjp87
3QACHt9N46jL4/1ZzhCSg0EsZwevO4vWxS68rgGN4xzWpyuP/9IUykFV1uc5
ywmnddGc9ZnF6yKP27M++jz+neUMZ31E+5rJ685lfSR4XRuyGwxkf7Bju8mQ
nWEe+4Mz29nQVHgu4NeN/GEan0sWn18en+dqPkcdOnf0YH/Q4HPX5vFb7A+i
8TiWk8F/17McuYW0bowU+cMUXrc/67mA/WE/67mV98V+Dtt5X+F0L2Ah3QtY
zvdiId0jnMTx4Tjfo+N07+ATxwc/vncj6J7CdY4PK/metioI7zVocnzw5Xu9
keIAzuD4kMtxYAWPT+H4UMbjgyg+wHyOD6dYjjqve4vjgxmve4j1bOD48B/r
uYX3ZcTxwUEUHyhO4kPOF/c5Tq6huIocV6GA42ofyhe4zI7yhc3f+QLcOV/0
5LgdRnEe6jhfvOE4b/FAmBegchDlCwXOC9qPaDxbkfKFLI+L5HzifPH473wB
xzlfyPK6i1jPCNITV7Geq3lfkpwvMnlfsWyHB5wvgtkOYZRnQYQT5nGevUR5
GScVEE7Q5Ly8l/AASjEe2M95vAvlfbjKeECe8UBfHn/MeKAjjysRHkB/koPL
WM4BwiGYRDgEXRmHHGF95EkfNGV9RPovYpwwg/UPWS/ERbBPlfCePOOiJMJR
uIdxnSHjqGDCXXiHcZ0O464OqkKcBmMY13VhnPaKcB2MIFwHtozrPhGug+GM
6ybzfJF8f8Z1ItwYyPosYVwnwpm9CJdCDuFS6My4tJZwLExQIbynK8J7hHvx
H3ge/oHn4R94Hv+B5/EfeB7/gefxH3ge/oHn4R94HsXxfFs/i10vLCtgT8az
F+lJ2fA1rOqS3e1y0GgdNi54Vh0Url/SsEKnCNouSmxolEgEh33Xs43610KF
9eknFz+XQGi4XPzovknwfdOpJyV65XBm4/eL50fkgcLHg2N29KqADlvX9g7t
WQ8dTCJGbbbNg133Nn3K9UmGi44uw3WW1WP/iZ2PDdLIw+XnzvVTHJ8AygG5
b9uU6tBj186tRpmFuHHT8J5P9VJgWVBb/MxFDSi92Cl24Y0srJkasPZI11g4
otTX+m5QPhoMX6X7ZXc0jjtSt7x1Qz3IVHwofxZZg+omrta649rzw8ibLjP7
FMEXi4aL59JrYWTKF/WT8ilw6kKv+R++FIF51tE7y1QboaZ629yOj1Ogecan
DUcNP0B8p+wR0hHt/Nfo5Zmqw3FQ3Hm3o09iOkSFNtX4/2zEm6V6S+tGROCV
hc2ZWyQ/QM8D79dZqBaipPDvW1zu9djPZmY9BFkrfJVUbUJ9I6cVKzuFo4nm
XHeF77Fg5+4ZmvW6AfopaieZfrkLCw8q9h7lmg3XdUttFxxpgGaJ9yabp90B
/y0J1TPv5sBWnj+a5qMTz49hfR6SPnCB9fmP151H64IZrzt1atlG+Q6NKLX1
sKOd+jv4srrm4lmzdEjh/Z6j/eIb3q+KE+1LTfj3LVzkfeWyPZXInljP9jRV
pnMR0LnAl8N0Lkv5HPvQOUITn6Min9cEOi+4xufVkf2nM/kPLmL/CWO/HU1+
i/OR/FbMD1HkhzfD411j02tQ9lCO7fOqEnT9nFBiXJwCi5ZvPdF/TzV6hMwb
Ktu3DHcPTlhndysZWp/vnJ5iXw3XQt5cwcBSsFx/5JaMeyq8+5w4tqquBrVV
n4SNnFuAMZ62b98/auc1j9ebzN1fjVndjB1k1dvv1/bMB0tv5ELOT0/Xr+vr
wUj+mPandzlw7VeIoopMCkge04+a+qMWxiYpFt5VLYS56a/tJFalgdK8U8U3
faqhW6PWrL1yKTCo2MnvaFYpfFhz+hIOqoNzmUMPr4/JArNJ02XMZuZCD5Mu
FyYZNeKqlQ1HNXfFY/wH9csJd5PBVblKvqhDAy7e2rSxZkk6rt173G9pVRrU
ho8LsWzPD6tO5R172ushWEwtteqYmgVf5yrkmMk24IqWmkW3mqNxq4VB9VHP
HKjg+QdpPtrxfI7bOJzj9jaO2z9YjjXJgYUsZxrvS5n2hU1FtK9k3pcv7Qt1
eF9i9keR/WUnGWlnWFSg/bnbng6yAnzYKWVLybUSmOo3vf5MSCqqFR8fOHV2
KhZd6LLumEsDNPmFr7wVW4lXtBUS42ZV4Btt3+d7uydCWvBU18aNNVDyIbXT
jcYS6Heo5avuhHTwK0w4cfROFdzpXCNvfqQMZp0N3XplQxo4jFKS+7OqFvD8
sZYGpQLY8FbPdGdtFsyWnG+Ycr4a0g4O1b53sQROZO9VvSuVA8d7dtORmFeL
KVk2kVskM/HQ/pshHfMK4USFzRtBYCV2+PhBYkxKNtqu1zMeNbYMDiw79iNl
cwOevlUeE7o6GSv/yCk+jEiHYdPtukbdaID6305nll8OgvP3vveaXJINJZW3
fwd0L8NREwMMJ6hF4NnUmtYPK2tgCM+XaxPOx7s8/3jJ79yj0SXg32dRSGBp
MNp+VHVN06gDySqSs5TkgC3LOcr+s4L8Bzay/zjzvpJoX3CL9zWIz+UAnQv4
8rmI2R9E9r/L5+VJ5wXI56XvHtRjw74KMAmrmrRDthJSD+q2ta1MhXmNO6fr
BpeC+uBRZknG1SA/eqmZy7I02PPjeacJjiWwZJT9xNyYMlC8tHSwd+cyCHbf
7LogqALURx3aPfNCKXjNqjq8tbAAFMbG9F9tWAzD7t0IezpBANtqw5X2tVbA
+IT9in38yrE8qc14xYIC1Fo5953xpzKIm1ubPU27HIeFDZqWl1yBSQVDYoKC
2/nnzGDzM8nVWFW39d7Kzqno+l514J/FpTBFz3LjrCnVqC38m4O2X5d1t+4h
gPUKjkFWDfVw69GW7B+ZT+HsUOmrh2ryILzLd9cC7Rx4mL7KJlPqLewcISUZ
sqkB1vL8UJqPvjw/WDmu174V1WB9+ejntU/C8bpTn31JS8shgvX5QvqALesT
wnYYQ3bAfWyH97wvddoXpPC+xrJ9tMk+aMH2EbMziuy8Zm+E9OtXcXhIfrnG
K7c0dH2m3vPmpwaY8Fbjwk2LPLxv1Gl0S3ANrne+4xfhnQ+jT1v+aTxVCCNl
1pudTKsGHYfdP3M98sFIzaZ8wsVSbIw6sq+XaSX2zQytuFWaB28zlDctGlCM
RgV7rK/frcGHHm2LChdlQU6Xtotlq9vv/+LfucZ7qvD0cM28nfp5MD99Iijb
VKD8o+0RQ3KL0FylcrLXgFLQ8ah7d2NfCa4PKTxjZyRA4zGbPCYYV0CnNym5
902ewK/3Y501vW9Brk2tz7jKJnij4jior2kguFzyPb/g513IGbTVuENdE1wf
/KbcdUY7LhrnsNRe4zUMniVo2rGnBK7xeEdN4Tgq8fjcnxcUlTOrIaqgVDMr
6z0O9ixYaj2vDCRe07rStC4W8rpGrP8Q0h8MWX9NtrMl2RlOsp3F7Ikie4rq
OabMW82ZtyqUv9sQ/DkLn/RZUpxxog7HDPJZEqKSDX/muZ2aA29grsXm5LIz
tdCWiwdqjwpA78PEcYs8MvDI4Kf5eWH1WBxk9Lm8nQfps39PY3/fzn5elLcj
PmNKOGSHdDZJi6mF5YoS9+b0EsA017GDrDKSUT0lTPaZQy5aBb+TX96OH3Ji
161osm3H/V+L6rz0a8HT+1nCjtsCkILDaRL94iDhkM6FtAFJoLtN/5D03kZQ
XGoy6Myj9/B6Rl+XE3nV0OrseiB8dhkYwNbExp5lUGZkHGVWkAWWSgo5DV2r
YJNLf7+VI3Lg6DrT17OVSkE6KkYixbYKTks51SZuqIITyncONhu+CZ02cKHW
6cx2P/+0dvKscaVwp6nXw4VpMfDC+GiNQ2QNzGL5tSQfV7P83Tw/kubjc54/
9Wto7/E9i6Gs90jpdR/zUer+gjMPpldDwXTa13XaFwLvay3r6UJ6okhPc7ab
LtkNVrLdFNgOoWQH/MF2mMXnAnQusInPJZvtvIfsjCI7i/zhKfkDjGB/KPz7
HFF0jmL+ACJ/aGP/mUf+g3/YfwIr1iz4Vf4SSg7udr2tVgtn+i4a1aBVChpG
s70XmqWAa7iS3PvzZRB0slO39V+rwEm5ts0gNh1kTj1pU32bDR7rDcryu9SD
53xT58y0FN1az2IsXSCAx/by2k21tbDi9u1aj2OZYBBq2/oiMzJUqlXxGw5p
hANdx2mu8EzXjR2/Znhuajy09pBfMMKwCfaxfEWSj24s34nnN9B8/M7zh7Oe
7qQnBrCep1ifZtIHA1mfbqOVc33mxcOZ+xNkXt+vQi3VeZEGx8rF7YAiO1SS
3dCS710h201Ud+L7ixZ8f2+QHPzN9tzEcuLpvLCC791sPq/Vyx0fJ+U8hTdL
Prg+XJOC/Q4N88/PbIS35A/oxPfOhf3B72xAcdDicLwb/XV7Q48s6CQbfGRG
VAO0LhH6G0bwvfvK/lYxSrhfPE/7BU3eb++l8mXuqqmoqb7nv6RfAjAt8L50
t3sN9CF7ItsTHrM9V5L/4wm+p93Z/1fReWF/9ofTfF4z6T5ivdh9n0z+gIbs
DzLsD1vonmIA32vke2rB8tXYH06y/M08P47vdRjPl2b9T7I/BLL+y1j/k3x/
Rfq3sN0i+Z5+ZrtJsX3GkH3QjO0TyudykO+p6Fx8+Fx86FxQks8l9u9zxzl8
7o587hl07iDN5172t7+hyN92OT29XjsyFi59eGMx/UwVLHFW8rKLL4deFB8g
mPPFNI4PEym/wxPO71M5v+tQfABXzhdFHB9GU1wCbc4XzhyXYl2E8Q3ykikv
OHJ8W0HxH6c7U/wfx3HyZ+KC86dWVeC4Hj0Kswakwofp4zbH6FXCMYrneI7j
+UyO59PZTz5x3F7DfiI14/ak87+K8b/LJj8KLuSiru0G88kXqmEMrytD6+J4
XneiqhAP4EfCAyjCA8WsfxPpD3asvzrhDVhHeAOWMd4Q2WEix2cntkM04TEY
xXgsgfFYT7a/KD5PZvs/IVwECwkXwX3GRWL2B5H9Nfm8HtN5gT6f15V9QlwB
mwcSfjNhXCFLuAJVGKfZMq7IHiPEh9iF8fMNxofvWP+RjJPjWX+NNkGMg3w5
rGgrPyQxoBQfV833cVYSwHTCOdCXcdpaxjlFhMcwK5bwWDbjoquEr7CccZcy
46srPN6NcdcQHjcg3NWuB+EuRcZdAsJdWM24K5/l3yIcjr6Ew3Ef43B91lOZ
8dgy1lN0fnp8nvZ8jvMIx0IL4ViQYBw7lO2wnOwAr0R2YPurk/3Bku1fw3bu
wzj8NNtZ7FxQdC6ziR/hSOJHqML8yOq2kGfBoiLixYoXiWedIjyPe5k3lV8k
PH+P+AKqMW96yXzhP+IXUM58x4v5xTriKXiPeY0P85QU4qegwvz0GvNK5jUY
zrzmBs9/RrwGdzCvucK8hnkWNDOvOczrtrB8I+atzix/KvE4aCEeB8OYx7kS
74bOxLvBkXm3P++XeSLe5/3OIF6PmcTr8Szzej3ip2hO/BSTmZ/eoroBPqC6
Aepz3UDMziiycwKfy1s6F2hj/tuBeDRYc30jk3l0I/FouMp1jGfMo12Ip8My
rvOsZp4eTXUVPMv1oi1cV+F6An7ieoIP1wf4+wpQ4u8rDnM9R4XnK4jVEy5Q
PQFfcT1hK9cTuG4Aq7husIH1+U51IdjCdaHlXBdyoXoCZHI9wZvrCX7Ky464
tdRDQnHi4edrU6HTyR9zl3zMgD1Uh8EYqsPgRq7DxPN+r3AdyYj3m0J1Hiyj
Og/24TpPF6q/oQ7V33A+1996sv33cB3jJdt/HtX3IJvqeyDP9T2xcwHRuZhR
XRFOUF0RtnBdsYXqWiiqKzpwXasT1T9BkevVPUdR/VOG6mbYkeuBY7keaE11
ZtjIdWbgeizX93CNWH2P63h4mOt49jwePHy/rE1xLridHfFp1/l7EPvxzuQe
ug0gRXVF2Ex1RUjjuuJY1mcg1/E6sT6HqD4MLlwfdmZ9sqj+iaZU/8TrXP+M
pjoqTKY6KrzjOmpvtsMorgNncR34BtVvQY7qt+DG9VtF6hfAKeoXwCbuF4jZ
GUV2tqf+BVZT/wLDuH/BfRAU74NwPRn/0ddA8b4G9yNAvB/B/QsQ719wPwLF
+xHcXwDx/gL3I1C8H8F9BBTvI3DfAcT7DtxfwH/0F/Af/QUQ7y+cYTkSXYRy
sIzlcH8BxPsL3I8A8X6EGfVfsJ76Lyjg/gv3I1C8H8H9BRDvL3A/AsX7ET7U
bwI56jfBZu43cT8CxPsR3P/CUup/YS33v7gfgeL9CDE/+V/fgfsUKN6nmMH9
FwmyD2axfaT7qkn30qzHn4K8oHcpz1Aj/VfjqpxCkZ1B3M6qPF++VDgfCtJo
/j2Kn/ie4id+O0Hx8+sw4X3HxDPC+46f+L6XURzAQI4DoTz+juvGhRTnwYjj
/BDCM2jKuC6G8QxyfXIT5XE4zXlckecbM/5J4vnGXB97QTgNBjBO0+L64V3G
q9sYrz4gnoKviafgaOYpy1cI+Q46LSWe23KQ+M4y4k0wivnsYOZNPYh/wWDm
p6uZf/UjXgDXiReAHvOCNuIdoEO8A2OZd3RhOQOZx61lOSa87hDma0q8rgPr
eYH0hE+sZwDvC5l/DeN9bWNedo73a8HjY6i+hKVUXwJpri+J1QdQVB9Ipnop
BFC9FC5wvdSIcXKYmP0jGY/Z8Dme4HM89Xe+xl2crzMYDzSxn8xiP/nEed+C
+0q2nPedqN8B16jfARXc70gi/4Qg9s9W9kO+L/CP+wLi94XvBYjfi8mvOz5d
l9UAIVYdV4UU3QfdPcojTJuyQIvH02kc1/I4FuapBsc2gMtn+/nPLgZA+Td3
ueB2/vWGx+/TOP7g8cNcz9/KPOIQ84h5f9e3YSDzgtBgp4dhoW+hSFl3076o
Whj5fPL0p0MFMOBk1YT80Ag4sTA/ZZ5vLShaGp32nCSAOtUBSQ82x0AnL4Xo
D49r4CoaZ/w2LQVprjt5ch1mPNdhqnl+Z5qPV3i+7N/yUST/1d/6oEgfXxrH
ZtazD4//OSGUgz6spzTLSaB1UYr19OZ1BVwv8uH62FjWM5bnd2c9z/H8X3/L
x14s/xLr08R6ivQx+pt/4e8MsnMN87sy7rNY87nw+eIxPt8KPsfXPB7I5/uT
x9l/8Pn/338wk/1nDY9HPN7nGPiiFuxS/juQ1LUEsq/VL0senQh9/b7P6hZe
h4/yc80Lv+fjNJO5ffueSoLFI/tmnrlehXMujtv0Z046zp5q/qrMrAyUKzL6
d7Kqw9bdC+xi77/HY7OTh877VAQ2eaO7Op8sgRLXTv6Gvf3Q6e2aMfaWdWB5
ylZrqEYNnmi5EpLyXYDNubuO2x1Igf80Rkv/WVaDnbQ37720pQgXfTq7c4tH
DjwJs9o2/XkdHDPKlztdlwf2yyIv7jJJhQt+9022h9TCjFVh+tOy2/Pu2YBh
VUMK4ZnfV5dDFe04fMSX4iFvw9DbFPp8a8dlpUZnbva7UAObH88Z7XQyGN8m
TFoYIVcGO8JiGhanCvDXDP8nm3cX488xsWvjd1RAtYyG1i7Papib6KS5SqcU
fhalvwr5mAavhp47q9YuR39N0H8jnxXB77cLhigpZ8OY21EB79txnc/K49cV
bLMwUiHLc9JCAejo/DoqoReDn38tHhL/8xpOXdW8ovREEyx1Uz3lqVOJCbrb
rOVHVIDc+nLr3QZpUCeptbDTtjIYuD1EWjqtFOQ62h/6NUgAeQsWfGlaUY73
Lg/vdampGAfI5+Svbce3fxbu0iovqMYoNX+XiPsZ2NbJ+PF3IwG8s2vcMnx2
NpbJT342pk8YjJM9tuzauQYYePp9zLDoG+A/o+js7HxfNL7kpyH5ownk7FYI
Hl3Lxd4T7StfLa/AOgnLXmaDysHVtKrv+JlluD1RMSH7cQlOqQLf2RZlkDb+
iSDD5BZYgq79n+jzMGdN/9Bb7XLM9Wa49d32Cr93bthrWfIOfHP7n/lq3gS2
hYt72k1KQ1Vj575jF9XhbKUfp/aU5oPm4hOvb9ekYM+tOnOXmVbgl22XZnZf
VAm/Dpstvqz5AHPe1KufC36FN1uPKDxMaIKDFdOuV09MAZ1dlqVbjXJh3DWD
lBH69aCq9fp2mlQYtH3vNTq72wcMuzzT1KhXE8T0CZimdzwWLS4fybn6PR+k
ou9dqVWqh81lHVffNEpDP8vvJ62hBrIGDM7WsxbAqMuK9Qcyo8Bt4+h108IL
QU3qy+UhFXUQLPh96tiad2CUv76ga+5reL0uZ1rHxU3wNOrg2a/bYkB3/dCJ
Z+am48O61qUTujfChDoZv6Y/EZDXIjF5SWUp6qefm2G9vQaMI1wCNmwLxofB
d7L13mWC9rPO2QqdG+FItmT8orJIVB7n3iqXWQZeMR7rFz2sho391Vp7m8fj
2OtbrSzWVMLlKzFWT2oqYI7tqI9pPYtQdcRxi5ndX8J5j4WGKXL1IHgVojY2
ugC1pbbLHp2Ziqr77h7bPKMOkhomDLMako533Br9J/WsQLmS6h5PlCvBaPH9
XOkOSTjXWU+tx+FK7Np12hEnpwowmb0jtjnkHZ606LR8uncFCm7YaaQ1V4KW
VLD3g6xQXLxRubqrTwkq2KfYzVNt5zmXwrNkerlj4hXFJbuUgvCqy8vYJc1N
oLt/eN9oDEOz32etPv8ORZnDnxouezWB1BaN7FlBuaBUPTriy9ESsO4aO2rP
pGrQW38tb7igEPYWN5hfWlwNnT2j5nysLACNwJa3+Y75EBKxYP5gx2Is114X
OFCvGhzrPL64NlRgsMHkgqy69/DwXd++549Vgt7lrAM2f96jZ3CN87JFT/CO
4caXy1Y0wczkHf3eylTB0DV1j4MC8+FadJfX+5cIYKy1xRXF02Uw/WdDoNKs
cujnd9egdXMRPLTaUrkuORF791lY/vVJGg4YVK769L8G6LJc+8WPnyU46/zt
BKvONfhYat28lJYMcKNzxQl0zjCFz3fOB+Opq45WwY9oI/0zi+PhUnx3B9nH
7fiT7hto0P2DHL53wfP7uh9YWIVpEt4ve74U4OhqQ6lhSblg26XHs0K/FDy3
wDby/vdULP0wYb/1mQaoGjZk5N3x93HrGyVZn17e0Nrrl71GSxNMrSi3dTcr
B/PT82dYPHyFiq8Gmk9xqYb+ak/kB6TWwa7fqc1zF6XD6D7+51x7tp/HvsGr
elfW4nznXlG3nXJxSl3h41FHsmHsutMNHXRqMcvewcV6VzH2GXAh5JZkOsSe
yCpZrlcFhyST0xUEJWAX4i7zYWIBxJ5csmfgwyqwmh8fuGhMOZR+vNypYmQS
9Ku6MqEsoRI7dciyTDgVgMdix+lnWFWCVXjvtpADhWiQqxC6oD4cv3zbYHZe
th4qz0hpqKvXwh656pFN9blwotjM6dbUPLhiWK/Z27EWPqJJxqOYYuj4n1qt
VVIK1AkCFHyW1uBPqcxtyTkCfPfjZYRHYTsPerBj+9XLaeDxwLDUOzIQ1T4P
29Do1QhZ7nca5+S+QseB81/bnHPC1mq/FZ8ym8B3fcFIe+1G1BlbuOfRsUQc
5Vt0s2R1EtR2if6kc7kAr/131DhRJgoD+um+XDq1Hnb4hhc7vKjDt6r/jR26
pABVpHu+Mg5OBBedu0YzP5fhtuw1X0Kas7HK5Ieb3fcK0TjwOIjGt5MceEly
YCLL0XUNqRiUJ2hft2H1zgcpuPtMcKX3pBp4ueBgubvUlfb1Z/wKCzsFp48a
mZz81QRNkkI9YX6QUE+wYj0v075gNO0LZvO+2D4obp+DLhNSQr3rweFuv6nb
xiRBxwuSnV+654C1P82XuS+cDxt5fg/GAx8JD8AHxgNsNxC32x7GFVaEK2Ag
4wox+/zPbg10vsDnC9f5fNeq9Xnu9OUi9DygOqx8uhfsHBVVn9huhw3Kr37t
aCxAD+ULqR5mWZi7+ky/63NqwZf8B+vJf7Ab+081+RvuIH/D4+xviUuCL1t9
a49HxQE+JUOzQDp++hjZwBIIXWiw7dPIMki4WZR3IjkDvo/b/NVnaxX0In8G
GfJn6PWd/NlnZsyVHZWVWH7svmptXAJuFei5amtUwBuev4/9P4/9/zbjHFPC
OTiIcU4c3S9cTfernS/T/RLDFSjCFUl0T9GZ7imu5nuqd87LsP8LAWwIyDr4
6VA2bHV5ru1UVwXPE6Wj3dt5lXxknL5je3y21LSp7G9VCpoUByCF4gD04zig
THEDZlHcAD2OG0YawrgE48IoLrVwXGp6MHDcyR/5cHbFPN/k64kwPe2tYV1y
HcyjeIVrOV715XjlxOP/0ThUvaRxz/GEr5rbhPgKRjK+CtOidYfGCNfFRl73
OOO9cfpCvAcpjPe2SQjjKuw2FsZVmJhAcdXwjKPlzIJymMt/7TvgDfMPOfCc
4jOkUHxuz2MUn8PNn/xaJpkLT+0DTBdKpMLZVyeCzLXrYa8H4a7zukLcBSaM
uwYx3lJk/FXA8R8oX2A55Qu8yfliKeOG7pxf9Dm/ODDe20V4D/UZ75U/pvmv
wwl3LOP55iy/YwzlIw+W38z4U5nwJ/Zk/ClmHxTZpwflQZhNeRAuch4cWuje
Y8WGEqi+NUZgaFEJadvkb55qLRbHhyjCh47rhHkWTlCeha8KlGebAoR5H7dw
3u+lQ3lf9W3X9PfGxfgiYf0b1T9V2OfupuqJLgUwj/I7Dqb8jpc4v//wW62V
u7EEH17MUzw2MAXjX+7TlzWoheL1WzqtvJqP14OeNttDBjrN0RwpK1UHVoQf
4CrhB7jN+MGG8Ab4E97AV4w3MllPE9ITlFjPAt5XPOOHct6XDJ93D87/H/nc
Rbj0JuFSzGdcakq4CBkX4efThIuKV1q7Sj4txEEtSQXL/Srw9Ru95cfb+elL
xr3zCPdib8a9Iwh3oTrhLlzOuMvsfOUgmZw4TJvebcK4hATUWdlH7s3hRpjL
uFrxhxBXQyjj6tx9QlwHJb+EuA76M67bwfh8COFzHM/4fPsRwvMmoUI8DyI8
r834vw/hf2hm/F9CeBV8Ca/CYMarkxhXZxCuhtmMq38T7gUlwr2gyLjXinAy
DGac7Mk4OYRx+yjC7RDAuH0tz7ei+XiK5/9k+WMZVw9i+Y+ZF1wiXoAvmRdo
MI/wJh6BKswjftYK9ccc1t+A9a+5JJyPJ5h3DOf5NqQnjmE9H7OeG2hdXMB8
JJTXLWf8P5TtMJT1FM33ZT1F87ex/OnMX/5j+SJ+Yc12EPGLStbzAu9LlfX8
zvsqZL4zk/e1kPwZzrE/f2V/7kHnDvVbiPcp2NC5zyG/hZxL5Lda7LefDwn9
B7JeER98yP4joy30Tyxn/wxi//QmP8RNzBNV2A9deHwJ++dQHs8jP8eXJAeD
WU43uhdwie4FTBXdC2fSZ9xr8md/1mcZ699M+oMG6x9L9xTk6Z5CDN/T3myH
z2QH6Mt2MGe7XWB+2sx2W0s8GgYTj4YNzKPrQBhXYYUkxdV9HFcnM6/Q4Tzz
huOMAfOaFBmKt8OY17QRr8cbxOtxFvP6KIqT4ENxElw5TrZQXIVgiquQyHH1
ANUNYDfVDQC4bqBEcRvCKW7DtzsUt3szv/Pl+PmF+d0o1l+D42Qs6y+2XxDt
V57yDhZT3kEJG8o7YrwJRLypgPIdSnO9ZTznu8IDwnyNO7QpXy/mfG1AeRam
cJ414jw7kfldEefrAM6nPjz/EddhpvL8HswTCzkvm3Je5noOJFE9B35xPYfr
P/CU6j/Ql+s/yS6kp8dkqucsZD2vEw7B24RD0JdxSDnvV47zuxrvl3EOmvDf
VYxzzAlPgghPjmI8qU84Cp5y3WzqWMJRadpCPAa7uN6lx3hsLOE02M44bSyP
b2d+eptx3WfGdUOpngYXqJ4GyVxPSyTciPaEG3E+40aLscR/10QS3vvEeO8F
1evQgOp1+IfrdZVU30Mjqu+hqL73lnAvqhLuRVPGvWaEk9GNcDIuZpxsyXao
JDtAb7aDmN1AZDcvwvPtdqG6pS3j+WAk/luUQ3xhGPOFCKpnQi3VM+EQ1zNP
EI+AIuIRYMc84irLN2G+oMPyg6iOiieojoqiOuo74i9YQPwFG5i/vCO+gxLE
d1CO+c4DqtNCZ6rTwnqu066iui54Ul0X6riuq64i5F+gqiLkX+DK/MuS+Br2
Jr6GIr4mxpf/x4tnE0+EqVx/tmCeyDwXxXmuCvFQ+M116f3MQ3vzeAvz0zAe
P0o8F12I52Ktz188F8R57nrWZwnz1rGsjwzVzyGQ6ucwh+vnt5YKeToa3hXy
dDzJPP2ji5DXwwri9fCEeT3X59GB6vOYzPX5M6a3LF0u1sC3auucZU6FMGlW
W9ddfjkwZsTCkO4FNQDRGhnb9+RDTF5y9e6sXPA2fnLk4+8q2HF2eMfsOSWw
3+uykfbAfJB0Spy0N70Kr7yTmWp7rxBn22qM3xFZBG+Gqc8cfasK1DNDd+jP
zgT37qGjat6VwjR/N1x1sgbmDKjp3qM1B3p7wC3PVYXwc6JR0oMO//edZZZB
VHgBGm/N6Nn0Kh9MTmSf8vlUg7cfyvid3ZSP56TDy6Yfz4Uel3esiE9Lwflz
jvkZXEY8Mb2DRMv1RrhYP8nY074IGs5Kluk7v4Da+3nPrH/XgaaL3E6plfWQ
0qlAw3F8HGjV3zSTysuDH0oS8+0mpcNu3Yq+gbZPQOHrlFWPdjZCi6ewngPf
VIT1HCjjek4F9yNWuAn7EaDJ/Qiu/4B4/cfKsq37qB/tcbD73GWTvsXD7AVb
Rl+cUAUB3Yok1q6rxgfymGs2qQAaAg8EDVpZBB3Cdxls7FCNr2KbzFdZlqCD
IKfkRHYevF68qO64bRUOa56xU7qtFNNCDMdnmmSCivOL1I2LamDrNZ8/T5xL
YdujDd1O2sRBn0WPzBqtK9vj/kSVN84lsKuf7auDvsXQZa3RibPyAjQ5p1UV
fzwdFUbNXeY5pQZ6zLVVl7Yqwqg+nfblOyWjXtGx1M496kDhm+NXhTd5WHbT
Y/6Ic2k4/PqoQw6n62DTuFk6qj+zwW/LQ8vHu8NBY6uUU5VVA5SWZUUs8UlH
2z4TjnY4/AL7mHUsf23eCD3VJJ2drlbBi7utppdKMmBCkZf2/epSkKP6IW6j
+iEO5fqhAdX3YBjV92AR1/fauP+ylfovcJH7L714/o8/mcJ6oCfPf8d9HFHc
c+C4d/fN7heOnSqgl8X8yInrU7C1S8151WeVMF5F6/GUWZFg+KXXG6vmMAjx
+pTrurMJHjzVUT/vFY9zzl2418kyGosdTJ53LGuEPmEd3Ieol2HWcDkvmw1l
2K1T0I0R0SXwRKfExyugAnskFBReLyvDFxMSHyho5YJH6tX7vy1LwUfVsXtf
hTJQPRFZJt8sgAuBzZbnP1bies39Ck7zyzFtUofqyFNpMMAh5+AWiWqwUw7e
XZZcAkvmreyy6H4uRC99unlOSvt9zOg7X6ciD6KldM+fvVYC7RQoK2ZENVQK
/+bAnHFpL7xGCEBRbkrOs5UV4LA428g5ogi8I4rGfdQphccftU10vEvR5/N3
h9HtfPb4pUnrVsVWw/21ctfN7TPwpXHex1+d36PC+XB3tZgGKO87JtdsQD52
d5AzfRvdjk/GVyn+N6Ee1Mess7+QnY0JsPrl7rLn+HLvOsVvng3gzeMwQzgO
N3n8VdbtmpkDK3FSnue5Z1kVcNJr58fEe0nwjO0mTXaD+2y3R1UJnWJ656LE
u3d7HvQpwNKnrfZ2pTUg4zjUIyuuEHpeqhyr65wPOUvA/3dkNdzaYVe25ke7
nb3Sc85XFsGE3jHGcKMcEt0+ODdJReOwqV+063vE4oSq9S8NujbB+QfHxra8
zkJJ/Uf73b1SMHnMg+jgsHpRPR8nUD0f1bieH9hbcGWdcQV2vRZWHm6XjAeC
5At+n6qE+ZPdl0wbVIHzS7oa7JTMxseqAb5zlSpAn/WcRnriG9Zzy6Vs74sG
CZA+eqen2+NEXLlGS2LdwkawYD2vTxHq2Y57Sc/bl0Z77+9diKUGb+3PQxVG
N9snSR8pgV6T0yoHuiF0eai4Pd3vPYyWSh13V6cJTvV68sDuVi46V5w9bh0k
QNOml7OXr6+C0DkDCyxjS6BkmYfeq1v/9z2HkuRcxzSwXqZz5k51PvSuFgzR
8K2EI8YBvnlZAhhhVxdwSSMak2HmCLPb4bja++X+tYuaYO+P/ZLZbxPx+s+f
/5WnR+HoorkBcq8bYeQKt5PD26LBYMO2kOKL6dizs0erdKfG//Xv1Jh3TGfe
0XhG2PeBdWeEfR/w577PbcK1EMb1p9WMbyXGjulRhNkoZ576ttirEq8J5H7Z
Li2D4m7CvhLIUF8J5nBfaQf1xeDLWOqLBXNfTH/WUY+d3TNwWf2txKJuApwW
6RDTMLIGEng/D3h/w3lfC6mfBbbUz4JW7mftoP4aDOL+2iPur8lXOHhsMwoB
q6jEizn/vYFrpvc3WD9tgrXUL4Op1C+DftwvW/n3OIrGt7B8BZKPgSzfkPXZ
wf21X6zPZt5vE+0Xn/N+09k+PbjvNo/t48N2DiQ7oxXbWexcUHQus7t7Vymk
eGOInfXeT6Fv8IdAZfHUpCbx/h2I+ndWzDcVuG+7mc99GvcBV/B5ybE+93ft
UpHpgNBx7PmQvNA8HB8wte/OlHow537iabZ/Ce/3xpPWWzX3nuGF6V1e525P
hJo5EjkKUk1gyn1JA7azqC+5eviBCcNtkvBqpuyhzMECcBhS4hDxqQbWcJ90
NNtZ1CfN8U3wGe8bg+qBWrbzT+Xj9VFDhqauqYeD3G8dTP1WPMt2PlKj2wpO
V0Bl1KxY/7xn8OTErjWSpU2gx31bX1F/j+08pbngcfO+d6CvmnzXqk8FFCoG
/mjdVgVe5D/YP1roP3iZ/ceY/BK8yE9hHPunNf+7Ov93HR4fSH4Os8jPYSH7
ucA5vcRYUABKnX0j9o4ogPfLLujOzamGmjHC+wXSdL8giO9X6zLhvUat9cJ7
DbP5Xiu5C+MVhE+juNqP49XQHj0Oe7h/gKmLO0h7S76EQRf6Kc4a1O4/FCfB
nOIkPOE4qRIZ/rpucQFU7+9eevh4Npy32H5x0ahaOGq+YnnD7gIc3+yqaXG9
FIduHtkl4UMFvKL4BvcovsFwjm+fJgjjITr5C+MhGnA8lLwojLe4aRTF22Mc
bx8eI/0nk/6gyPq/pDiJAoqTuIrj5AyKk/itShgnMYjj5O+3QjwA7xgP6DAe
eEB5DSQZD9RwXqsaLcyPcJ7z5jvOj6sob0JvzpsBPB6rJDfjlH46VE7z1Eu7
GwuGG1IbDpW1j1P+Ah3KX4Ccv8IoX0OTvTBfw3PO116UH9GF8iOacH7M1t1u
uE1QiRscD12aMLoQe94bcnJ5Swn0JfyAuwk/4E3GD18qhXkZpscI8zLMeUZ5
WVspIuNZO45f1NPe/cGXPGyY4Lxr3cQa8Cb8g/cI/2Bnxj//sX16ct6PY/u8
IJwAUwgnoC/jhCDms1H8fY4v47r0FaucXyyqgnKZhneNgakwpb58RGP3crhI
OAfcCefADcY5VYSXsJ7wEhowXnInfIjfVhA+HCxJ+LA34ViMIByLYxnHyhJO
w/2E09CEcVrDEyFuhFdnhbgRmhk3ZnR98K2TTQlc9r/a2is4A/oomMPA3TXw
uUWItyGR8DZoM96+SPgQrAkfwhvGhx2NhXgYdzAe9mE8PJ/746MZP5syHi4n
/Iw2/P3SG57vQLgdfsgIcTsMY9w+WkXIj/C6npAfYdUX4kdSxBcgjvgCAPMF
/2dL33W9Hoc/nC9sXvQuBA9Hfnf7Oq0JpIivwQLiayDia3cfO+UOs6iGw101
w3UPFcGh+ceV8scUQBsKeRC8IR4E+5gHGREfhFvEB8Gf+aAS8SBkHoT2zINa
zYU8CBuIB2EK86Di/vp3i75X4yCLsyYDJhWj1qWvR4f3yIXTxHNxO/FcPMs8
l/kaMF9DEV/rRvwOyqWE/A5vML+rJZ6Ia5knjmGeyLwSxXnl7n7LZy0TvAPn
KHn3YA937JC0ofGoU/s4y6ni79/2sZzsBiHPxfpzQp6LZ5nnTieeixXEc7G+
jnjuROL1aEy8Hi8xr68hno6LiKfjDObp84mn42Li6ZjmTjyd+T4w3wcR39eQ
E+qPW94L9YfMRNK/7O07y6S5EVgauyp7+mUvHHDpd5zEsyboFU7jTQnCcZDg
8d250eZuriX4cuIDF811xTjNKzXaZV8lyFBewHTKC3iV88Lp3UKcgMGMEyQZ
JwiChXgAtusRHvjFeMCI8j4c5bx/nPP+DcrvEBtA+f0F53f/BmEex0VjKY8/
5DzuRvka7TlfP+B8rSspxEWgtVOIi6BXKeEiMb7/P/95n9rSwXlvHWyd3rfj
O9ci8LfXulyuFwvRV1wi0iLbx1uHnbh6tRBMDkysvrvqPZSQ34I8+S1ost8O
8dUwXrSkFpq+KvxaKyOAnzZvH74bGAdfjxs2HZtSDy191w83ScuHy5pnBxoY
vIenPwb0eV9Ujwbn60oGWuXgsEO3AtUr48BtU6ligFwDPpk4Yonqz0z8cu7I
p9/qSWD7bHPklQF1WDPwylSDWel4paxG5b5CAYwIEd53WHtYeN/Bge873wsU
vxd9LIYZOTs2QohqdJVfaAKEv753IsgyHrKio350SGlEp8yMVXKjo/DhivGC
1Pb/fuec1ZfEqEY89/HmOSf7SJyolKi6ry0R4vYfk91f1YjlA1be2rbvDQZc
UHNx1U2CAaHdvn+b1oC/4mbXNMY9wzbb18uLDueK7heK3694ltNCcuAsy4kZ
a1q1rHcTKo/Iqt154zVc6bJIPjDmA6SznkdJT3jLelY9HaTs5taAxpqV7rrt
vOeNk7thgkWW6J6C+D11Zzs/JztDBtt5QMCGPwWHGtD93Z2iZQczYePazW9j
s2LF62z/u3e3KX6iA8VP9OH4mTLtQWnNhmr0sc2q1ppZhkNvqFhd3ZcEeisX
rH86owzer5ZNq0ssAq8Z0Yd7bSqHx8+vXymwqcNYzRw1m55FiLJbmkNHfgBz
X+dpjVvrMODwgp8DrxZgy9ZPS4ttUyCL8hdeoPyFovxlz3WVUsqboMl5c+ml
m/Yf11Zjk+D46tb9pVjUaa6F+oc06E44AYYTToDOEwkniNUHUFQfqFp1o+zq
3Doo6+sh0DIshOphv3aGjkwBQw3Vs0Eb60A26e0Vl6B8eFwx50O2bBrkEZ6B
1YRnoDvjmQLCCcg4ATUZJ7zbMOK2SXktWO4MdDtv9Qy6zXm+V6IdDzzn8Q00
jio8rj9+sMnXg9lwDSSWzXp7H6UUO8YHv24QrwuBqC60cqt8soROGURMCPAt
qm/H98OnHfNv50Vl9Ta/9zlXwRaJudP+hJZBztT0syvU0mDEpZbzC++355OA
UXtn1JdCv4MmFWq3MyCUcCwoUN0AdotwLOFDfE74EM0YH478u44BmlzHEKur
gKiu8orwNiwkvA2t1oS3t1wekLbufC46NbiFqmyuw4salw28qjPE+T6I+P4P
4heoRvwCw5lfyBAvwIHEC1CReUG/hTYb51TmwB8LFUej/3uv6mH1hdyiOii8
RN9RAH+H6c/fUXxIibP9Wp2NHRfol6Q9rIPZoVHrSg9nwmGOzzsoPuNjjs+r
94ZFrryQij+17sqlHazHadqdirKnZoMyx/mKMcI4j6I4H8B5IZPyAjzjvLDL
c6jbju8pcER5fklk70qYcDJZvve5CpjJ+cWZ8gue5PwSxfloNuUjbON8dJ3z
VyTlL+jM+etgaY+hK3tmo+UDu9Xb/evg1SzNPa77ssT1B5H+60xtPx/vE4ce
aob9Iq1qoEH1akzUnlJxng4inj6e+eYUtk/5/z9/oSh/tVYTn302kuzzjO1T
xrxYm3gx+LJ9NpB98CTbZyzbxzfk+V7VT2l4cJnbrZJ9pXBedcfEae34bwnz
8ctst/1sN2fm9TbE67GO7faW6wPybLcxbDczsg/8YPssYfusJb8FZ/bbc+y3
ifJHE1qf54PBt1fKJ3/WYPP58Q9yeuZCJPkVSJJf4Xj2q5I9wjoY3KA6GGzg
Olh+T8Pj1lqpMD3Issuq0vZzySpcG+KWKS4HRHKiCsaubH6QAyeh/mtBez5/
NkFNTs21GM5dIH5aO5LutQ/f64OEi6CQcBGoMS66R/VA+ET1QAjkemDwgV2X
tF+Uo86ZBotTvyuwsFZ1zMiBmeL8HUX8XYzHoYjHxe4X1i0x+SLVV/9w3dKu
eWCux5dS7DrQc/os5whQv1DvsXtzDVjw+Hd54ThO4/FgqpeCMtVLwYHrpX5U
Z4ZQqjODqM5cw+t+pHWxjte9KNP7yZibNZjw1O/pmHEC9B8XsXvsjxSwoLiK
MRRX8RjHVTE+DiI+voT5XQLnKTPOUxFUV8c9VFfHGFFdnfoC6PZV2BfAh9wX
sCk1+PSqfy28Vy4ackZNAAdzJNLeGCWI81YQ8da31MeBUdTHgSDu4xwnnAyz
GScrMB5+gjRuwjhZkscjqP+CVdR/wf7cf+lE/R1YSP0dEPV3fsZn2T61r4eS
5cvGeH3JhY/LFv48KvEB9i1WjuyCNXBd26XO874AlOKmDGlVSYBW6scBUD8O
FnA/rjfhBzxC+AEzGD+oEv5Exp/4jfGnGF/4X3+QcSaI40zu36F4/47xHojj
PeYdIM47GKeBOE5j/IlvCH/iM8af3KcD8T7d08SdM2fProeeHtfLUobkg9nM
Xt5aPnEi/AyGhJ9Bi/GzN/VV8Q/1VXEo91UZh+M3wuF4hnH4WMXdVs1Xa3Bz
SM2iWRMFmPff6+0SzSnifPN//cFHeQO8V8xrgvOBgvWaOTdDVQ4k3zj8OR7a
8uzXVUs0QVf1D7+vpV2EbRlJe1xMkkW/Owbx3x278vfYbtynzuY+9V7ZR67r
nRogc2UfmdF+GTgivM1iafKH/72XK/57YYkU6d45nZrAP2pJ97Y3fqG9phyX
0fROht96Z/22vWoEl8lrs/XkrkKg/965BYmponcPMJ7fPejG7x6Y8zul7vye
wGF+T2Avvyf5sZnetTjF71rwexRwl9+jmMfvUQzndw4z+X2MOfw+RqR80ycP
x2psGGkn4z1EAJ1evW2ZUZ0FSx/m7rUYXA7VT2RuuA5MQ9Uyq4xf46rAVJne
x3O8SO/h5PF7OFkGnbeUb6hAs1/3uqUeLwf18d9//ZTKgYn8/t42fg9nNr+H
E/r3+34get9PutcGn31d3+jetemiP1upEXJ2PX/ofSMTpO9fn+owHXU910mV
Wts3wHTlJz+j23JgwZ47LXe3ROpqdT0y5MDmepjntn1Zln0h2GQP2q6q+U53
+OQXBeo3a+FEcdBbhXABnBG+E/RB14PfgZvB7wUZsxwdkoMGLKcHr+tF66Iu
r5vCv6t9wO8QXuHf1Q7h938s+L3BdbzfvvzuUCD/vngq/77Ybgi9L5Rzmd4b
zGJ7it510eB3L4fyuy78jhKI3pk8xO/PTOf3Scz4/UzR+ySi743M+PtqQ/7u
aCa/l/Kb372UZ3/AnH6qjxNrYfmcD/tDz+bj8h7dmkqdM8GH31GR4fdL17K/
2fK7CqJ3oYv4XQV+/xZN+P3bS/z+Qw5/9yLD3/l/j6PvXiSXq0jIhTRC8viS
zfdtInHn/GsVCz8mie4RPuR71Ifv0WM1+3PdyxvxYFtu0qG4y9AWIPt+7c0U
0fvSIP6+NP++A8R/37Gf73U63WtQ43vN7wag+LsB/DsUEP8dSlfSHxNZf2vW
n9/BAGN+B+MO24Hfo4Aqfo/iPttN7PcXKPr9xSD+/eMJ/l6riL/X4vPCZXRe
sITPawa/p7qQ36sRvadqyfe6ku41DOZ7PZ3f55rO7xptZr+SvkPfdUfx94ev
+ftDI/4OfBj/zusMfwc+WYd+t+igR983in636MG/c7Tn7xXH8veKovdd2c9R
lv1cnb9vb+DvDMP4+3ax7+FR9D08v+sFN/hdrxl8v/bxd9Qn6TtqHMDfUZ/i
77EVgb47HcXfnWrz99ua/Ls5U/5+O4vfHX3Ev6P34Ptewt+HK/N3p0/5u9MF
/D25I//Orp6/Jz/F8ecUv1umx/FndHcZqyqtcJxjd3vV94IKyPu28fCGzlUw
ksfn0zhm87jod3z2/L16d/4dX9v/o+u6o3r+v78ZZY/sshqSPbLiyt6bJIqs
EDLK3jN7JCGhQpkhouKm0N577/V+tyQiqV+/no/355ze53z903HP6zzf93lf
z9edj3ufpqLvryPw5+bg3w59go9EnyC1hhzk+uxI1mf3FnPG5mH+qmzOWB/g
Sz+jL6AE+NJoof9psdD/PAT6fw9wqpvQ3zoL790FeNcj6Au4BLzrLR2Bjz2t
J/peZfhYQl9hd/QdPMR5MxLnmYtxnrvhPHtPrRpd2iKNv0pNTDtUBtPSsLXP
lzaTkj6e/w671hPPfxZ2kIqFHeSmsIOGYYscj47IpwNLxuRlfk5nvdZ/1l5S
TpDNi2ZnzIseBzsbCHxjf/T1jAa+cRjwlvboX36P73dJ/XlBvBb2XQ7XxzJc
n1z/Hcn67zD3gwIw9+M75n44Asf4B/1Q+sAxQl9RvNBXZAR9JZt/Ij//H31z
LN83B7+Io+X0552AjF0W5wvZ8eGCUKOL0dQzKURrjmG0bN4+y8/bl60TL+df
WSzOCl42R0q9p6+5doxS6FN7r2X9VMNJT31qTV83Cd1qHTLvXFIqqS8p7XOq
fQRNrX7Zr1hBQg5Blob7r2ZQxrCtrn8d/WkiLShxdZHQ0xUdRo5zTKfO2oe3
VHX2p5t7vttMVpNQ5YB+N4NmppPLmDuGXWr15D8RF3CqiAv4L+IC3XZbrC6o
SFnnUkW2a880Nij4vShmThB1Rn7ypMhP8jbkJ28LOdADyEEbchjdK6DCWrmQ
fw04faC1Yiy3dQsoiNOPoa3NBz7o/kpCfcu2/rHbH0l9hm22Ve6YSh80G6bd
S5FycRe9/d/3JnKJdbMTDxpGkMYCp2Vb+xbypmCFSJ/58exiEj/97ppI+nsr
4K5us2JKuJruecIggp7p5XT8sT2IBk+f4JdTVEht7ZsMU2kQSaOmbjR2vhVN
F7JHD1u9rYg99U9U+DgG8c7gxSWr/kaTL/K9rUS+l18g3/v1/WEPa9XaOK/B
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
830z1F/eZzv/9jVrCyJohV+Zo31qEX06d+vuIcdaOznRxi4vIpAKkgZ/m15T
RD9PFFherYngVQpOgZozA+nAkCfKzb8UUev296/MGBbJfvPOvrr4IYTa4Z5o
2T0X83HPBeausBLmrixCXOaB/lBZPjkTesAX91DL7rnwxD0XZaeuhG0dL6VB
uzzuT96WxiddNl/q+dSPtvyZOnj5MCndXrfymtXGNN6n9j5+rI0/VZV9HttF
JZ+TXfxObA/Oonktnv0zNA+mYF+1SN+8PN4RZNNY52sW9Xj15dHqTWHU5cl+
j3xXCdsWlBZ3vRnNE651rdn0PJncrfrtHHVJStKR6xp80ffijXnBR5v4pNHP
490Hmd7LJaVxW/p3Cc/mUeUNXFL9IujiZk//Pb3zyOP0hFnZK7LZ0vGl17bp
EZTiljKvR3oumSYUTZcaZLP1M7dHje9E0nbtCd8j+tfaMaUR97tOzeNO5sv0
Nm6KoAPpLwwkJ7MpUVttyF2PXP62Oqh98Y1I8mk/PCY7OYu0Jj5x8NmYy8kv
QrpbW8dScmj7P91vp9NH38K8BobZbOOdF/plWia9FHVDGiXqhsSoGz5dZz7/
oNNbmniq9Tu154V03/iR18eMJDoq6DxL0Hk/6JubdlcIUMqjd907mUxPzORH
XQZM/GgZR2MPaJvO2Z5LS7lszlLrLJ7iVfayYnschbrvnNJtdS79ntR0mMbk
LN5/e8HFV7V+znTcQ7Qe9yG6Iw+j8kTMPd6Guf1OmHu8yGiQm/6eWn3cVu3C
rdAo9lyQ79zAUUqPUZ86JupTXDZY1KdM121t2npNLtW06rBg04cMnv1q0noD
yX/vkcvk3uOnwo67YkjK8X33+DwJfst9tCo7FF5Mp+RW5kc8dQrp3bX3D566
RpNW7pSzXWtiKPLZ4pEKXlJu3SbopELPFBo17ub7Sf0D6ZzHPuPHtfHsSJ2G
TxKGh9NXT3/bHVsCyeLATsOUJSX8s7HV0aYHT9HqYfGvf/8LIOfjqq0WVRXS
9sD1yiNr7ebMuwrv1d1D6KKxuL+190txL4wV8h636t9PSh1xP+lt3Dfqgvt6
egwReZiBuJczAvfzquJezkGlj687++aS4c4VNSscsrjbhCnt9UtiKN9r45Dz
hRk04+DB+xOPx/Bdi7s3vo3Np+dZYZWJo5I45NsJqwXRErrwzfuzd3gMJbwP
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
zOvkw0qQz6d5dXKmN83E+dGFnG2E/Gmm3LlqcKXu/HAqzs8/TXF+LMX75ec4
b/3wfruLc8JNlopz4o9zsrief+ikOxb+YSr8t9s4h69wfvphnd/wez9jnUpx
nvmT4Idl53kH9jVC7Itk+2q9UNB9xb5Iti89yOcezs9gyGegOG/UDufNCOdt
hviuSUV81zwC37Wa0AP0AHrJCHpAC3R70BeB3l7oJVoHvRQKvTRZ6B86BT02
FvrnBfpzX6A/VzZfdCLWsRTr0Ces0wu/exd6aRd+dwDoMn01D/QMhaELGm3J
4vZb37ZuHZlJAxtaHK7qnkFNgR8YD/xAHPADxUL/00XYo9bQ/7BfdBx0LdBP
iTiLmmXVxVn8E3GWJvxe2B2+AbuzfXfxJo0pcWTZZbTbwHafaLLyaf2714qo
wa86u0Yawq7ROtg1GT8XYI/a4ndL6/NDHUFfuLbOHpFeoLBHGbBHtsIuc0fY
r7uwXxki3uR0EW/yK8Sbv09P+xe3LZeHliambnJJp0FXiu++HpxGp4Q/wN3h
V1jCH/ACfTboW2R+CHCbt4FLnwbc5kk83wV+hWydQtD3gr4a9OJnurPvKkt4
mZ2yZt+5aXyh6ETbKylRZCb8Ip4t/CKW+UVvhH9FV4V/xZ3gX+2uKI74+TuP
RyVmWdqviaPNhZ4GF19k0Cvh17EL/Mnh8OtcQX8I+jTQzYU/SR/hT0rhT04X
/idZwP/sAv9TDpdFFsBl7cQ6b8Q6JME6L/C7TvAzLfG7b0CHP8zaoC8Qfibv
g585E37mMeGXsjn80mD4pTvN0z+NORrDxacndmkfEkDHP1Tb96j17zUfd7y9
2yubFKT7Xl0OieZn92rcbyjl0iXhz5Oj8Of57wLhzyMuYPl4BPELy8cvsSIe
YRvEI00RjyB+Yfn4JQXPXxPP8x9l8bzsd+XjEcQvLItftEE/Af7vIB7RRjyC
+IXk45cvxfEfKgdJabtz1FNLz1TacWCG4aG/QeSDusxg9B0fRF3mwd2Lq8wz
stnMY2GXq8+ieNWwp30KtXLpwvBmsVs2FXGDxR7TbrWO5fu9d+zYsd2f2Lxp
UIWuhLJdX41/4hhAPf+FmTTRyqAzqAd1FPUgNkZ+LBr30h7GfWcemLv1EHUr
a/TVzkDdqpna58dLzxbzo6l5z4te+JL97Bm7mpiH05Id0WGjtYrJusuJRR21
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
hL/NNxAXmMDfrl9ntNGdDz8Q/jzVCH+e8+DPn/Yt75nwIJd7udwf6bDRjSe3
2bbecn8uHQI/CoIfsgY/Y4XfzvDb+QL89k/g5yL8/wvgp6tl/KFNTfJ5f89X
O7LC0nniDMOmix8n/IffAL6OTwO/IScfMoF85gD/cP6HiO9k+Icbbt47mjV3
pwE1139+CL5NKqFk8iuphNREfETbRXxEIxEfvZTLA8jqUJUiLmM9EZexHuIy
RczrLse87l6Y171GxH3UHHHfesR9d0TcRxdF3EfNEPcBP0kJAh9Cx4APSVpR
dPNalIS7hpdrnu8STlKbVjODylNl8SbfEvEmqSDexHwMWo35GO6Yj4G4leTj
1nARL3OhiJe5EeJlWR6gGPH+YMT7OeCnj+CHfcHPbRGn02oRp9P6+nE61Syq
i9PJEXE68gC8TeQBeAvyALL4+pngk++Bz3d2n6b8GZHLBvp600bHu/GoOeaj
LLNzaSvoWwWdDoPeR+BzeILA53Ax8Dnb39adB/aorjsP3APnYRnop3BOZPS1
iPtyRNxHKYj7QhAflQt9QrehT6oM6/QeZ0LvBULvQd/SMKFvSaZvmwt7Td3g
z6yGvT4v7CApCztIZrCDlcLOkoWws7wEdrYF1ukOu2+MdWI619lxugQ7bgM7
3kXgCVlH4AlJHXhCHYGfpNYCP0lVwE82gL0YDf6DwP/PtolRm1wKOG/Qx8EP
hn+icYa3Lz/9mCmL02k14vRCxL9mQp5cBnnGQJ7IM1As8gypyDNsFvE7zRHx
OyUjfo/Bd70X71EV70t2zv/H+aH/cX5I/vzoNxN44xSBv+Ig4K+qgOP1ETgx
ugOcWIXC5uWq0zN4wvTgTV9f5lB+VNiul2VpFJg2Kuiyykdq9q6Td/U7CU3a
Oll1lW4G7Q68m7LzrzcNsNvt7+4qoZ1WBSNO9cmgKyPLvseV+tLLnucfVqtI
aHOQwX4KzaDu8MM95fzkofDbb8BPjoaffA3rvBDrsGwd2e/2F7/Lst+V8akg
+GQ98PlE0Lkr+NcEfZVYh0eB/9VYZ5f4XXYH/8b43d/wY33Afzn4bw4/3xZx
RxT4r8Tz3vBvf+J5y/rr82qsL8cPy/h5Wp9/1gD/f8X7otniffFHvK8/Ap9M
+siHfEA+pLuSwAc2chfv3RrvfZw4JxSFcxKFc5L69VPfp9USWllxIuNunzRq
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
mKHyd1HVI+Lv+s9K5td9Vjbf7bjYxdQ0QOzieMyfvMrpfpclb9jK3/3Ch+6v
+cOhg38vTSmiuhIvo7USL6NliJd1QZ7RA+CEJwHfO+f8mCnRy1LpsP7p57OO
xNJzs0m+DknZdKpu57iJDRLYe73O+Gf+QezbI7vprZ4FZAT7JRP2ixvkSDL0
eRPYF40gT5teMVuk2+w6N9mZEzXqvgtb90p2afG+mK7APvKD/Oql2EeTrw2e
3CaLx/sUNwqzjOMxQw3qNR6Z/s//Vh9ypDnkSLFTzFGn4cE0rdPKA3Z3QniZ
WTfN+ROKqMqk4ROnWyRwYKJ946gZWdxp0MvUpTPSqNYjbZfW66L4qtmReW83
vOEhXZ/Q/Y6FtBT5swbQT9KQP3sWfrYa0E9WQj+JtFXlq7K5vuSrFiFfNaaB
yn9FW+C/Ku8s/isT4KzeAWcVAD+V498ZR1pMjuJbOw5VPX8njeM0P3ta3c6m
Z5JfwDWqS95EL+QXJIn/iibCf7UG/ivoe9QKeuB06HvlD8v4bTKep2D8WKwn
VNbD4VjPYtAriD+Nr4D+eLfs16iHar+UhP3+wX7vy345Cv66RdD3uiIfORPn
uQ36nhb8ludxnohPcR+sfxTW31TWz25Yf3+sfz78fr+w/htY5xbQu2D9u0Av
l2v4gzafomcdhry6En+f7u1bZVYprZja20necZH8RyrAvnrBD/kB+3LDvnJR
j+KQ1KOgk6hHMW+85INEV5Z8kH74X94PVfeNDOW+0Qzct7ny3+mg/Hf6hf/e
EPqnG95RMfRPQ3kXNFTeBZnhXTwrt+8/x22l8mX+3Yf7mibS2YXPzzu8zaLa
Z+fnZr5N5mtuWi07nctgg2pHP/popNP+E6r3wrkd5L2cwHvRh36YhHd9F++6
yx3V+6Wu9qr3S6vwfrW0VfyBumxQ8Qe6AP7QUfgJGws/4W/gJ7qoIzFC6kiw
BupIHEPeQRfkHawFX8pFneTz6AuwBPz5gtbVrxUsU2jOlTM/anhEklHjSdRo
daldLPyWO4HfaoLfJgm/5aqmwm+1wG/HnJD84vFq/NxI+DmHgJ/ngd9aY34j
1B/4gPoDmg9kfg/EL1IQvyCRO2QjcofqQ+40EHnK3w1U8pRbQJ7+ylLJZd6p
oZLLvAly+ahrYbh7rURavmjH2MsOYfR5X8qNuwvyaYDUWWJrqbPEcaizpCdy
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
n38+qPewEDguF8PuVWY6JfnHkOdZiwbV7TLo1ONit357M/mdjU+8pVMMtUOd
ZBf4vU3g914h87AyT1/Mk1Q/JaDrASVueMqw/+HzTnoaEbR9XPOmg2Yqfq2j
hl9fnt95aF+g2nouGfbAPNll6+NxOdTNywV9GOiaoFfvE1yhuE8OtbA81cdQ
O52z17abWdwyjI5Cv9JG3aT50K9gX9Ae2BcNoJceCjfNPHEzl5Lv9J/rfjaV
oiu3mv7TOoS6zxy34N7AdHo4p354fkgyuQz031FjUQaFrNBYvXlNEV2/PsHf
8NwVL6/iy72CPCLIfFHsEauYFK44/E7aieB0fph0c5XmtTRKPL7u4MLQTF48
6GbFrhUzeG29ZM3Xw2OpTeP0jrrrsjjoyH+9wkOT+aV1cuLoNyn0/mDjxo0z
cujtm/oDT2W8oFu7QoxWjkinyD8OzSNrFNAHkxq1qhvd8zJuk5ZxIzCZ8jA+
QcbzA4xvh/kjZH7ywfwJWM8yWQ+tw3pmY/3lZP3ki/V/q7PnYMLXOK5Q8DnV
NSyPO9tqbV0yLYYi2iZOsYpI5Ny629w3X8vhTUfH5jlHJVJLzVMGmx/Es6Zn
dj/HW6lssbrvmRENsumob+6c2YPu8fuPT82PWrjySz2DhlvSi+nr0/fdG5Ta
N7H1Mpef/xtJncvZDTwzPY8+p+r8se6RRS1HF7YzC3lLdtuvttnlkknzasaO
P5OUQ2ctGu1Z3vmJV8akei4mrTKoV4ztt0aHs4galZR7PvMtl+h0TZs6OpMy
MX+kzM8GmL/ic1lP4ifVeigA62mH9VeV9dNcrF/Zb77sl1Zhv19xPhpyPtQR
51OpzrVHj0d48TvNjO9jU0M59MmdQ8VXi2jM64jl5ercpt3xK4zjYsPpdmZw
q/e2RbT3YL0BLdYHUt5oj7Fa+9JoWKRf3tgxpe98xvCjk7NK9fLZLS7//ZFO
PRpe9fuil019HfwP38mIpZvORX2OL0yl1fPdd24Jyabz7V0/fnmcTA3c8i0q
L4uirD2fbxSV6oujttzzC3ieQo07rAvcUcXX62vikysWg0vtE4zXk/GcifE9
MP9tmZ9XYv7/sB4DWQ93x3pssf5cWT+PwPrbYr+bZL98D/vVxfl8kfOhYJxP
vaJVD3+1ZW60vOEBikmhkKxJzWoW5VEv3VkJn2e6GFbl05Y/wwupZ3rs74kG
MVRFxpOWjOc4jDcI6e33+88FQ/SfJz3UV7/SdVi3ezcuGjqnbjqufTGf6g6K
HvCwWQpVXtk3+qvrFcOBMzW2mQ3Ope16K7IWXUqn8pc6P+ra+JZh8uKlE0dG
ZJDhtt7OkWNyKO7VBw/dVncNLav/p/O9ZxzNqrAx1XVJISVV86+zw/Me6jf5
eyl1nKIwfrOM5+kYr8yfJvNzH8yvrGeIrIe3Yj1Xsf5Tsn6ug/V3x36VuvJK
PfkeOLdqcm7cHef2JcX2aSuf44bNAlpXPzuziK/1f++oPSCSNqVVazWzekyp
0rhuzvIr+fx4iP5a203R9EHeI/eW98j2eI/gS6zwpQngS1tXDclJ7JXLGS+X
TXArlXuWvavOmfwynKybzq14dHIOa8169XLZmnha3PeGZXrVFFrh1aRBR91C
yrQ5aPT311uu0+xrrWH9omjSnRlbD24q4sVO5d7WXHnFq3BYSGy1/RG0EuM/
yvhSm17Gb8Z3M+W7vBrf/WifU6nV4Vxad67xBK1DqbzncLU/9hvfkuGxm1Pz
9YMpodmN2nMnPub5tmvsk2oXU9fPaRVOdyrgz0ljPbPfxNGiEg/v3QVvaVnQ
B8cl7Yoo+5vu2HYXXvMZd8c+c6eHUkW32zkj8op4ZNq44fPcL3pF7Fy9LNsu
9N/4DzKezmJ8F8xfIvPzEswf8/KtW+c9Udyow71H9xe8oj+J2vvSS+2ivY6D
n3fRLqC8VVPnXLJP4BG3Jtw/1vc1dXZNvuYxLYeHv+ndbW3LCNL2yimqt7rU
vtO/PWr/9tL/3X/8vMQZYTQ68lKvAs8w+vnFZGXQiCJKnPLJ59Szl/yzZ41z
tp9DyaRuTIBl6b13Xec6U//VPT778sS+aVvTKezjzOYnuhWzQ9HBVctiL3hd
29ro/ibHYNqJ8REynswx/jvmT5f5qVovmd8Q6+kj6+G+WE9drL+7rJ/7Y/1T
nIbYGjUvoJ6nJ3e0OZhAif5JGdYDgujEs5wRLXxSuGmyQU7Rggj+Walhm/jN
uYocZ8hxToIc94T9NVzsL3KH/dV75iyfo8n53HXBhTp/fyRwgM3030ueBNNW
k/x2duee0oW4scM1m7tRpb/fPq0IKqbejqF3Jp0spGNDfx+73DScQr/FxU4e
HEq7G6T7O9Qt5P7r9+RWavWKh3ld/9g0KYaatzjccJR/Pk/8eDLn1b3HbHGv
b2ztnu8o77zUmfE6LXno1ZCHHtP/tvXuQ0Vs28/24H+bX9B+6z9rLezeUFyD
U73nfiqg6S8bvGxrEsp/coIHekZEUSWXUWs+v8uncb9da+u0i+LRHwI8vxrF
UK6ugTb3LeBGtSebNv8eT6NP7F6Y+SWIhvh1W9kx6A7NcYyb5RnlxiEtzVt1
zymm5PtVWptXyqP0LY5V5+5J5bZjkge90A4kd+QX/IB9ZA376K73vGVGD/Np
95gEHcf8eFpn8txpVame7Ojmbrz8QR71m+U9qH9MBG08fKN1dsskurKt4ueB
foXsNaKe6cczb3hgk7NtBsaG0TW3LzbbMvP4SbvP71o+8+aL46nO1+yUf/58
N/ipLGHXLx8ccGpFVhY/2u3eIi8wmE6mDrA1aJ9JNn/y1pTsKqD1loGfB66K
5d+8yeHWqrfkPGH4so8dSvmlS3L8vreR3FR/8ZfjS7OpvtPLxy618rjL/m3j
77VNpUvOO7rfXRFMK5o9+bWiKJEPNzsRtmdiNEXPOaR9blgerSjokNEstIBN
dp2tPvdZOKcdrRgY5BRJtiOn1XtaK49evVkT4nEwhfXuWze+/zqUmkndFYru
InVXSlCvY7WR/9Wupx7x76+r6nd3LdWzdxvUWulUSHUcxmf8tgniiVtTvRb0
S6dTB/q83XI/h2ot3nimY1o4W2sONIowz6BqfZ2qprzIIq9aA94/c4hl3xZa
HwdVS6Nbkdn7rlhkk+G8qgEbFiezcdtU3eNPYiilmt6yuXtz6bvUOeRBqHPo
jTqBK9/v7z7dOI7PFRa8+uqQwntMu/V/ObpU7vDjrOL3EbytdZcrcYnp7BhU
7JxVapcP+Zzc67R5MK+KamtjPD6daz5aGmy3K4fO22xe9vz7U05Y9fX71+A4
1tZaVVVfu5DuNJlxtFIPZ/q7bYHNjv3HKXFC03b3fxbTtVfNPDvX96KxWZc6
tfyZSCcLH/+0mlBAxWVxxf/w0m9nWthWupdE9UreJE53y+SgpwOm7x2fRllH
s5rUjg2k2UaVe3YNDmaaWUfn6Y4i6jjB0nxYViw3mNncekzPCDp9LedEXHI+
vVo2wHrvzkyeGxKZV9k9nP40Nrhp/yqT6pTti8St0BfJdVObuv7szf6/Ds/7
9NuL6+/4WOh8sJgaLWkfM+R2HLXJ6eT7eVcKzdF61XFt7xwatOBsfJvUJNr0
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
f95G/8QfpRrgj/JkH9HPxR79vD3nfy72wg38qy2xF4xfZS3xLE/k29+swwdw
TR1Yh6bwrazWfCsqFL6VaSu6T66yN0M8Zq8qWG5rpAqqeGtGUNcrskrXnSlT
d3aRujMj/5tYeGT6E5dcgl7ahPVMhy9mJnVn46k7M7goHtSdTafu7LOdU48/
2pemVqc+ybRbdVN9v8zuw8g9d+SvuY7uzoseS2bjoflCe55UIx6G+RQ8Gy+9
utfw/dAyRXw+X1m9+qEklTC3sW/+kGh5RL76D9QxHSZfnXFUFuMMZ5xRJd7M
iXN7rLwKe3UfPPeIsgnZ3f9C7wQJDXDosdI1Xcpvvnb6TZcoyfZoPCy5TZQE
gA8QQJ1dd97HTdTdHyCvuwJ53SnweP4Ej+cGeDyDwF2/Bu76InDXT1IH+iM4
JyOoA92BX8jwyHjgF5rOPo7X+yhmHy14L8qbesw/aZ9L+zTa44dfGhCS/kD8
Z5xr0G90ipp2sppHu+8jxEWfH7WO83Mq7/lREzg/2/jdN+3KF52aESNpsTPU
lQ6X1MzIQvZDLqXLZPQid/So39CLSuxY9CLl91Nq9aFf5qZV3SkT7o/e9fR4
lrTOVH2+GpwuJxsWWXmg9RVVrksF18s55yuE8xCr91F+YR8TLN/vzfdPfl/l
ZlazDJnY7/NF2WXDpf/1kmeL7s7RG88nOXZ5mC7uJ3ZXnRgVKS6Jbp0PfoiQ
203vbRgemp6z3+/Kba4RpZpsLRi2bViEXCMuUIG4wAXiAvgz1Tn8mT/gR9pO
+yXaO9H+xMLPXg75ZvwnRk/uiTzMor/Rqw2O+vP+2l89Cn91U/zV4+GFnH7F
6V35I3tOOsELWX34iRHHHybL321G1Fi/KlkFbU5qX3xHeM57udahfLtkmb+w
7sOR+x+owTGbdk7NipYFW3yvd3JPkWd3Xw5s822S+k+q/fui42KkB/duBvcu
nnsHH6Xy4XcNP2ZIUJe7L4dkqmWX9mX9UmapWhL4ymFsgZuSz25U75lLMlRG
hKN3oeb71NUeXYterhkjQ3n3/bH3l/Lu4AeQLbQvp93kfXWx5H2Z+YYy3y3M
dwPxgtPECzyIF9Qjvy4BvagZepHtTi1PRiBPgpAnhn9z1IL5Q759EXKyIfNt
f2vN38/mZEjr8za1glptVYeajlk3zicmd31WOMcl/vXNyZPf5O2vrP3X1szs
ZNchU/k/9ygftXGjKjy0RvGa824aPc28p6oa72kbvv8132/P90fS35n+Den/
L3kjE/ADl8Sv2/9/4EqZfIlxFj92NHW4g6l/uUL9y3Nwp4PACZwITuDlvHlx
YvLiDI/MC/wqQegtBvegBfgSH8CL+NWSZ27iXIb3IeaZ5t0w/Bq94ImYa+HX
SAYPcxO4xFXAwwwHP/Ocxs9UZcDP5Hyq1ZzDZZxDo3c95/sND86v+Ad+0v4B
ycA/cEbzC6juGrdKaoJbtRK+FQ/Nt6LqwrfSCr4YeChEwBEqCb9MI80vIx++
0PwyUcTN7ZBXBm+hDHH2z8lzG43/0IV4/XfE6w2eUix6cpZFT55AHD+f6Dh+
A/wM0fyuA/H6Y/zuFM2TJf6aJ0sWwpM1kfYA+LMW0F69eHybEy6RUsNz0Luz
M5LUab9KlwOnPJTUUuWdiv22IZdfcgbxa0fdX9XW/eUE/RlfBfK78xg/gXHA
K1bTGcc2u7Gft3+KfOgQ6FXyaKI6G9Xk9xo558zwScHjI8Xg8bnppvkaQk7p
/S13Tu/vz/BH/PNW728z9rf1duerD9alKt+Wx0dViY6RrX0KVPR1uWvyndRY
S3xtF/Gmt8SbfsIPZvTAddi5hrd9Gf3v4zf7jf7UsyuD21ONeqLd4Db4oQ8E
og9ER/ww69yPqVL1ScNnQT1i1Win+9/0vX9X0tBnOlh4ybuAYxxg4QMFh1+K
Y+caHP7V6JmPtJ6pDqJnJsFvFap5K6QkvBWG1yk/+ULJ5NuMJf5yFz9VT/xU
e3frvCDvyrqesQx5Qd9TN9pG142KqRcuulHzsDSHv6kfPCzF4Xl55a/5kibB
81JNjy8PLTiKe6lHKKZxHiSUeoRn4P45ajwK6QMexU7yju5il63CngogH3gt
cfaOxNm7aZwxidZ1VWJwxjaBX9RS4xeJM/hF4zU+m/TX+GxyGXy2T8D5aWTh
s5sCDswd8nVbkn9bd039rSXm73QdCq5OP/BkMmscWnWj/wHXgb/8929WLr5N
BfpPBH/G4PDcBrcnG/yZXeDPbACHrRXf35Tv34O9mcD6LGd9WlhwdON4923B
RakF3mD1nnnwBlUbjTeoUsEbTAQnxJZ9mcq+NNG8lvKN5rWUKHgtvak3/4Pz
k4/z84L6+vG6vl71p77+a3AAbmgcANUQHAD6q0n070P/wfAbPqf/V/RPXa/r
N4vCd1mB+s2WljoCsw7V8UeV0v4o1Qh/1O9+F5r/9WGNyZ8Rkz/jnzffRkzd
hOP5js7Jb1bn1mt0MvUai49+mDFonWstS35Rdfo3tNRlZObNd1IVyf+ZyPeU
JJ+nHt+TkTcfJjevzDFY2wv/OazthTHYC4Y/CN43uY18MDjMtfELBeIXIk6h
vHWcQk0hTjGE+NEObb+rEu20/R5LXGMS/cfS38RZ4nWcReKJsxi+nh7gWPqA
Y2ni3TH0T6S/B36DnfzuG/wGg+AHfApPkCc8QUfIY/yVPMYA8hhNHJO8EWXy
RmqQN2LPeajDeTieF4dWmbzKUMY3+H5+tF+g/3DafWnnvign7ksY96UScYQh
yOeRyGfOrXTj/oZzbpfd/K22/Z1U2dbw/J1px0LVmZYzZVDlxFx9u2C7EXsX
DfZxNfp2m7w4oiqbe03+tjygPsWF/G3yw+U2dWFdyQ83PC99yGPJTx5LmxtP
O5+tmKaUj9/3f9a5rsrXjJ214HyCZOTlo1Gf0z/lqEv1d3PSpPPCl91/W3Zb
+TrH2S/KjpY1ybr+60q2rv8aTN3NdHD+x4NvPA8c45VZ/5z++s1NVek/7udO
tE2S+80albrQ4aH0fPu+5vaGt1WrQE/H1TfjxfOCz6WKU3POwa7yZ281vq2C
R9dpuz0wXuVzb+CRf8Ejmcn4Y8FJNuNXo+5pOnVPntQ93Zz/V9nwJ+dUj/b/
jq5a9JwMmNbz+F8VssSO/hOoC5tC/74tpE3C0LtSce6hUa/TkuXaAZm1yC5R
ZhBH7ov/OQ7/s6lHwC8td2hvgX47Ff32W/RbNz2+qqTHV2GMn27RQ9agh5zQ
3y8d9fergXz/A+TzCPBPhiJvh+h1k9163eTDBL1uffQ6S1O9zmoy6xyg90W+
0PuiktiXH0vEVW/2Ici1eI0h7SMTHqrJ1Tte3/pjcq4c6IkcmIYciJyRNiki
x64Pfx2e4jYgVn4853msSY7+cWvOscIen6RK6Ir4Rl+qWLV+Qbc2/868J3d4
pwxusC/v1Dytb6gw6h+voG+c6Dpy8txP0tX4Nl/cqf7JFclfZv+IoJg4WTfX
179+7WSx9dh5+VGjFHlXKMG5ZPMICT996arnnHvKoXfXOglDQiVrzoXz/Xc8
lkU/1vyyXOXHanOA27xJv8ZIsNuyn+tsztkf9msWvHjN2a/WxMvs8PNMws8T
8uxJ0S2T41VEt3KtY94kyl7/A5/9tz7b91RV5XQ+RTb1+v77x+uuyB370ZHb
hybLAPgjyjwPq/RX8f2uhj/CT/dXi3R/Zfpf0+PLPT2+Wsv4zFfZMd9/mO8F
PV+xZb7ZzHe+nq+Y+f5p5os/6jz+qKL4o8z+glesjJzPfzsvvsRn4EskXE/6
1WPHYzWsS7n2s93vqI3br1atWOVabtxqI35dE7cKG1tggrd7pvTZ0yDn6q52
PZO1vcnl/ZEyjfcimPcim/fCyMmP6tgvW1yNnyHi+sXp50ukScbbDsFpb06p
5Q47yneulyiz4Ru6Ac/FO/IqIzUfvaRuuJAauHybq+GjT9o7JrnXvFQpdrn5
BIcWofLi58QlXoGJsn/CoiI7L8SqZlfbfTPN4bEqf8nDZkmVW2IHz46Vh2Xc
/9BLB+l9l6LsexL7/lXIzNHRc3e5rvYdXuCLHH3uYsXlM+J2pubc/498LvL+
060eHR8ddn0Jn0vjn2od2jlqj2td1+xz4T1uyfLe304/+zZD1lJf70J9fTr1
9W/AdXQG19How+9pb4CebPAed79/XrPs8xQ1YkXdT/P/ekWmuP80qmDTZKve
IkPQW/7U6yMuen3EjvVhndVT1rkr65yo11m9v/RxnZVZZ3fybydTJ9gNu8D4
lwp+1L83ujZl32/qfVdP2fel7DvxRzH8aBuxy6ZuO9uk1qEYNdmvl2uE/wYl
74o4p/hkyHnkT3705GDkz319nmWoPs+ynvM8hfN5hDjIC87nHr1u0kOvmzLr
9gb57IE+7IZ8vs86FLect0rgzrmjD3+KPhwIjtNF8L6egvNzGvyfaPB/TPvw
7pferp6Uo1/a2pVuFX5fFRtj7xu66Jok5n3HJZB33Fevj/ixPi1YH4Nb3gs5
b/gZ28M3VLCcPp+vOJ9jwM0eYMHNNnyj3pZ3sIDGD5QJ2JUHkfOvkNui5ZhK
RI6VJ+5JnFGlEWesRX33LN79ibzjCw/HzBn/+qKUKn/EZ/yn58Un8njhPsmZ
kg87sanlXhSgvYHFfjT24O/FMnL+O+Jq7MFW3Meq+j4qf+5jF+61v77X6jL3
+gXy2cwriXnZ7h0wrGLlXfLXrEdRPxzaKO5N7m2s+iRL1ueV8+o5cn7MZxqn
6I+7GqfoFDhF6G+qB/qbPfrbQ73vqiv6mw/7fg0cxb7Es5YRz6oJvn0j7M1i
2JvgC4kjuH8NkP/D9fcoD/09ynxPzeCP81KvZ3ycl5rCvO7iB7iOH6AV9x1+
KBmF3rgYvW7FLH3+azvpc/6Yc15sqbY3/+B+/cz9OoE87AJOziPk4eiN2t6s
s1bjBRXmfvlihyZrHCGxoz1jq74X12Z/vBfSj3uxEfwW8EzUY8aPIj44Qq+n
zGM9t70u0KFe6g3pkfVV+1sex1RM2FCfMwcyZRbj1EVuZzJOU+51ae77C+a7
D3nbnPeoDPK2NP6BKuCmOrFfSfr71Um+fwDfv5242xsdd5OpxN1GaLkhA7Xc
kNe/ablhcC1eb5t5obrPCtcDBteC+fbh/CxnvgZ3os3Nxqs88q12jQJ3wpK/
IdHoyW9f67qemuAkzMPudkX/tNH6p0xC//yndIs1kT7rXP/suT+olEu62lav
YKHCte9JgFJ9W/27xvVGl4fxq5tnqB1hT9IPFb1t3muVyXvtwHtt9KJtWi9S
+9CL3r+0nR60I1MON2mY/EOhc+rKovh3QTbXzLzUD8zrFvPKyBv/ksrEs+yR
S1Ms9sUg9H8H7IuL6P//yz+An1xmope2QH46MK8sPS9lz7zmrYkNXpiVKl2C
drxdU+S6qlvgu1kuZe5LIDytdhaeVnBFVBz1xcOxH1Pw71VEP3fnfWyHP3A+
+nk0ctvwdJDnr37iXLGeap9eT4lkPflO1U5/p9TjO0+i53tpPV+9Lq31fJe8
fgCZih/Ayodu8luy8tb3ya+0X+r6aWSd4oGu/4R8W6tTSoZyj3n46JNrt+Ri
3naZQLvlXIk5Vwl5z6Fs5hyWwY/EeVbmPPfArrTD7otk36/qd0q10++U8uad
UuhFB5GT7ZCThsctgrohw6dpqZeRaazPUb2eMg67qSR2kzP9nfCr+NG/IvKk
DvK/EvLE5J+44U8ozPvSXfsTJEz7E+RVDe1PQG6otxa5Yc6DuV/hnIfBWj6r
uhb5XGrq9gJ1z2yWzpOW+RbevF15efR0npadlaufN0X/rIg89MrLr6TMO8J8
xcx3NvPtyHs0FP2zJ+uMvqes+p6RD+Y8G/kQTD7wUPKBvcgHbkIebwnyeMPJ
47V50vJZrdUpKurIy7CRLXPWK8F52ZaV8TKzT4eVmxxyvnf/6VoOjglq5Ddj
w2Y3uyf/0e3qG90unrT3Jg+hBfmZ47FP7bR/Rl17qnFRhuKfCeFe/+Ov9d6j
3Gv4zlQA8Zep2Gve5PUVQ68ORK82fMTwr0kA7dXI33tWSefvNSR/Dz+J6mPx
nxj56Us+gD3ycwF2upHPQcjnz8k3a0q+WSp64Oy89yKX35B8A2F8+ZTxDb/b
auY7mfm+KnM7cmRwqnpUP6TBpkanpFnfwMW7QhJz41MbLHlKxv4dgr2wFXvh
u11ar1s1U+s/nug/czhXh7FzH3KuDtTaYf+6YbKkB/brcbNVigpeX6frm/Bw
g0ujwKVRjvj92rPvjvglJrLvV7GLX2n7SAKxjwxfXhH2awX7tQr/5FL8kyfx
T3bb13vaYq9M5WJT4PzJnPfuWdurMTYLIuVYiUjbjdceyrioaeemONxXtW5s
qvPvhlj5PwacZKE=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-3, 3}, {-5, 5}, {-0.9999837659893945, 0.9999837659893945}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8966443574057283`*^9},
 CellLabel->"Out[72]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ln4mpcU9dri5xtqWqsmGERoysdTKVFMaWU7Z1NGpWiYZVW/Mb+OtFFKE0OXk
1BLYNyRDEedZHaRmEr1ARHqpiFJNfB3ftkNHiwqQSZs/JZbC3MTUjVUlcGJO
dfFkLJBYLN1bkyhCRu5jbKLdqreD0PVHh5bCyfHFDVX002wjHB7F+ZSFY8lR
IA0gUK2prVePnPdMFjYPyMTjLYQl+rNHKwhLywVLuMuDm/ku5dypO0si6Lt5
m5t20/h7kcoYPLcwCS+OSUM+vxnEHLwbp/jzAXMoTi7n5Wbh0qEUdTtJpsdH
Y8X/3dvOXUCJS/Q5XiSFfJ6+TZwU8NVokkyfDgmwReM0Fy2Zzst14bhOWLpK
T/1XelqXSd3d3BaDhwdiZavJY0LS4xdIjR0tiumduWmPJwZWVGiKjIzEisEN
8PHoomZa9CcinQhM9I59VFA62Q02DXexaVxtTzQt4aC32bBxLJnKKC5JDIm4
xHGjpS01lpyCpcUt/HhPGa+dqZJC7m0/c6xk8jLqyPIF3hlr7KpXf1nUbVc9
/Rw2bNz6FoHoXSMDO56Oxtuklt4bEEBf/mAsaxFJiskfnwwLwsu9A7CkGdmC
cukYWD1JuEovRWqksZ2rlZ2GGtnpDKjxFkDJzH+O3lFXllCqeDgDUpwR9FL3
CIHRawIoX3rRqXKwer27uo5rirzaPQAD65TB3i7JUoM2f14w7pCXuzI1GOcn
KC/3XFc/WW1a3txH6nQlBXgIjYzI0iq9Bb9uhRzMrh+OhQ281rarWy3IYjtv
mBUeXYQylJNJKfe24hxa+nVyrGorrhSUBVI2V6txBastXTIEVIPqZ+Pi1KLi
7cyepItd1WoNEVWQVLwIxSlRK5qzcFrT0sdW0QxkFySVVUStbR0qkcCBFfxw
jI7cgpmtaqfGnY1F0LBqWQmsCpKei1Wq4agFVQc1qnbqGJMVV8Sanf0zcG5O
ismeBxvIwC2qgD2TFZ++zKus+LROx6OsjNqiObVNG0e67ctpqdg3wMjPduC1
EWkcMxdMeZnmUWkuLa7WyXVro6zb3tZEeorr85d+Idiutv3zxsfH9M8ecdMh
YkI+IesBjXsKW/yhLeWSAHdYUi1RyKJhZ27Z2RPaSuPG/Agp9Mgy5zZvPeM3
7FhRHJ2TjpMr6Ym+Sm/cK/wGEq72E65IknFB1D/pg7y4MEzSCL6bLLhSeU2D
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
cn/mSzorwAzxcYzAJoT/F7OZPTXJ9PR8jNpl4f9YNNHj0QL/i5vS6NQ9mbIZ
oKdj7gj/snaFdOtZofwf4d/DCf83zsfTiMoCNT5Sefgvx9qijKXBAf+34ujy
sTSBvwyKf1uNnzy3NYW6FWXSxLZxtKyzuxidaOy+kd+RC7o2pZHt0qlXy1wq
bZ5Pc3kRuK9vgCwAnVAN2D+chflg9C86zFuEQ3wc5OMwC/IjTuwXna9T9txp
drd0Wt+3WeO630fj3oH6Q4MF6yb2YcXvGRgm+FZ7AI/bQp4H9PeoSkbQ2bPh
hsCMUFbwbmBLvyhX5dc4VgI8DjBvNtk2VhAP2tk/TDYR+HZAHsmHqvwGFtRB
mWJ2GrseBvyxOoSKH+Hn70m1HXJod020ODeGe/NkfSCdmxZA5yYz/J+ZEGDz
l2L8ZyeqA8X5z+mRmy9MxVd/SchEknt1+3x6eU4kvXlPML21KMTOQj/EFkGX
FofQqzMCpB8/hqYcqWI1y5ffWhhI1zaE8hFCn2wMpb9tCqXPNofSF/x5+npV
EH10tz/5+fkJXKpV82VBQF335lRXmvdHa8CAHNcG4+WZJllJVJLejJr63iV9
TLvmNtNNPJy2Bfga7qlGPDaWIvgHy4DujY10b3OAGf+DC/+JSX6XRStXrtw6
ffp0eUTV188zUK8QNLmFq6j9c4x7ePp7ertjJxAvd/MQ0idaSN+6IEemwTuS
BiOob04YRiOaFpCh8wdYWk1jdMvYEhVlXcXyakMPT9rHevbEYC96bqQ3/XmS
D33GurG+NEc2HccHeoxb3q/9H/De35wa37BHK75C5FcXNJHL3QtThf+DC4LA
69uTurEb6M93HmoUy0hhO/7anuK1Q8kjswWHNIvVqUq1RjtBNTunD/pQ6UAC
rxI20fn8y+qtQ5wsPMx6bB34/9ZUV+Aq49T6FTWjuuYx1Koon+7uHK54X8O8
H+9LL84NoLdXB9EnzPsfHg6n357WZY+PhLN+SRDWX98Uo4S9MTPGyN+WLlKa
9xbD58aGcFWZvqqJczKLwXoW+DeZ9W/Vx0v+9Y8Wk+dLZv3ns33owQHJ9Ob6
FKKTzPhTfDwaLcy/cbypTJL5+Rgj9skYg/nA8tkY5GaD+5r5mybn0tUDCBDR
+Vhg/Xk9+RfHi3oKpLKCBOtNbYl0flsGnVmfqfBuTIo07ovrBvJZ6996M57K
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
JdGFksjmnN+RYHXizqp4me9q0tKmEjweZtQSCtOIWto8VLDyTvMGlkeo6aEN
5WvXDjaStPjFbdFU2StXqcs6QnNvKD5Tb1lgnl8eRwfLM/G7d4WylUCEYgS7
8xH5wXKSVrT0FmeObrqZlmr4ce3iqbBFLk3okMj2wy7CEtxcXtxYbytXfWa7
dfzSyIofLsOFVqV44MjBzIf59ggfPCM65dB9Y6PolKR1AiWt8wELzM+XBtE3
7Lwv84XyMkPzR75d2RhC/93CL/mOUIlTIj55DUs5EeHh2y0js+iOsRl0mC/A
z0/AiarmFdwxJB4ZcIanH83r4NHfAk9VOBTtLBwqyE6ijgxOqM0SDU/TmXtR
d5nKmmbCs4tMXo13WYJoFFwCoCq742wh6pSfScV5SbJr1torZNWWRjbHYKqR
wTG+3q15unh1mErU7qETF0ydouXS/EJv6URAh8Gz09RIAmTWkPXBSwLIIsiC
/bUGSHtkNqaybq1oWFG+buH0MtJa5shvPCUOh0Py3vVN+dM47VRPZFOVaflg
Vwy1Yz7ezurzIWB0kh+dHO9Lb0z3p7Mz/E9enO+re+79i226uWtSK0t9udbX
gOTMjkCYtxHVVKD0pBHM074tU1UDJNMNVlsAORVv+DmylcmPwH/Hs4VnbST/
HwymNgRnZVtPs4m9SotP/Jy5nRVFFxaqpPeMTqHUmU8I5EBxHxQmwpQQEnBa
G/uEUvdWuezTk5QT4/vhvu5mtbl7cIwMfD85mcU3X+7+M5Xf86t1mlXn2+zV
P1zgoK8YoZdYeX6zKow+Xx5J5xZh31FTOrswjg6UZ1J5YR6dmBpPb8+MoPMz
/eiJSY3oTE2YbKP7X5h6ZFwaPTg5xUyKG/XsBlOv1cPUByrS6fi0tBsy1VjJ
de3Wxiq02dAZ2jwcaVRb2m7MVB89Y6SRC1OxKO/EilRTeXoYafWjmrHq+xVO
G5rBTbP6kmkqHl3gCcKL/pTUT4SENnePyaID4zPRcGopIaoD0T3ylu0stvXy
zYTopc1NqJgfd1lemIy0Gdw8Tlb6VLZp6CJAUV40u3MojWqnWo5GslMv75hO
Y/gGeO7oz8ITlSx8/KDM7jZDfAKiI1WuHHYS4hMARQHm1kFJtHFgqghPI/Hz
0aIg+nIZ2/FVaKkMoV82oKM9hK5uZWgyQH/fw6/rrfy68u2v/WzP94VKDOjl
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
uDpIepb/kMYijPRSa9TeXhRDs1mr7xmaQRfmh9EXiwLow1l8OjDbXq4Iojem
ovw1mR4cHUPPTwyiQe3zZJMBQnfMN2MiIp4ZoA6fGRLOZvmnEBcg1W/ZYQ0U
4tI8pPdDpn3lxJsRO7F9+mMQzg2izRYom7GK85MlXwv5NrmVdqo6CmcMK10g
fFO1bJWdmlD3lln8M7AJ3tdMXELCwYs9M8Uuw0ev8NPz17agT/7cYHdsuiVQ
Qc6xtn379uYeBqhKpBoMlwrHiqBhWa4qzJPPu+bSpJJO1CtZ0hH1laVozA2W
t3WmxKrp2W2l2qdvqrtJOTwWtKoZtXkG1TbouByUnLS5Mc2qi5JoTvckqSTB
9hp41V0y013tozyCAQYT2WCyN32NqXVuWRC9yIrskQo7rStJpPm90mT11DOT
sZUvgN6eZZeszccLAukTpiJy/6i3e3e2nd5iRYfp39hUfqrCl54b7yOXu4OD
m1Kftnn0r/HBMn53atcsOlIepUjHBvU5Jt0LdUnnNKkppkk1238XqIKUg6NS
6aGKJHGgoNkXK0zD6lKMYnWo31omyFyqRboTVUl0/6Q0canPzUyiHWVZTglX
f0hOu1R3q0uV+l/JimrUXdkbTWO751kr9FxRZ5Pxr0YITe2Y/t8ph7kzH2+P
t1CuocxHqBmU+79E426PMNUb7rxNqbeP18fRlhHZIKHAbd3QbPp8Y0y9YFtW
ksNXkmgFsq0Cty0CN1dz6gas8e//YJ79pEEDJeAyciHgujDcEJWDgEMJc3Vb
Po3axMoytdmdG0k+YjfDDSXL95T50shO2XRbWSy9Am/KR+RX2DLOwu0a9lTs
DpGO8h83RdD+8kwpsXx/YVP6bbWdLi630+fz/emjmX60c0AqvTVNRd6mFmXT
25UY0h1P20pSaXmvDLp3RKz2p37sWWVUmjn79bSinNBNjR2NibU5q1FUHkKX
KmPEnxmKyzL3o6oivBxV2Vaclyx52KF5IRKHM6hmNaPzOiuiGSOYFxQ5qFXz
fJrb2Zf/IqxT8hIC3DnUV/TJO3xmXloReNl7hyO1prW/nnjjQM6BmoY5VIWM
xtkgp6AUy4m/AfRF+y6CcBMHFdHIzumWDgyX4hKNsyHqSy7xNsX8trKEBRMe
kTdA0tSq2NbouS5Imm5UTlSYhs9RVLK4RyxNKUyTqCJmB2EpAtQaOIZquX9h
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"83b735a7-6dc9-4f41-a33c-f372333cf00e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", " ", "x"}], "-", "7"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896647742580629*^9, 3.896647782537715*^9}, 
   3.896647820821181*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"b3446c5d-ec3e-4829-84ff-752f1e5cca10"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], -10, 10}}, Typeset`size$$ = {
    360., {109., 114.35939275435658`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = -10}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`m$$ $CellContext`x - 7, {$CellContext`x, -10, 10}], 
      "Specifications" :> {{$CellContext`m$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{404., {131.63403309800196`, 137.36596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.896647785747902*^9, 3.8966478238218246`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"57618428-96f2-42f0-b79a-a51789e96443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"freq", "*", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"freq", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8966478809559526`*^9, {3.8966484660003667`*^9, 3.8966485138888807`*^9}},
 NumberMarks->False,
 CellLabel->"In[79]:=",ExpressionUUID->"084a083f-e747-49ba-9fa7-12f84a1a4e70"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`freq$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`freq$$], 1, 5}}, Typeset`size$$ = {
    360., {104., 109.37589614100187`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`freq$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`freq$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`freq$$, 1, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{404., {126.63403309800196`, 132.36596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.896647857061263*^9, 3.8966478833855476`*^9}, 
   3.8966485147194376`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"f2b26ae1-64ee-4bc8-bba7-81a90fdf8cf2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{636., 656.25},
WindowMargins->{{-1421.25, Automatic}, {Automatic, 168.75}},
TaggingRules-><|
 "SlideshowSettings" -> <|"Toolbar" -> True|>, "TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7afa9359-7fe4-4d52-9f8c-c7c61cd25b94"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[3739, 112, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c5f1592c-4752-4c86-98c8-089d204a97b6",
   CellTags->"SlideShowHeader"],
  Cell[10053, 298, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6f6c21b3-b6f1-42e5-be72-f7a8cb1c1f68",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1004757, 19115}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 3, 98, "Title",ExpressionUUID->"cfdc85b7-5231-4133-9449-e857906b3f68"],
Cell[741, 27, 684, 13, 150, "Text",ExpressionUUID->"ecb3152d-062b-49ab-9685-69ebfe46c7b6"],
Cell[CellGroupData[{
Cell[1450, 44, 156, 3, 53, "Subtitle",ExpressionUUID->"be174d81-0617-4342-96fb-c1f74a46ceab"],
Cell[1609, 49, 421, 9, 104, "Text",ExpressionUUID->"ae5fcd79-8d99-4f31-9600-9c0c31004902"],
Cell[2033, 60, 157, 3, 32, "ItemNumbered",ExpressionUUID->"fee7b09e-637f-433f-8687-58f5911821e9"],
Cell[2193, 65, 160, 3, 32, "ItemNumbered",ExpressionUUID->"e86d4c37-c552-4f2a-ae5e-44d4e3a2a294"],
Cell[2356, 70, 161, 3, 32, "ItemNumbered",ExpressionUUID->"188a862a-abe6-4c8c-b38b-1fd849d5a82a"],
Cell[2520, 75, 159, 3, 32, "ItemNumbered",ExpressionUUID->"5377f3bb-d850-496e-8685-7c38b7d3342d"],
Cell[2682, 80, 162, 3, 32, "ItemNumbered",ExpressionUUID->"1cbb642e-037b-419c-9cba-38fc23602563"],
Cell[2847, 85, 167, 3, 32, "ItemNumbered",ExpressionUUID->"df96fb61-58d1-439d-8de7-6c09f7e6437a"],
Cell[3017, 90, 209, 4, 32, "ItemNumbered",ExpressionUUID->"1bbec468-b95d-4cc6-8eca-2201d9b5b467"],
Cell[3229, 96, 209, 4, 32, "ItemNumbered",ExpressionUUID->"4a915036-09c8-4964-822c-ff1c9698e1aa"],
Cell[3441, 102, 249, 4, 32, "ItemNumbered",ExpressionUUID->"cb49a242-2cb4-4f59-a560-fe207dfb2cfe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3739, 112, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c5f1592c-4752-4c86-98c8-089d204a97b6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3886, 118, 161, 3, 67, "Section",ExpressionUUID->"5712ec21-4962-4d1d-ad51-6481441f24d2"],
Cell[4050, 123, 287, 5, 28, "Input",ExpressionUUID->"649c27e3-dc96-4403-b300-ae3ba10c3065"],
Cell[4340, 130, 191, 3, 28, "Input",ExpressionUUID->"3b1a4463-7f69-445a-ad06-464ae10b373b"],
Cell[4534, 135, 187, 3, 28, "Input",ExpressionUUID->"fcf10900-9004-472b-ae3d-7646a4db43c8"],
Cell[4724, 140, 275, 5, 28, "Input",ExpressionUUID->"1e56e503-5ef1-4082-bc00-7db10389732b"],
Cell[5002, 147, 161, 3, 35, "Text",ExpressionUUID->"d1ce020d-1238-406a-853a-e2fe68a56a66"],
Cell[5166, 152, 356, 7, 28, "Input",ExpressionUUID->"c8fa79d2-eee8-48c4-9316-37a40d49bc6f"],
Cell[5525, 161, 159, 3, 35, "Text",ExpressionUUID->"7d16275e-7d25-43e0-88ed-40b6801c3a8c"],
Cell[5687, 166, 283, 7, 28, "Input",ExpressionUUID->"e150f3a7-7a7e-4a98-8f96-7cf6afa462f4"],
Cell[5973, 175, 230, 6, 28, "Input",ExpressionUUID->"6e6f11da-f294-416e-a690-aeab5f80903f"],
Cell[6206, 183, 232, 6, 28, "Input",ExpressionUUID->"8e175956-77ea-4920-bc09-1cfd98137fd0"],
Cell[6441, 191, 161, 3, 35, "Text",ExpressionUUID->"5de6e67d-7da3-4921-951a-ac20fb2e7f31"],
Cell[6605, 196, 137, 3, 32, "WolframAlphaShort",ExpressionUUID->"4738b626-7675-42ee-93b2-0a44184914c9"],
Cell[6745, 201, 270, 5, 28, "Input",ExpressionUUID->"7a5b4706-07cb-4d0d-9ced-700d54d19955"],
Cell[7018, 208, 367, 7, 28, "Input",ExpressionUUID->"b11e6210-cc4e-4599-92c8-2c7f86e7b0f6"],
Cell[7388, 217, 313, 6, 28, "Input",ExpressionUUID->"3f462caf-478c-4dc9-baa9-e74e1bacb3bf"],
Cell[7704, 225, 437, 9, 28, "Input",ExpressionUUID->"3e033b0f-f880-4df8-a01e-78a4d9240a1b"],
Cell[8144, 236, 285, 7, 28, "Input",ExpressionUUID->"38f2cc01-8148-4f78-ac32-83563802e2f8"],
Cell[8432, 245, 335, 7, 28, "Input",ExpressionUUID->"81101c3b-2496-412a-b304-873fc7bc587f"],
Cell[8770, 254, 287, 7, 28, "Input",ExpressionUUID->"e2aaf9aa-8fd0-480e-8dd9-f3457147a4cc"],
Cell[CellGroupData[{
Cell[9082, 265, 197, 3, 28, "Input",ExpressionUUID->"a1c76086-77bb-4191-b67e-0d5b50834e7a"],
Cell[9282, 270, 170, 3, 48, "Output",ExpressionUUID->"e1fae550-b6a5-4e83-98f6-c729f23bb92e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9489, 278, 176, 4, 45, "Input",ExpressionUUID->"79fad8f6-4447-4be9-a978-f6751b411cf0"],
Cell[9668, 284, 168, 2, 32, "Output",ExpressionUUID->"e78af02a-6421-497a-a721-dc3c9045462f"]
}, Open  ]],
Cell[9851, 289, 153, 3, 28, "Input",ExpressionUUID->"6a3e9b5e-065d-40e0-bb53-741da4b6a018"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10053, 298, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6f6c21b3-b6f1-42e5-be72-f7a8cb1c1f68",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[10200, 304, 310, 5, 67, "Section",ExpressionUUID->"d874628d-cde6-4de0-ad14-c44c57a7d696"],
Cell[CellGroupData[{
Cell[10535, 313, 376, 6, 28, "Input",ExpressionUUID->"d032a92e-4325-46fe-b7d7-5e8e8ade9f79"],
Cell[10914, 321, 151, 2, 32, "Output",ExpressionUUID->"f1d4d74b-2bed-4aad-a8ea-e090e7dff38c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11102, 328, 231, 4, 28, "Input",ExpressionUUID->"57cd8a72-6f66-44dd-bf55-38ef91e80885"],
Cell[11336, 334, 151, 2, 32, "Output",ExpressionUUID->"62b590f7-2dc7-43b1-a850-e33a61925321"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11524, 341, 228, 4, 28, "Input",ExpressionUUID->"4f1a4004-c5ee-4c5f-8826-48a02a74f0b4"],
Cell[11755, 347, 151, 2, 32, "Output",ExpressionUUID->"b3b3627d-af96-42f5-8b37-70dacee290de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11943, 354, 287, 6, 28, "Input",ExpressionUUID->"3578fb7a-f0ad-4a0c-bf57-414a8812c8e5"],
Cell[12233, 362, 152, 2, 32, "Output",ExpressionUUID->"32d1c636-f7a8-48aa-989e-bb4a1d7c8aed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12422, 369, 227, 4, 28, "Input",ExpressionUUID->"5429b464-8f37-477b-830e-dbc3f5fd458b"],
Cell[12652, 375, 169, 3, 48, "Output",ExpressionUUID->"0043142e-fb06-4885-ad71-db5de59d5dda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12858, 383, 230, 4, 28, "Input",ExpressionUUID->"0abce164-53a9-462e-a791-27d2b2c58b64"],
Cell[13091, 389, 151, 2, 32, "Output",ExpressionUUID->"123ed382-3773-4e4a-8af5-62bb4bc2b87e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13279, 396, 236, 4, 28, "Input",ExpressionUUID->"d49aa7fc-c5eb-4095-8aea-1c4b0b6cd69c"],
Cell[13518, 402, 149, 2, 32, "Output",ExpressionUUID->"ad53f5e0-79f3-485d-8a82-5eb7055f2814"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13704, 409, 258, 5, 28, "Input",ExpressionUUID->"e1ca9380-1853-4082-912f-c2bcfffac956"],
Cell[13965, 416, 149, 2, 32, "Output",ExpressionUUID->"24bbe336-666e-4b4f-94bb-b3c4d6e44add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14151, 423, 238, 4, 28, "Input",ExpressionUUID->"112506ac-b3e1-4c6e-8d5e-846b9cbb3667"],
Cell[14392, 429, 174, 2, 32, "Output",ExpressionUUID->"6adc8313-f431-428d-8d04-72c9f792dd48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14603, 436, 213, 3, 28, "Input",ExpressionUUID->"e5ab2d6c-ef12-4426-9d24-e1db01db5be7"],
Cell[14819, 441, 177, 2, 55, "Output",ExpressionUUID->"bdb9437f-fa2c-4ae7-b04c-4e691fb1b9fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15045, 449, 259, 4, 67, "Section",ExpressionUUID->"b939623c-e98f-4c13-870e-8c6588ac6bcd"],
Cell[15307, 455, 302, 5, 28, "Input",ExpressionUUID->"51fe7aeb-ff12-4bf5-a565-6dffa958a395"],
Cell[15612, 462, 115, 1, 28, "Input",ExpressionUUID->"e63fa8b5-c56d-4681-8c08-cdc52a7eb8f9"],
Cell[15730, 465, 158, 3, 35, "Text",ExpressionUUID->"fbd16529-bc4c-4653-9371-4a084c1654d6"],
Cell[15891, 470, 204, 5, 28, "Input",ExpressionUUID->"93477270-4ec6-4324-b979-36ea9b399e4a"],
Cell[16098, 477, 129, 2, 28, "Input",ExpressionUUID->"4151270c-f2c1-4c28-ac42-5225d17fd615"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16264, 484, 177, 4, 67, "Section",ExpressionUUID->"852f2ba1-7936-4c52-841f-48866a5c462c"],
Cell[16444, 490, 311, 5, 35, "Text",ExpressionUUID->"4c633a31-81d0-4e91-9ff1-528ffab705ab"],
Cell[16758, 497, 153, 3, 35, "Text",ExpressionUUID->"f0efbbdf-9c53-463c-9e7f-d080a9146db0"],
Cell[16914, 502, 190, 4, 28, "Input",ExpressionUUID->"268ffe94-196f-47a1-9bc3-07d9d38b8c58"],
Cell[17107, 508, 190, 4, 28, "Input",ExpressionUUID->"a713608c-2532-4ec0-9f49-d000204d809c"],
Cell[17300, 514, 239, 5, 28, "Input",ExpressionUUID->"8417752b-0636-401f-90a3-9afb6eb5ed7c"],
Cell[17542, 521, 261, 6, 28, "Input",ExpressionUUID->"5313aeb3-bc0c-4784-a114-25eab51f8a56"],
Cell[17806, 529, 274, 6, 28, "Input",ExpressionUUID->"1f8aeab4-a112-4c5b-b71f-0abe8bee75a1"],
Cell[18083, 537, 312, 6, 48, "Input",ExpressionUUID->"0e5815ec-d434-4fa6-a37f-f82afef9219f"],
Cell[18398, 545, 567, 14, 162, "Input",ExpressionUUID->"0b0eb9bd-a4c2-4383-a292-f82fa740c1bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19002, 564, 321, 5, 67, "Section",ExpressionUUID->"97788d0a-bc7f-40eb-91a0-e3c73b0306df"],
Cell[CellGroupData[{
Cell[19348, 573, 572, 13, 28, "Input",ExpressionUUID->"e52a1c6f-3a6f-4e11-bf91-3125da5b5660"],
Cell[19923, 588, 819, 25, 53, "Output",ExpressionUUID->"f2122c13-5920-4578-bedd-e9bfd9926ec9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20779, 618, 14850, 362, 67, "WolframAlphaShortInput",ExpressionUUID->"a55de065-3b7d-4962-98ed-b1930240172c"],
Cell[35632, 982, 742, 24, 53, "Output",ExpressionUUID->"38352687-910d-4460-a66b-a7f3a31f7633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36411, 1011, 14152, 347, 67, "WolframAlphaShortInput",ExpressionUUID->"e2f2643e-50c3-483d-8ea9-993cd68103cf"],
Cell[50566, 1360, 228, 4, 32, "Output",ExpressionUUID->"6efd41dc-0f50-425d-a46f-5d8b82baf741"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50831, 1369, 19532, 453, 75, "WolframAlphaShortInput",ExpressionUUID->"6ee2df17-9376-4faf-b8b1-315214f8b3a3"],
Cell[70366, 1824, 279, 6, 41, "Output",ExpressionUUID->"5a25d7dd-e959-4a58-ad6b-d4bfe542d775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70682, 1835, 333, 8, 28, "Input",ExpressionUUID->"155fce8d-dcc0-4d8f-8634-a03a187e7b9e"],
Cell[71018, 1845, 478, 13, 41, "Output",ExpressionUUID->"de9e7422-ee13-47bb-908f-8f63dffa8f92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71533, 1863, 198, 3, 28, "Input",ExpressionUUID->"23cf7c72-1fb7-4638-8100-07c3f19a56f0"],
Cell[71734, 1868, 217, 4, 41, "Output",ExpressionUUID->"017219ee-1a96-4481-9665-dd8236723797"]
}, Open  ]],
Cell[71966, 1875, 210915, 4203, 97, "WolframAlphaShortInput",ExpressionUUID->"cdd611ed-adfc-4625-9407-9decedbef65c"],
Cell[282884, 6080, 154, 3, 28, "Input",ExpressionUUID->"494421b4-3c5a-4baf-8c13-dbb91657cc06"],
Cell[CellGroupData[{
Cell[283063, 6087, 194, 4, 28, "Input",ExpressionUUID->"127f009a-f00d-45f7-8b73-9d86b85c3863"],
Cell[283260, 6093, 38091, 756, 115, "Output",ExpressionUUID->"2563f8f1-02e6-406f-9831-aaa1c21ebf73"]
}, Open  ]],
Cell[321366, 6852, 242, 5, 29, "WolframAlphaShortInput",ExpressionUUID->"9714372e-c09a-4549-a230-6be272c59283"],
Cell[CellGroupData[{
Cell[321633, 6861, 140035, 2712, 67, "WolframAlphaShortInput",ExpressionUUID->"74901a7a-0e80-4070-b10c-f1175498ce38"],
Cell[461671, 9575, 16301, 285, 185, "Output",ExpressionUUID->"b4d87548-e940-406a-b46f-58e6b716312f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478021, 9866, 162, 3, 67, "Section",ExpressionUUID->"6055b929-8ed5-48c3-a199-b132800b876a"],
Cell[478186, 9871, 316, 8, 28, "Input",ExpressionUUID->"f60b91e1-3f9d-41cf-8866-ff8b73fdaa30"],
Cell[478505, 9881, 182, 4, 28, "Input",ExpressionUUID->"7e2b1202-ed76-4988-bf76-c968c0833ca7"],
Cell[478690, 9887, 524, 13, 28, "Input",ExpressionUUID->"6d2dd7f5-9501-4a14-a2fd-31ed4b034569"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479251, 9905, 212, 4, 67, "Section",ExpressionUUID->"c4dfb24a-45c9-400f-b116-23b8c944ea9d"],
Cell[479466, 9911, 310, 7, 28, "Input",ExpressionUUID->"b4fa2994-a8b7-462f-bbb1-e6fd782b588d"],
Cell[479779, 9920, 189, 4, 28, "Input",ExpressionUUID->"ce96a52e-f033-4563-b3c4-ebf88351e5b4"],
Cell[479971, 9926, 312, 8, 28, "Input",ExpressionUUID->"61c2dfa0-197b-4a60-bf47-944740ca070b"],
Cell[480286, 9936, 213, 5, 28, "Input",ExpressionUUID->"94ce6fca-a22c-4a64-9cbf-15353c8ac2c0"],
Cell[480502, 9943, 156, 3, 28, "Input",ExpressionUUID->"8b6aacf3-da81-411d-ae2b-9eb4cbae3757"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480695, 9951, 203, 4, 67, "Section",ExpressionUUID->"eb4db081-f279-4149-9139-bb99c32ccacb"],
Cell[CellGroupData[{
Cell[480923, 9959, 461, 10, 28, "Input",ExpressionUUID->"1d0f40c8-30a4-48fc-b81c-966e8845a8dc"],
Cell[481387, 9971, 333, 8, 32, "Output",ExpressionUUID->"cff24c36-9061-4a62-a0e6-b53b1b027f8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481757, 9984, 260, 4, 28, "Input",ExpressionUUID->"b754b86d-78f2-4688-a378-edca045df1ce"],
Cell[482020, 9990, 196, 4, 32, "Output",ExpressionUUID->"38bd4f56-3ced-4f25-8893-be59e6997197"],
Cell[482219, 9996, 688, 13, 28, "Message",ExpressionUUID->"4518d2f8-e800-4c72-a4d4-61775c2f8518"],
Cell[482910, 10011, 372, 10, 32, "Output",ExpressionUUID->"26a0906d-00dc-4e52-b4e6-ffa28b3574d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483319, 10026, 609, 18, 28, "Input",ExpressionUUID->"a368c2ea-a050-443c-bfef-5ddedc05f8a2"],
Cell[483931, 10046, 517, 16, 32, "Output",ExpressionUUID->"8a889901-d0f7-4b7b-bab2-40f36d4beaa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484485, 10067, 215, 3, 28, "Input",ExpressionUUID->"2dd62be0-221d-420c-b531-9abc9b5a1311"],
Cell[484703, 10072, 220, 4, 32, "Output",ExpressionUUID->"09ac969b-255d-4ee0-b806-36b7b9d071b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484960, 10081, 228, 4, 28, "Input",ExpressionUUID->"724eda57-a93e-4e18-9639-705d3c94810a"],
Cell[485191, 10087, 344, 9, 32, "Output",ExpressionUUID->"f3e949af-db56-432f-82cc-aaf266da1cd3"]
}, Open  ]],
Cell[485550, 10099, 211, 3, 28, "Input",ExpressionUUID->"da7befb4-64b1-46e6-b0ef-54f216d6b2cd"],
Cell[CellGroupData[{
Cell[485786, 10106, 195, 4, 28, "Input",ExpressionUUID->"f9d4998d-b3ec-4388-a7ad-1400ac76cef0"],
Cell[485984, 10112, 196, 4, 32, "Output",ExpressionUUID->"7a0a32eb-8b24-49e1-9fe1-db9b6ce21367"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486217, 10121, 206, 3, 28, "Input",ExpressionUUID->"ba2b72e9-c892-401a-b5ad-55f128f292c5"],
Cell[486426, 10126, 168, 3, 32, "Output",ExpressionUUID->"13851e7a-80c9-41bc-bb88-eca97089ad7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486631, 10134, 368, 7, 28, "Input",ExpressionUUID->"0216e79d-cc78-4512-8520-8b9f0691b269"],
Cell[487002, 10143, 499, 13, 32, "Output",ExpressionUUID->"e2f6314b-2974-4f7b-9a40-aaf2d648738a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487538, 10161, 240, 4, 28, "Input",ExpressionUUID->"fc2a36ed-95aa-4cd4-8c53-d9fa3d17dd92"],
Cell[487781, 10167, 646, 19, 62, "Output",ExpressionUUID->"6a015d42-e8d3-4308-a5b4-f4c6a98c875d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488464, 10191, 353, 5, 28, "Input",ExpressionUUID->"f95972d3-4be3-4278-8587-e67ecda21a35"],
Cell[488820, 10198, 514, 13, 32, "Output",ExpressionUUID->"42c8c818-c071-44d7-9f42-b0680c7f328f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489371, 10216, 256, 5, 28, "Input",ExpressionUUID->"47451e5d-fe1d-44ed-81e5-d4d6a4a7354c"],
Cell[489630, 10223, 384, 7, 32, "Output",ExpressionUUID->"55154431-b5a5-4380-b5ef-3f76d838202b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[490063, 10236, 330, 5, 67, "Section",ExpressionUUID->"d529fb8c-32fb-4e25-b533-020be0b96b3d"],
Cell[CellGroupData[{
Cell[490418, 10245, 728, 18, 28, "Input",ExpressionUUID->"c92c7fd8-8500-4e02-93fb-5f6dbc7ab247"],
Cell[491149, 10265, 495, 14, 32, "Output",ExpressionUUID->"ed0a4d16-5ff8-47fb-8819-3955aaa5db29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491681, 10284, 249, 5, 28, "Input",ExpressionUUID->"e14284a7-9d2c-470b-83de-6105f98cad8c"],
Cell[491933, 10291, 168, 3, 32, "Output",ExpressionUUID->"cb955cb9-224b-4175-8b27-5318ecf9b5c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492138, 10299, 295, 7, 28, "Input",ExpressionUUID->"66e85a9b-672d-453a-9232-879ce7012ab2"],
Cell[492436, 10308, 169, 3, 32, "Output",ExpressionUUID->"4866919c-b781-46df-8ba3-66b7a1d170d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492642, 10316, 177, 2, 28, "Input",ExpressionUUID->"68448ea7-6dfb-429c-b75d-d62b82b63f10"],
Cell[492822, 10320, 498, 14, 32, "Output",ExpressionUUID->"b47439e9-faab-42f2-98fc-8970d3c95d83"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[493369, 10340, 258, 4, 67, "Section",ExpressionUUID->"8542ea68-0361-4cb8-810c-c3c0295082e1"],
Cell[CellGroupData[{
Cell[493652, 10348, 353, 9, 28, "Input",ExpressionUUID->"96691166-fa48-40dc-b098-403bcfbf7d95"],
Cell[494008, 10359, 3362, 74, 239, "Output",ExpressionUUID->"38fd88ca-439d-4346-ab2a-5a58affe6ce6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497407, 10438, 14499, 354, 67, "WolframAlphaShortInput",ExpressionUUID->"100c934a-0a32-4540-9c49-e6f3d911bd55"],
Cell[511909, 10794, 18506, 323, 239, "Output",ExpressionUUID->"a7b9aee5-4404-4891-9587-f5319ef068cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530452, 11122, 15836, 381, 85, "WolframAlphaShortInput",ExpressionUUID->"dd0d3f70-d2b5-43f2-877d-8f466515c519"],
Cell[546291, 11505, 453400, 7481, 300, 229404, 3808, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"83b735a7-6dc9-4f41-a33c-f372333cf00e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999728, 18991, 542, 15, 28, "Input",ExpressionUUID->"b3446c5d-ec3e-4829-84ff-752f1e5cca10"],
Cell[1000273, 19008, 1674, 33, 288, "Output",ExpressionUUID->"57618428-96f2-42f0-b79a-a51789e96443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001984, 19046, 555, 15, 28, "Input",ExpressionUUID->"084a083f-e747-49ba-9fa7-12f84a1a4e70"],
Cell[1002542, 19063, 1712, 34, 301, "Output",ExpressionUUID->"f2b26ae1-64ee-4bc8-bba7-81a90fdf8cf2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

